


insert into bethadba.parametros(i_ponto,i_unidade,maskunidade,autoandamento,tiponaoresp,taxasnaopagas,diasant,diasantouv,andouvidoria,maskouvidoria,maskatendimento,estornar_enc,protecao_ole,
							    senha_ole,excluir_parec,mail_andamento,mail_padrao,mail_direto,mail_server,mail_protocol,usa_grupo_solicitacoes,grupo_solicitacoes_padrao,i_aplicacao,
								usa_grupo_ouv,grupo_padrao_ouv,cedente,cod_ouv,i_chave,alteracodigo,apensacao,estornar_retiradoc,aviso_proc_usr,diasrel,agencia,conta,perm_parecer,procedencia,
								convenio,perm_movimentacao,alterasolicitproc,perm_parado,autentica,usuario_email,senha_email,email_padrao,formato_inscricao,autenticadora,observacao,
								gerar_perm_pareceres,perm_mov_anexacao,prazo_andamento,altera_data_envio,altera_data_receb,formato_2avia,perm_proc_encerrado,sugerir_ano_proc,perm_solicit,
								tp_taxas,consulta_simpl,protocolo_ssl,porta_email)on existing skip
values (1,null,null,'S',1,'N',null,null,'D','#####/AA','#####/AA','N','0',null,'N','N',null,'N',null,null,'N',null,1,'S',null,null,null,1,'S','N','N','N',null,null,null,'T','3',null,'N','N',
		'P',null,null,null,null,null,null,null,'N','P',null,'N','N','1','N','S','T','N','N','N','25')
		;
		
	-- bug BTHSC-8141 Tabela de contribuição (segurado) a partir de 2014 não migrou.	
	-- bug BTHSC-8190 Dedução por dependente de 2015 à 2023 não migrou
	rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;

insert into bethadba.tabelas 
SELECT 

number(*) +1000as i_tabelas,
convert(varchar(7), dtReferencia, 15) as dt_vigencia_ini,
convert(varchar(7), dtReferencia, 15) as dt_vigencia_fin,
vlFinalIntervalo as vlr_sal_min,
VlDependente as vlr_dependente,
0 as vlr_min_irrf,
vlFinalIntervalo as vlr_piso_sal,
10 as vlr_min_prev_est,
80 as vlr_max_prev_est,
35 as vlr_sal_fam_est,
35  as vlr_sal_fam_apos,
35 as vlr_sal_fam_esp,
5000.00 as vlr_teto_salarial,
null as perc_sest_autonomo,
null as perc_senat_autonomo,
null as i_atos
from  gp001_inss ,gp001_IR
where gp001_inss.cdTabelaIR = gp001_IR.cdTabelaIR
ORDER BY dtReferencia DESC, sqIntervalo
	
		
--------------------------------------------------
-- 06) Planos Salariais 
--------------------------------------------------
-- BUG - BTHSC-8179  Planos de cargos e salários
insert into bethadba.planos_salariais(i_planos_salariais,nome,data_inicio,masc_classe,masc_referencia)on existing skip
--values(1,'PLANO GERAL','1','!','###');
select cdEstruturaSalarial,dsEstruturaSalarial,'1','!',dsMascara from gp001_SALARIOESTRUTURA

commit
;

--------------------------------------------------
-- 07) Planos Faixas 
--------------------------------------------------
insert into bethadba.planos_faixas(i_planos_salariais,i_faixas,num_direito_altsal)on existing skip
values (1,99,1);

commit
;




--------------------------------------------------
-- 08) Motivos Resc 
--------------------------------------------------
--BUG BTHSC-8186 Não migrou todos os Motivos de rescisão da base concorrente
insert into bethadba.motivos_resc(i_motivos_resc,i_tipos_movpes,descricao,dispensados,sair_fumbesc,num_caged,motivo_rais,cod_saque_fgts,movto_gfip,i_tipos_afast,
								  i_tipos_movpes_subst)on existing skip
select number(*)+15,null,DsDesligamento,5,'N',CdCaged,CdRais,null,null,7,null from tecbth_delivery.gp001_tipodesligamento 

;
alter table gp001_tipodesligamento add (i_motivos_resc integer);
update gp001_tipodesligamento 
set i_motivos_resc = if CdDesligamento = 1 then 2 else
                      if CdDesligamento = 2 then 1 else  
                      if CdDesligamento = 3 then 16 else
                      if CdDesligamento =  4 then 7 else  
                      if CdDesligamento = 5 then 4 else  
                      if CdDesligamento = 6 then 17 else 
                      if CdDesligamento = 7 then 12 else 
                      if CdDesligamento = 8 then 18 else 
                      if CdDesligamento = 9 then 19 else 
                      if CdDesligamento = 10 then 8 else 
                      if CdDesligamento = 11 then 20 else 
                      if CdDesligamento = 12 then 21 else 
                      if CdDesligamento = 13 then 22 else 
                      if CdDesligamento = 14 then 23 endif endif endif endif endif endif endif endif endif endif endif endif endif endif
where i_motivos_resc is null;
commit
;
alter table gp001_tipodesligamento add i_motivos_apos integer;
update gp001_tipodesligamento set i_motivos_apos = 3 where CdDesligamento = 4;
commit
;


--------------------------------------------------
-- 09) Tipos Afast 
--------------------------------------------------
--BUG BTHSC-8050 Concatenar código do afastamento do banco concorrente com o nome do afastamento no concorrente

insert into bethadba.tipos_afast(i_tipos_afast,i_tipos_movpes,descricao,classif,perde_temposerv,busca_var,dias_prev)on existing skip
select number(*)+21,null,cdAfastamento||' - '||DsAfastamento,1,'N','N',null 
from tecbth_delivery.gp001_motivoafastamento 
--BUG BTHSC-6966
--where cdAfastamento in(6,7,8,9)
;
commit
;



--------------------------------------------------
-- 10) Vinculos 
--------------------------------------------------
insert into bethadba.vinculos(i_vinculos,i_motivos_resc,i_adicionais,descricao,natureza_rendim,sai_rais,categoria_sefip,sai_caged,codigo_rais,vinculo_temp,tipo_vinculo,gera_licpremio,
                              tipo_func,tipo_transporte,obrig_datafinal,desc_regime_prev) on existing skip
values (13,null,null,'Inativos/Aposentado', '0561', 'N', 1,'N', null, 'N', 3,'N', 'F',null, 'N',null)


--insert into  bethadba.vinculos (i_vinculos,i_motivos_resc,i_adicionais,descricao,natureza_rendim,sai_rais,categoria_sefip,sai_caged,codigo_rais,vinculo_temp,tipo_vinculo,gera_licpremio,
   --                           tipo_func,tipo_transporte,obrig_datafinal,desc_regime_prev)
--select 14+number(*),null,null,DsVinculoEmpregaticio,'0561','S',1,'S','10','N','1','N','F',null,'N',null from gp001_vinculoempregaticio;

--bug BTHSC-7997 Não migro todos os vínculos empregaticios da entidade



if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_vinculos') then
	drop procedure cnv_vinculos;
end if
;



begin
	// *****  Tabela bethadba.vinculos
	declare w_i_vinculos smallint;
	declare w_i_motivos_resc smallint;
	declare w_i_adicionais integer;
	declare w_categoria_esocial integer;
	declare w_categoria_sefip tinyint;
	declare w_tipo_vinculo char(1);
	
	ooLoop: for oo as cnv_vinculos dynamic scroll cursor for
		select 1 as w_i_entidades,CdVinculoEmpregaticio as w_CdVinculoEmpregaticio,DsVinculoEmpregaticio as w_descricao,'0'||cdDirf as w_natureza_rendim,cdCategoriaTrabalhador as w_cdCategoriaTrabalhador,
		       coalesce(CdVinculoRais,10) as w_codigo_rais,tpRegimeContrato as w_tpRegimeContrato ,(select distinct categoriatrabalhador from tecbth_delivery.gp001_RAIS where cdvinculo = cdvinculorais) as w_categoriaesocial
		from tecbth_delivery.gp001_vinculoempregaticio
	do
		// *****  Inicializa Variaveis
		set w_i_vinculos=null;
		set w_i_motivos_resc=null;
		set w_i_adicionais=null;
		set w_categoria_sefip=null;
		set w_tipo_vinculo=null;
		--BTHSC-8004 Não migrou informação Sai na RAIS e código da RAIS para todos os vínculos
       -- set w_codigo_rais = null;
	   --BUG BTHSC-8002 Não migrou categoria do trabalhador corretamente.
	set w_categoria_esocial=(	CASE
 
WHEN w_descricao = 'INATIVOS PAGOS RECURSO TESOURO'THEN  701
 WHEN w_descricao = 'INATIVOS PAGOS RECURSO PREVID 'THEN  701
 WHEN w_descricao = 'PENSIONISTAS - RECURSO PROPRIO'THEN  701
 WHEN w_descricao = 'BENEFICIARIAS (PENSAO JUDICIAL'THEN  309
 WHEN w_descricao = 'JOVEM APRENDIZ                'THEN  701
 WHEN w_descricao = 'ESTAGIARIO                    'THEN  901
 WHEN w_descricao = 'BOLSISTAS                     'THEN  903
 WHEN w_descricao = 'CONSELHO TUTELAR              'THEN  701
 WHEN w_descricao = 'CONTRATO CLT INDETERMINADO    'THEN  701
 WHEN w_descricao = 'AUTONOMOS                     'THEN  701
 WHEN w_descricao = 'CARGO EFETIVO - VINCULO RGPS  'THEN  701
 WHEN w_descricao = 'FUNCAO DE CONFIANCA           'THEN  701
 WHEN w_descricao = 'SECRETARIO REC. RESTRITO      'THEN  701
 WHEN w_descricao = 'CARGO COMISSAO - REC INTERNO  'THEN  701
 WHEN w_descricao = 'SERVIDOR CEDIDO               'THEN  410
 WHEN w_descricao = 'BENEFICIO PREVIDENCIARIO      'THEN  701
 WHEN w_descricao = 'PENSIONISTAS - RECURSO PREVID 'THEN  701
 WHEN w_descricao = 'EMPREGO PUBLICO               'THEN  701
 WHEN w_descricao = 'CONTRIB IND -AUTONOMO EM GERAL'THEN  701
 WHEN w_descricao = 'TRANSP AUTONOMO DE PASSAGEIRO 'THEN  701
 WHEN w_descricao = 'TRANSP AUTONOMO DE CARGA      'THEN  701
 WHEN w_descricao = 'MEDICO RESIDENTE              'THEN  902
 WHEN w_descricao = 'CONTRATO PRAZO INDETERMINADO  'THEN  111
 WHEN w_descricao = 'SENTENCA JUDICIAL             'THEN  701
 WHEN w_descricao = 'CONSELHEIRO JETON             'THEN  305
 WHEN w_descricao = 'READMISSAO JUDICIAL           'THEN  701
    ELSE w_categoriaesocial
END);
		/*// *****  Converte tabela bethadba.vinculos  
		if w_CdVinculoEmpregaticio in(1,10) then --Celetista
			set w_i_vinculos=1
		elseif w_CdVinculoEmpregaticio in(2) then --Estatutário
			set w_i_vinculos=15
		elseif w_CdVinculoEmpregaticio in(3) then --Estagiário
			set w_i_vinculos=16
		elseif w_CdVinculoEmpregaticio in(4) then --Comissionado
			set w_i_vinculos=13
		elseif w_CdVinculoEmpregaticio in(5) then --Outros
			set w_i_vinculos=2		
        elseif w_CdVinculoEmpregaticio in(6) then --Outros
			set w_i_vinculos=12	 		
        elseif w_CdVinculoEmpregaticio in(7) then --Outros
			set w_i_vinculos=17	 			
        elseif w_CdVinculoEmpregaticio in(8) then --Outros
			set w_i_vinculos=1	 			
        elseif w_CdVinculoEmpregaticio in(9) then --Outros
			set w_i_vinculos=2	 			
        elseif w_CdVinculoEmpregaticio in(11) then --Outros
			set w_i_vinculos=8	 			
        elseif w_CdVinculoEmpregaticio in(12) then --Outros
			set w_i_vinculos=18	 
        elseif w_CdVinculoEmpregaticio in(13) then --Outros
			set w_i_vinculos=19
        elseif w_CdVinculoEmpregaticio in(14) then --Outros
			set w_i_vinculos=20			
		end if;
		*/
		
		if w_i_vinculos is null then
			select coalesce(max(i_vinculos),0)+1 
			into w_i_vinculos 
			from bethadba.vinculos;
		end if; 
		
		set w_i_motivos_resc=null;
		set w_i_adicionais=null;
		
		if w_cdCategoriaTrabalhador in(0,1,11,2) then
			set w_categoria_sefip=1
		else
			set w_categoria_sefip=w_cdCategoriaTrabalhador
		end if;
				
		if w_tpRegimeContrato = 'C' then
			set w_tipo_vinculo=1
		elseif w_tpRegimeContrato = 'E' then
			set w_tipo_vinculo=2
		end if;
		
		if w_codigo_rais = 0 then
			set w_codigo_rais = 10;
		end if;
		
		if not exists(select 1 from bethadba.vinculos where	trim(descricao) = trim(w_descricao) and	tipo_func = 'F') then
			message 'Vin.: '||string(w_i_vinculos)||' Des.: '||string(w_descricao) to client;
			insert into bethadba.vinculos(i_vinculos,i_motivos_resc,i_adicionais,descricao,natureza_rendim,sai_rais,categoria_sefip,sai_caged,codigo_rais,vinculo_temp,tipo_vinculo,
										  gera_licpremio,tipo_func,categoria_esocial)on existing skip
			values (w_i_vinculos,w_i_motivos_resc,w_i_adicionais,w_descricao,w_natureza_rendim,'N',w_categoria_sefip,'N',w_codigo_rais,'S',w_tipo_vinculo,
				   'N','F',w_categoriaesocial); 
			
			insert into tecbth_delivery.antes_depois 
			values('V',w_i_entidades,w_CdVinculoEmpregaticio,null,null,w_i_vinculos,null,null,null,null); 
		else
			message 'Vin.: '||string(w_i_vinculos)||' Des.: '||string(w_descricao) to client;
			
			insert into tecbth_delivery.antes_depois 
			values('V',w_i_entidades,w_CdVinculoEmpregaticio,null,null,w_i_vinculos,null,null,null,null);
		end if;
	end for;
end




--------------------------------------------------
-- 15) Bairros
--------------------------------------------------

if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_bairros') then
	drop procedure cnv_bairros;
end if
;


begin
  // *****  Tabela bethadba.bairros
  declare w_i_bairros integer;
	ooLoop: for oo as cnv_bairro dynamic scroll cursor for 
		select 1 as w_i_entidades,(CdUf*100000)+cdMunicipio as w_cdMunicipio,cdBairro as w_cdBairro,trim(nmBairro) as w_nome 
		from tecbth_delivery.gp001_BAIRRO  
		order by 1,2 asc
	do
		
		// *****  Inicializa Variaveis
		set w_i_bairros=null;
		
		// *****  Converte tabela bethadba.bairros
		select coalesce(max(i_bairros),0)+1 
		into w_i_bairros 
		from bethadba.bairros;
		
		if not exists(select 1 from bethadba.bairros where trim(nome) = trim(w_nome)) then
			message 'Bai.: '||w_i_bairros||' Nom.: '||w_nome to client;
			
			insert into bethadba.bairros(i_bairros,nome)on existing skip
			values(w_i_bairros,w_nome);
			
			insert into tecbth_delivery.antes_depois 
			values('B',w_i_entidades,w_cdMunicipio,w_cdBairro,null,w_i_bairros,null,null,null,null); 
		else
			message 'Bai.: '||w_i_bairros||' Nom.: '||w_nome to client;
			
			select i_bairros 
			into w_i_bairros 
			from bethadba.bairros 
			where trim(nome) = trim(w_nome);
			
			insert into tecbth_delivery.antes_depois 
			values('B',w_i_entidades,w_cdMunicipio,w_cdBairro,null,w_i_bairros,null,null,null,null) ;
		end if;
	end for;
end
;


commit





--------------------------------------------------
-- 17) Agências
--------------------------------------------------
insert into bethadba.bancos(i_bancos,nome,sigla,mascara,dia_vcto,situacao) on existing skip
values (800,'CONVERSÃO','CONV',null,null,'A')
;



if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_agencias') then
	drop procedure cnv_agencias;
end if
;
begin
	// *****  Tabela bethadba.agencias
	declare w_dv_agencia char(2);
	declare w_i_ruas integer;
	declare w_i_bairros integer;
	
	ooLoop: for oo as cnv_agencias dynamic scroll cursor for
		select 1 as w_i_entidades,Agencia.NrBanco as w_i_bancos,Agencia.NrAgencia as w_i_agencias,trim(Agencia.NmAgencia) as w_nome,
			   trim(EnderecoAgencia.DsEndereco) as w_nome_rua,trim(EnderecoAgencia.DsComplemento) as w_complemento,EnderecoAgencia.CdLogradouro as w_CdLogradouro,EnderecoAgencia.cdUF as w_cdUF,
			   EnderecoAgencia.cdBairro as w_cdBairro,(EnderecoAgencia.cdUF *100000)+EnderecoAgencia.CdMunicipio as w_i_cidades,EnderecoAgencia.CdMunicipio as w_CdMunicipio, Agencia.dgagencia as w_dgagencia
		from tecbth_delivery.gp001_Agencia as Agencia,tecbth_delivery.gp001_EnderecoAgencia as EnderecoAgencia
		where Agencia.NrBanco = EnderecoAgencia.NrBanco 
		and Agencia.NrAgencia = EnderecoAgencia.NrAgencia  
		order by 1,2,3 asc	
	do
		// *****  Inicializa Variaveis
		set w_i_ruas=null;
		set w_i_bairros=null;

		// *****  Converte tabela bethadba.ruas
		if w_CdBairro = 0 then
			set w_i_bairros=null
		else
			select first depois_1 
			into w_i_bairros 
			from tecbth_delivery.antes_depois 
			where tipo = 'B' 
			and antes_1 = w_i_entidades 
			and antes_2 = (w_CdUF*100000)+w_CdMunicipio 
			and antes_3 = w_cdBairro
		end if;

		if w_i_cidades = 0 then
			set w_i_cidades=null
		end if;
		
		if w_CdLogradouro = 0 then
			if w_nome_rua != '' then
				if not exists(select 1 from bethadba.ruas where trim(nome) = trim(w_nome_rua)) then
					select coalesce(max(i_ruas),0)+1 
					into w_i_ruas 
					from bethadba.ruas;
					
					message 'Rua.: '||w_i_ruas||' Cid.: '||w_i_cidades||' Nom.: '||w_nome_rua to client;
					
					insert into bethadba.ruas(i_ruas,i_ruas_ini,i_ruas_fim,i_cidades,nome,tipo,cep,epigrafe,lei,zona_fiscal)on existing skip
					values(w_i_ruas,null,null,w_i_cidades,w_nome_rua,null,null,null,null,null);
				
					if w_i_bairros is not null then
						insert into bethadba.bairros_ruas(i_ruas,i_bairros) 
						values(w_i_ruas,w_i_bairros);
					end if
				else
					message 'Rua.: '||w_i_ruas||' Cid.: '||w_i_cidades||' Nom.: '||w_nome_rua to client;
					
					select i_ruas 
					into w_i_ruas 
					from bethadba.ruas 
					where trim(nome) = trim(w_nome_rua)
				end if
			end if
		else
			select first depois_1 
			into w_i_ruas 
			from antes_depois 
			where tipo = 'R' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_i_cidades 
			and antes_3 = w_CdLogradouro
		end if;
		
		// *****  Converte tabela bethadba.agencias
		if w_i_bancos in(1,757,758,761,762,763,764) then
			set w_i_bancos = 1
		elseif w_i_bancos in(27) then
			set w_i_bancos = 27
		elseif w_i_bancos in(104) then
			set w_i_bancos = 104
		elseif w_i_bancos in(237) then
			set w_i_bancos = 237			
		elseif w_i_bancos in(756,765) then
			set w_i_bancos = 756		
		elseif w_i_bancos in(759,760) then
			set w_i_bancos = 800		
		end if;
		if trim(w_dgagencia) <> '' then
           set w_dv_agencia =  	 trim(w_dgagencia)
        else
		set w_dv_agencia = bethadba.dbf_calcmod11(w_i_agencias)
        end if;
		if(w_i_bancos != 0) and (w_i_agencias != 0) then
			if not exists(select 1 from bethadba.agencias where	i_bancos = w_i_bancos and i_agencias = w_i_agencias) then
				message 'Ban.: '||w_i_bancos||' Age.: '||w_i_agencias to client;
				
				insert into bethadba.agencias(i_bancos,i_agencias,i_ruas,i_bairros,i_cidades,dv_agencia,nome,cep,numero,complemento)on existing skip
				values(w_i_bancos,w_i_agencias,w_i_ruas,w_i_bairros,w_i_cidades,w_dv_agencia,w_nome,null,null,null); 
			end if
		end if;
	end for;
end;



--------------------------------------------------
-- 18) Eventos
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_evento_aux') then
	drop procedure cnv_evento_aux;
end if
;
begin
	declare w_i_eventos integer;
	declare w_tipo_pd char(1);
	declare w_unidade char(15);
	declare w_sai_rais char(1);
	declare w_cont integer;
	set w_cont=0;

	select 1 as entidade,CdVerba 
	into #tempo1 
	from tecbth_delivery.gp001_VerbaTipoProcesso 
	where CdTipoProcesso = 2 
	union
	select 2 as entidade,CdVerba 
	from tecbth_delivery.gp001_VerbaTipoProcesso 
	where CdTipoProcesso = 2;

	ooLoop: for oo as cnv_evento_aux dynamic scroll cursor for
		select 1 as w_i_entidades,cdVerba as w_evento,upper(trim(DsVerba)) as w_nome,TpCategoria as w_TpCategoria,TpReferencia as w_TpReferencia 
		from tecbth_delivery.gp001_Verba 
		order by 2 asc
	do
		set w_cont = w_cont + 1;
		
		set w_tipo_pd=null;
		set w_unidade=null;
		set w_sai_rais=null;

		if w_TpCategoria = 'V' then
			set w_tipo_pd = 'P'
		else
			set w_tipo_pd = w_TpCategoria;
		end if;		
		
		if w_TpReferencia = 'H' then
			set w_unidade='Horas'
		elseif w_TpReferencia = 'P' then
			set w_unidade='Percentual'
		elseif w_TpReferencia = 'V' then
			set w_unidade='Valor'
		elseif w_TpReferencia = 'D' then
			set w_unidade='Dias'
		elseif w_TpReferencia = 'U' then
			set w_unidade='Unidade'
		end if;
		
		if exists(select 1 from #tempo1 where entidade = w_i_entidades and cdVerba = w_evento) then
			set w_sai_rais='S'
		else
			set w_sai_rais='N'
		end if;
		
		message 'Ent.: '||w_i_entidades||' Eve.: '||w_evento||' Nom.: '||w_nome||' Tip.: '||w_tipo_pd to client;
		
		insert into tecbth_delivery.evento_aux(evento,i_eventos,nome,tipo_pd,taxa,unidade,sai_rais,compoe_liq,compoe_hmes,digitou_form,classif_evento,retificacao,resc_mov,i_entidades) 
		values(w_evento,w_i_eventos,w_nome,w_tipo_pd,0.0,w_unidade,w_sai_rais,'S','N','N',0,'B','N',w_i_entidades);
		
		if w_cont = 500 then
			set w_cont = 0;
			commit;
			message 'commit' to client;
		end if;		
	end for;
end
;

if exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_evento_atu') then
	drop procedure cnv_evento_atu;
end if
;

create procedure tecbth_delivery.cnv_evento_atu()
begin
	
end
;

call tecbth_delivery.cnv_evento_atu()
;

commit
;


-- Ajuste no código dos eventos do tipo F devido ao check constraint ASA4364
update evento_aux
set i_eventos = 1000 + number() 
where tipo_pd = 'F'
and i_eventos is null
;

if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_eventos') then
	drop procedure cnv_eventos;
end if
;

begin
	
	ooLoop: for oo as cnv_eventos dynamic scroll cursor for
		select distinct i_eventos as w_i_eventos,nome as w_nome,tipo_pd as w_tipo_pd,taxa as w_taxa,unidade as w_unidade,sai_rais as w_sai_rais,compoe_liq as w_compoe_liq,compoe_hmes as w_compoe_hmes,
		       	        digitou_form as w_digitou_form,classif_evento as w_classif_evento,evento as w_cods_conver,i_entidades as w_i_entidades 
		from tecbth_delivery.evento_aux order by 1,12 asc
	do	
-- BUG BTHSC-8214	
       --if  w_i_eventos >= 400 and w_tipo_pd in('P','D') then
		message 'Eve.: '||w_i_eventos||' Nom.: '||w_nome||' Tip.: '||w_tipo_pd to client;
		insert into bethadba.eventos(i_eventos,nome,tipo_pd,taxa,unidade,sai_rais,compoe_liq,compoe_hmes,digitou_form,classif_evento,cods_conversao,desativado,seq_impressao,
									codigo_tce,deduc_fundo_financ)on existing skip
		values (w_i_eventos,w_nome,w_tipo_pd,w_taxa,w_unidade,w_sai_rais,w_compoe_liq,w_compoe_hmes,w_digitou_form,w_classif_evento,null,'N',null,w_i_eventos,'N'); 
      --end if;
	  -- BUG BTHSC-8214
		 update bethadba.eventos 
		set cods_conversao = trim(cods_conversao||w_i_entidades||'/'||w_cods_conver||',') 
		where i_eventos = w_i_eventos; 
	end for;
	update bethadba.eventos 
	set cods_conversao = substr(cods_conversao,1,length(cods_conversao)-1);
end

commit;
-- RUBRICA BUG BTHSC-7812
insert into bethadba.eventos_hist_agrup_esocial (i_eventos,i_competencia_inicio,codigo_esocial)
on existing skip   SELECT
	 d.i_eventos AS ID_CLOUD,'1990-01-01',cdnaturezarubrica AS NAT_RUBRICA
FROM gp001_verba v
LEFT JOIN tecbth_delivery.evento_aux d on d.evento = v.CdVerba
where id_cloud is not null and nat_rubrica <>0


--------------------------------------------------
-- 19 e 20) Entidades e Entidades Folha
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_entidades') then
	drop procedure cnv_entidades;
end if
;


begin
	// *****  Tabela bethadba.Entidades
	declare w_i_ruas integer;
	declare w_cnpj char(14);
		
	ooLoop: for oo as cnv_entidades dynamic scroll cursor for
		select 1 as w_i_entidades,Filial.CdLogradouro as w_CdLogradouro,trim(EnderecoFilial.DsEndereco) as w_nome_rua,coalesce(EnderecoFilial.CdBairro,0) as w_i_bairros,
			   cast(CdUF||cast(cdMunicipio as integer) as integer) as w_i_cidades,Empresa.CdNaturezaJuridica as w_i_naturezas,trim(RolEmpresas.NaEmpresa) as w_apelido,EnderecoFilial.CdCep as w_cep,
			   Filial.NrEndereco as w_numero,Filial.DsComplemento as w_complemento,substr(NrFone,1,2) as w_ddd,substr(NrFone,3,8) as w_telefone,substr(NrFoneFax,3,8)as w_fax,lower(Filial.Email) as w_email,
			   fu_tirachars(Empresa.NrInscricao,'.') as w_NrInscricao,Empresa.CnaePreponderante as w_i_cnae,Filial.NrBancoContaFGTS as w_i_bancos,Filial.NrAgenciaContaFGTS as w_i_agencias
		from tecbth_delivery.gp001_RolEmpresas as RolEmpresas,tecbth_delivery.gp001_Empresa as Empresa,tecbth_delivery.gp001_Filial as Filial,tecbth_delivery.gp001_EnderecoFilial as EnderecoFilial 
		where RolEmpresas.CdEmpresa = Empresa.CdEmpresa 
		and Empresa.CdFilial = Filial.CdFilial 
		and Filial.CdFilial = EnderecoFilial.cdFilial  
		order by 1,2 asc		
	do	
		// *****  Inicializa Variaveis
		set w_i_ruas=null;
		set w_cnpj=null;
			
		if not exists(select 1 from bethadba.cidades where i_cidades = w_i_cidades) then
			set w_i_cidades=null
		end if;
		
		if w_i_cidades = 0 then
			set w_i_cidades=null
		end if;
		
		if w_cdLogradouro = 0 then
			select depois_1 
			into w_i_bairros 
			from tecbth_delivery.antes_depois 
			where tipo = 'B' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_i_cidades 
			and antes_3 = w_i_bairros;

			if not exists(select 1 from bethadba.ruas where trim(nome) = trim(w_nome_rua)) then
				select coalesce(max(i_ruas),0)+1 
				into w_i_ruas 
				from bethadba.ruas;
			
				message 'Rua.: '||w_i_ruas||' Cid.: '||w_i_cidades||' Nom.: '||w_nome_rua to client;
				
				insert into bethadba.ruas(i_ruas,i_ruas_ini,i_ruas_fim,i_cidades,nome,tipo,cep,epigrafe,lei,zona_fiscal) 
				values(w_i_ruas,null,null,w_i_cidades,w_nome_rua,null,w_cep,null,null,null);
			
				if w_i_bairros is not null and w_i_ruas is not null then
					insert into bethadba.bairros_ruas(i_ruas,i_bairros) 
					values(w_i_ruas,w_i_bairros) 
				else
					select i_ruas 
					into w_i_ruas 
					from bethadba.ruas 
					where trim(nome) = trim(w_nome_rua)
				end if
			end if
		else
			select depois_1 
			into w_i_ruas 
			from antes_depois 
			where tipo = 'R' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_i_cidades 
			and antes_3 = w_CdLogradouro;

			select i_bairros 
			into w_i_bairros 
			from bethadba.bairros_ruas 
			where i_ruas = w_i_ruas;
		
			select cep 
			into w_cep 
			from bethadba.ruas 
			where i_ruas = w_i_ruas
		end if;
				
		if w_i_naturezas = '' then
			set w_i_naturezas=null
		end if;
						
		/*if length(cast(w_cnpj as decimal(14))) < 14 then
			set w_cnpj=repeat('0',14-length(cast(w_NrInscricao as decimal(14))))+string(cast(w_NrInscricao as decimal(14)))
		else
			set w_cnpj=string(cast(w_NrInscricao as decimal(14)))
		end if;*/
	set w_cnpj=string(cast(w_NrInscricao as decimal(14))) ; --w_cnpj = '80637424000109';
		
		
		if not exists(select 1 from bethadba.entidades where i_entidades = w_i_entidades) then
			message 'Ent.: '||w_i_entidades||' Nom.: '||w_apelido to client;
		
			insert into bethadba.entidades(i_entidades,i_ruas,i_bairros,i_cidades,i_entidades_princ,apelido,cep,numero,complemento,codigo_tce,ddd,telefone,fax,email,cnpj,
										   i_tipos_adm) 
			values (w_i_entidades,w_i_ruas,w_i_bairros,w_i_cidades,1,w_apelido,w_cep,w_numero,w_complemento,w_i_entidades,w_ddd,w_telefone,w_fax,null,w_cnpj,8) 
		else
			message 'Ent.: '||w_i_entidades||' Nom.: '||w_apelido to client;
			update bethadba.entidades 
			set i_ruas = w_i_ruas,
				i_bairros = w_i_bairros,
				i_cidades = w_i_cidades,
				i_entidades_princ = 1,
				apelido = w_apelido,
				cep = w_cep,
				numero = w_numero,
				complemento = w_complemento,
				codigo_tce = w_i_entidades,
				ddd = w_ddd,
				telefone = w_telefone,
				fax = w_fax,
				email = w_email,
				cnpj = w_cnpj 
			where i_entidades = w_i_entidades
		end if;
		-- BUG BTHSC-8213
		--BUG BTHSC-8194 CNAE incorreto
		insert into bethadba.hist_entidades_software_house(i_entidades,cnpj,i_competencias,razao_social,nome_contato,ddd,telefone,email,i_cnae_preponderante,)
values (w_i_entidades ,w_cnpj,'1990-01-01','BETHA SISTEMAS','BETHA SISTEMAS','048','34310733','betha@betha.com.br' ,w_i_cnae );
			-- BUG BTHSC-8213
		// *****  Converte tabela bethadba.entidades_folha		
		if w_i_bancos = 0 then
			set w_i_bancos=null
		end if;

		if w_i_agencias = 0 then
			set w_i_agencias=null
		end if;
		
		if not exists(select 1 from bethadba.cnae where	i_cnae = w_i_cnae) then
			set w_i_cnae=null
		end if;
		
		if not exists(select 1 from bethadba.entidades_folha where i_entidades = w_i_entidades) then
			insert into bethadba.entidades_folha(i_entidades,i_bancos,i_agencias,i_cnae,cod_fgts,sigla,autonomos) 
			values(w_i_entidades,w_i_bancos,w_i_agencias,w_i_cnae,null,null,'N') 
		else
			update bethadba.entidades_folha 
			set i_bancos = w_i_bancos,
				i_agencias = w_i_agencias,
				i_cnae = w_i_cnae,
				cod_fgts = null,
				sigla = null,
				autonomos = 'N' 
			where i_entidades = w_i_entidades
		end if;
	end for;
end
;  
 
 		--BUG BTHSC-8215 /BTHSC-8209
		insert into bethadba.hist_entidades_compl (i_entidades,i_competencias,pagto_previdenciario,i_pessoas,cnpj_efr,i_entidades_efr,indicativo_entidade_educativa
select top 1  1,'2023-05-01',1,(select i_pessoas from bethadba.pessoas where nome = nmresponsavel) as pessoas,(SELECT FIRST CNPJ_EFR FROM gp001_EMPRESA) cnpjef,1,'S'  from gp001_RESPONSAVEL ;
		--BUG BTHSC-8215 /BTHSC-8209 
		
		
 
--------------------------------------------------
-- 21) Grupos
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_grupo_funcional') then
	drop procedure cnv_grupo_funcional;
end if
;

create procedure tecbth_delivery.cnv_grupo_funcional()
begin
	ooLoop: for oo as cnv_grupo_funcional dynamic scroll cursor for
		select 1 as w_i_entidades,CdFilial as w_i_grupos,upper(trim(NmFilial)) as w_nome 
		from tecbth_delivery.gp001_filial as filial
		order by 1,2 asc
	do
		message 'Ent.: '||w_i_entidades||' Gru.: '||w_i_grupos||' Nom.: '||w_nome to client;
		
		insert into bethadba.grupos(i_entidades,i_grupos,nome) 
		values(w_i_entidades,w_i_grupos,w_nome);
	end for;
end
;

call cnv_grupo_funcional()
;

commit
;

CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- Pessoas, Pessoas Fisicas, Pessoas Juridicas, Pessoas Nomes, Hist Enderecos, Pessoas Fis Compl, Pessoas Estrangeiras
--------------------------------------------------
begin
	// *****  Tabela bethadba.pessoas
	declare w_i_pessoas integer;
	declare w_dv tinyint;	
	declare w_tipo_pessoa char(1);
	declare w_email char(60);
	declare w_cpf char(11);
	
	// **** Pessoas Fisicas
	declare w_i_cidades_nasc integer;
	declare w_estado_civil char(1);
	declare w_grau_instrucao tinyint;
	declare w_nacionalidade char(1);
	declare w_uf_emis_rg char(2);
	declare w_uf_emis_carteira char(2);
	
	// **** Pessoas Fisicas Complemento
	declare w_profissao_pai char(30);
	declare w_profissao_mae char(30);
	declare w_grupo_sanguineo char(2);
	declare w_fator_rh char(1);
	declare w_raca char(1);
	declare w_deficiencia_fisica char(1);
	declare w_grau_invalidez char(1);
	declare w_num_reg char(25);
	// **** Pessoas Endereços
	declare w_i_cidades integer;
	declare w_i_ruas integer;
	declare w_i_bairros integer;
     //aux
    declare w_valida_cpf integer; 
    declare w_valida_Pis integer;
	--BTHSC-7236 bug
	ooLoop: for oo as cnv_pessoas dynamic scroll cursor for
		select  1 as w_i_entidades,Pessoa.CdPessoa as w_CdPessoa,trim(upper(nmPessoa)) as w_nome,right(fu_tirachars(trim(nrddd),','),2) as w_ddd,right(fu_tirachars(trim(NrFone),'-'),8) as w_telefone,
			    cdCidadeNascimento as w_cdCidadeNascimento,sgEstadoNascimento as w_sgEstadoNascimento,date(dtNascimento) as w_dt_nascimento,tpSexo as w_sexo,cdEstadoCivil as w_cdEstadoCivil,
			    cdNacionalidade as w_cdNacionalidade,trim(NrIdentidade) as w_rg,trim(NmOrgaoIdentidade) as w_orgao_emis_rg,DtExpedicaoIdentidade as w_dt_emis_rg,SgEstadoIdentidade as w_SgEstadoIdentidade,
			    cast(NrPis as decimal(15)) as w_num_pis,dtCadastroPisPasep as w_dt_pis,cast(NrCpf as decimal(15)) as w_NrCpf,trim(NrCarteiraProf) as w_carteira_prof,trim(NrSerieCarteiraProf) as w_serie_cart,
			    DtExpedicaoCartProf as w_dt_emis_carteira,sgEstadoCarteira as w_sgEstadoCarteira,trim(NmPai) as w_nome_pai,trim(NmMae) as w_nome_mae,trim(NrZonaEleitoral) as w_zona_eleitoral,
			    trim(NrSecaoEleitoral) as w_secao_eleitoral,cast(NrTituloEleitoral as decimal(15)) as w_titulo_eleitor,trim(NrCarteiraReservista) as w_num_reservista,TipoSanguineo as w_TipoSanguineo,
			    FatorRh as w_FatorRh,trim(NrCarteiraHabilitacao) as w_cnh,dtValidadeHabilitacao as w_dt_vencto_cnh,cdRacaCor as w_cdRacaCor,cdDeficiente as w_cdDeficiente,cdUf as w_cdUf,cdMunicipio as w_cdMunicipio, 
			    trim(DsComplLogradouro) as w_complemento,NrEndereco as w_numero,dtAnoChegada as w_ano_chegada,trim(nrIdentidadeEstrangeiro) as w_nrIdentidadeEstrangeiro,date(dtValidadeIdentEstrang) as w_dtValidadeIdentEstrang,
			    trim(tpVistoEstrangeiro) as w_tpVistoEstrangeiro,trim(nrCartProfEstrangeiro) as w_nrCartProfEstrangeiro,trim(nrSerieCartProfEstrang) as w_nrSerieCartProfEstrang,date(dtExpedCartProfEstrang) as w_dtExpedCartProfEstrang,
			    date(dtValidadeCartProfEstrang) as w_dtValidadeCartProfEstrang,CdLogradouro as w_CdLogradouro,trim(DsEndereco) as w_nome_rua,CdCep as w_cep,CdBairro as w_CdBairro,InDependente as w_InDependente,
			    CdTipoDeficiencia as w_CdTipoDeficiencia,right(NrCelular,8) as w_celular,DtObito as w_dt_obito,NmCartorio as w_cartorio_reg,NrRegistro as w_NrRegistro,Email as w_EmailFunc,EmailPessoal as w_EmailPessoal,
			    dsCategoriaHabilitacao as w_dsCategoriaHabilitacao,inCertidao as w_inCertidao,nrFolha as w_nrFolha,nrLivro as w_nrLivro,trim(dsApelido) as w_nome_fantasia,null as w_NrFoneFax,2 as w_TpInscricao
		from tecbth_delivery.gp001_pessoa as pessoa,gp001_enderecopessoa as enderecopessoa 
       where pessoa.cdpessoa *= enderecopessoa.cdpessoa 
	   order by 1,2 asc
	do
		// *****  Tabela bethadba.pessoas
        set w_valida_cpf = null; 
        set w_valida_Pis = null;
		set w_i_pessoas = null;
		set w_dv = null;	
		set w_tipo_pessoa = null;
		set w_email = null;
		set w_cpf = null;

		// **** Pessoas Fisicas
		set w_i_cidades_nasc = null;
		set w_estado_civil = null;
		set w_grau_instrucao = null;
		set w_nacionalidade = null;
		set w_uf_emis_rg = null;
		set w_uf_emis_carteira = null;
		
		// **** Pessoas Fisicas Complemento
		set w_profissao_pai = null;
		set w_profissao_mae = null;
		set w_grupo_sanguineo = null;
		set w_fator_rh = null;
		set w_raca = null;
		set w_deficiencia_fisica = null;
		set w_grau_invalidez = null;
		set w_num_reg = null;
		
		// **** Pessoas Endereços
		set w_i_cidades = null;
		set w_i_ruas = null;
		set w_i_bairros = null;
		set w_valida_cpf = null; 
        set w_valida_Pis = null;
        if length(cast(w_NrCpf as decimal(15))) < 11 then
			set w_cpf=repeat('0',11-length(cast(w_NrCpf as decimal(15))))+string(cast(w_NrCpf as decimal(15)))
		else
			set w_cpf=cast(w_NrCpf as decimal(15))
		end if;
        set w_valida_cpf = bethadba.dbf_chk_cnpj_cpf (null,w_cpf,'F');
		// *****  Converte tabela bethadba.pessoas
		if w_InDependente != 0 then
			set w_tipo_pessoa='O'
 end if;
        if w_valida_cpf =1 then  
          set w_tipo_pessoa='F'
         else
          set w_tipo_pessoa='O';
          set w_cpf = null
        end if;  
        if w_ddd in('0','') then
			set w_ddd=null
		end if;
		
		if w_telefone in('0', '') then
			set w_telefone=null
		end if;
		
		if w_celular in('0','') then
			set w_celular=null
		end if;
		
		if locate(w_EmailFunc,'@') != 0 then
			set w_email=trim(w_EmailFunc)
		elseif locate(w_EmailPessoal,'@') != 0 then
			set w_email=trim(w_EmailPessoal)
		else
			set w_email=null
		end if;
			
		select coalesce(max(i_pessoas),0)+1 
		into w_i_pessoas 
		from bethadba.pessoas;
		
		set w_dv=bethadba.dbf_calcmod11(w_i_pessoas);
		
		message 'Pes.: '||w_i_pessoas||' Dv.: '||w_dv||' Nom.: '||w_nome||' Tip.: '||w_tipo_pessoa to client;
		
		insert into bethadba.pessoas(i_pessoas,dv,nome,nome_fantasia,tipo_pessoa,ddd,telefone,fax,ddd_cel,celular,inscricao_municipal,email)/*on existing skip*/
		values (w_i_pessoas,w_dv,w_nome,w_nome_fantasia,w_tipo_pessoa,w_ddd,w_telefone,null,null,w_celular,null,w_email);
		
		message 'Pes.: '||w_i_pessoas||' Dt.: '||w_dt_nascimento||' Nom.: '||w_nome to client;
		
		insert into bethadba.pessoas_nomes(i_pessoas,dt_alteracoes,nome,documento)/*on existing skip*/ values (w_i_pessoas,coalesce(w_dt_nascimento,date('2001-01-01')),w_nome,null);
		
		insert into tecbth_delivery.antes_depois values('P',w_i_entidades,w_CdPessoa,null,null,w_i_pessoas,null,null,null,null);
		
		// *****  Converte tabela bethadba.pessoas_fisicas
		set w_i_cidades_nasc=null;
		if w_cdCidadeNascimento != '' then
			select(cod_nacional*100000) 
			into w_i_cidades_nasc 
			from bethadba.estados 
			where sigla = trim(w_sgEstadoNascimento);
			
			set w_i_cidades_nasc=w_i_cidades_nasc+w_CdCidadeNascimento
		else
			set w_i_cidades_nasc=null
		end if;
		
		if not exists(select 1 from bethadba.cidades where i_cidades = w_i_cidades_nasc) then
			set w_i_cidades_nasc=null
		end if;
		
		if w_sexo = '' then
			set w_sexo='M'
		end if;
		
		if w_CdEstadoCivil = 6 then
			set w_estado_civil=5
		elseif w_CdEstadoCivil in( 5,7) then
			set w_estado_civil=6
		elseif w_CdEstadoCivil = 0 then
			set w_estado_civil=1
		else
			set w_estado_civil=w_CdEstadoCivil
		end if;

		if w_i_entidades = 1 then
			select first cdOcorrencia 
			into w_grau_instrucao 
			from tecbth_delivery.gp001_eventofuncional 
			where cdPessoa = w_cdPessoa and cdEvento = 1
		end if;

		if w_grau_instrucao not in( 1,2,3,4,5,6,7,8,9) then
			set w_grau_instrucao=1
		end if;

		if w_CdNacionalidade = 10 then
			set w_nacionalidade='B'
		elseif w_CdNacionalidade = 52 then
			set w_nacionalidade='E'
		end if;

		if w_rg = '' then
			set w_rg=null
		end if;

		if w_orgao_emis_rg = '' then
			set w_orgao_emis_rg=null
		end if;

		if w_SgEstadoIdentidade != '' then
			select first i_estados 
			into w_uf_emis_rg 
			from bethadba.estados 
			where sigla = trim(w_SgEstadoIdentidade)
		else
			set w_uf_emis_rg=null
		end if;
		
		if(w_carteira_prof = '000000') or(w_carteira_prof = '') then
			set w_carteira_prof=null
		end if;
		
		if(w_serie_cart = '0000') or(w_carteira_prof is null) then
			set w_serie_cart=null
		end if;

		if w_sgEstadoCarteira != '' and(w_carteira_prof is not null) then
			select first i_estados 
			into w_uf_emis_carteira 
			from bethadba.estados 
			where sigla = trim(w_sgEstadoCarteira)
		else
			set w_uf_emis_carteira=null
		end if;
		
		message 'Pes.: '||w_i_pessoas||' Nas.: '||w_dt_nascimento||' Sex.: '||w_sexo||' Nas.: '||w_nacionalidade||' RG.: '||w_rg||' CPF: '||w_cpf to client;
		
		insert into bethadba.pessoas_fisicas(i_pessoas,i_cidades,dt_nascimento,sexo,estado_civil,grau_instrucao,nacionalidade,rg,orgao_emis_rg,dt_emis_rg,uf_emis_rg,num_pis,dt_pis,cpf,
											 carteira_prof,serie_cart,dt_emis_carteira,uf_emis_carteira) on existing skip 
		values(w_i_pessoas,w_i_cidades_nasc,w_dt_nascimento,w_sexo,w_estado_civil,w_grau_instrucao,w_nacionalidade,w_rg,w_orgao_emis_rg,w_dt_emis_rg,w_uf_emis_rg,w_num_pis,w_dt_pis,w_cpf,
			   w_carteira_prof,w_serie_cart,w_dt_emis_carteira,w_uf_emis_carteira);
		
		// *****  Converte tabela tabela bethadba.pessaos_fis_compl
		if w_tipo_pessoa != 'J' then
			
			if w_nome_pai = '' then
				set w_nome_pai=null
			end if;
			
			if w_nome_mae = '' then
				set w_nome_mae=null
			end if;
			
			set w_profissao_pai=null;
			set w_profissao_mae=null;			

			if w_cartorio_reg = '' then
				set w_cartorio_reg=null
			end if;
		
			if w_nrLivro not in( '0','') then
				set w_num_reg=trim(w_num_reg+' L: '+string(w_nrLivro))
			end if;
				
			if w_nrFolha not in( '0','') then
				set w_num_reg=trim(w_num_reg+' F: '+string(w_nrFolha))
			end if;
		
			if w_NrRegistro not in( '0','') then
				set w_num_reg=trim(w_num_reg+' R: '+string(w_NrRegistro))
			end if;
		
			if w_zona_eleitoral = '0' then
				set w_zona_eleitoral=null
			end if;
		
			if w_secao_eleitoral = '0' then
				set w_secao_eleitoral=null
			end if;

			if w_titulo_eleitor = '0' then
				set w_titulo_eleitor=null
			end if;

			if(w_num_reservista = '0') or(w_sexo = 'F') or(w_num_reservista = '') then
				set w_num_reservista=null
			end if;

			if trim(w_TipoSanguineo) = '' or(trim(w_TipoSanguineo) not in( 'A','B','AB','O') ) then
				set w_grupo_sanguineo=null
			else
				set w_grupo_sanguineo=w_TipoSanguineo
			end if;
		
			if w_FatorRh = 'P' then
				set w_fator_rh='+'
			elseif w_FatorRh = 'N' then
				set w_fator_rh='-'
			elseif trim(w_FatorRh) = '' then
					set w_fator_rh=null
			end if;
			
			if w_cnh = '0' then
				set w_cnh=null
			end if;
	
			if w_cdRacaCor in('','9') then
				set w_raca='2'
			else
				set w_raca=w_cdRacaCor
			end if;
			
			if w_raca not in('2','4','6','8') then
				set w_raca = 2
			end if;
			
			
			if w_cdDeficiente = 1 then
				set w_deficiencia_fisica='6';
				set w_grau_invalidez=null
			else
				set w_deficiencia_fisica='0';
				set w_grau_invalidez='N'
			end if;	
			
			message 'Pes.: '||w_i_pessoas||' Nom.: '||w_nome||' Nom Pai.: '||w_nome_pai||' Nom. Mae.: '||w_nome_mae to client;
			
			insert into bethadba.pessoas_fis_compl(i_pessoas,nome_pai,nome_mae,profissao_pai,profissao_mae,cartorio_reg,num_reg,zona_eleitoral,secao_eleitoral,titulo_eleitor,num_reservista,
												grupo_sanguineo,fator_rh,doador,cnh,categoria_cnh,dt_vencto_cnh,raca,estatura,peso,cor_olhos)on existing skip 
			values(w_i_pessoas,w_nome_pai,w_nome_mae,w_profissao_pai,w_profissao_mae,w_cartorio_reg,w_num_reg,w_zona_eleitoral,w_secao_eleitoral,w_titulo_eleitor,w_num_reservista,w_grupo_sanguineo,
				w_fator_rh,'N',w_cnh,null,w_dt_vencto_cnh,w_raca,null,null,null);
	
			// *****  Converte tabela bethadba.pessoas_fis_obito
			if w_dt_obito is not null then
				message 'Pes.: '||w_i_pessoas||' Dt. Obt.: '||w_dt_obito to client;
				
				insert into bethadba.pessoas_fis_obito(i_pessoas,dt_obito,certidao,causa_mortis)on existing skip 
				values (w_i_pessoas,w_dt_obito,null,null) 
			end if;		
					
			// **** Histórico de pessoas_fisicas
			message 'Pes.: '||w_i_pessoas||' Dt. Nas.: '||w_dt_nascimento||' Dt. Alt.: '||w_dt_nascimento||' Sex.: '||w_sexo to client;
			
			insert into bethadba.hist_pessoas_fis(tipo_pessoa,i_pessoas,dt_alteracoes,dt_nascimento,sexo,rg,orgao_emis_rg,uf_emis_rg,dt_emis_rg,cpf,num_pis,dt_pis,carteira_prof,serie_cart,uf_emis_carteira,
												  dt_emis_carteira,zona_eleitoral,secao_eleitoral,titulo_eleitor)on existing skip
			values (w_tipo_pessoa,w_i_pessoas,w_dt_nascimento,w_dt_nascimento,w_sexo,w_rg,w_orgao_emis_rg,w_uf_emis_rg,w_dt_emis_rg,w_cpf,w_num_pis,w_dt_pis,w_carteira_prof,w_serie_cart,w_uf_emis_carteira,
					w_dt_emis_carteira,w_zona_eleitoral,w_secao_eleitoral,w_titulo_eleitor);
			
			// *****  Converte tabela bethadba.pessoas_estrangeiros
			if w_nacionalidade != 'B' then
				message 'Pes.: '||w_i_pessoas||' Ano. Che.: '||w_ano_chegada to client;
			
				insert into bethadba.pessoas_estrangeiras(i_pessoas,ano_chegada,ident_estrangeiro,dt_validade_est,tipo_visto_est,cart_trab_est,serie_cart_est,dt_exp_cart_est,dt_val_cart_est)on existing skip 
				values (w_i_pessoas,w_ano_chegada,w_ident_estrangeiro,w_dt_validade_est,w_tipo_visto_est,w_cart_trab_est,w_serie_cart_est,w_dt_exp_cart_est,w_dt_val_cart_est) 
			end if;
		else
			// *****  Converte tabela bethadba.pessoas_juridicas
			if length(cast(w_NrCpf as decimal(15))) < 14 then
				set w_cnpj=repeat('0',14-length(cast(w_NrCpf as decimal(15))))+string(cast(w_NrCpf as decimal(15)))
			else
				set w_cnpj=cast(w_NrCpf as decimal(15))
			end if;
			
			message 'Pes.: '||w_i_pessoas||' CNPJ.: '||w_cnpj to client;

			insert into bethadba.pessoas_juridicas(i_pessoas,i_naturezas,responsavel,cnpj,inscricao_estadual) on existing skip 
			values (w_i_pessoas,null,null,w_cnpj,null) 
		end if;
		
		// *****  Converte tabela bethadba.pessoas_enderecos
		set w_i_cidades=null;
		set w_i_ruas=null;

		if w_cdUf != 0 then
			set w_i_cidades=(w_CdUf*100000)+w_cdMunicipio
		else
			set w_i_cidades=null
		end if;
		
		if not exists(select 1 from bethadba.cidades where i_cidades = w_i_cidades) then
			set w_i_cidades=null
		end if;
		
		if w_cdMunicipio = 0 then
			set w_i_cidades=null
		end if;
		
		if w_complemento = '' then
			set w_complemento=null
		end if;

		if w_numero = 0 then
			set w_numero=null
		end if;

		if w_CdLogradouro = 0 then
			select first depois_1 
			into w_i_bairros 
			from antes_depois 
			where tipo = 'B' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_i_cidades 
			and antes_3 = w_cdBairro;
			
			if w_nome_rua != '' then
				if not exists(select 1 from bethadba.ruas where trim(nome) = trim(w_nome_rua)) then
					select coalesce(max(i_ruas),0)+1 
					into w_i_ruas 
					from bethadba.ruas;
					
					message 'Rua.: '||w_i_ruas||' Cid.: '||w_i_cidades||' Nom.: '||w_nome_rua||' CEP.: '||w_cep to client;
					
					insert into bethadba.ruas(i_ruas,i_ruas_ini,i_ruas_fim,i_cidades,nome,tipo,cep,epigrafe,lei,zona_fiscal)on existing skip
					values(w_i_ruas,null,null,w_i_cidades,w_nome_rua,67,w_cep,null,null,null);
					
					if w_i_bairros is not null then
						message 'Bai.: '||w_i_bairros||' Rua.: '||w_i_ruas to client;
						insert into bethadba.bairros_ruas(i_ruas,i_bairros) 
						values(w_i_ruas,w_i_bairros) 
					end if
				else
					select first i_ruas 
					into w_i_ruas 
					from bethadba.ruas 
					where trim(nome) = trim(w_nome_rua)
				end if;
				set w_nome_rua=null
			end if
		else
			select first depois_1 
			into w_i_ruas 
			from antes_depois 
			where tipo = 'R' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_i_cidades 
			and antes_3 = w_CdLogradouro;
		
			select first i_bairros 
			into w_i_bairros 
			from bethadba.bairros_ruas 
			where i_ruas = w_i_ruas;
				
		end if;
      
		
		if trim(w_nome_rua) in('R','R;','R:','R.','Rf','Rua:','Rua:.') then
			set w_nome_rua=null
		end if;
		
		message 'Pes.: '||w_i_pessoas||' Rua.: '||w_i_ruas||' Bai.: '||w_i_bairros||' Nom.: '||w_nome_rua to client;
		
		insert into bethadba.pessoas_enderecos(i_pessoas,tipo_endereco,i_ruas,i_bairros,i_distritos,i_loteamentos,i_cidades,i_condominios,nome_rua,complemento,numero,bloco,apartamento,
											   nome_bairro,nome_distrito,nome_cidade_conv,cep) on existing skip 
		values (w_i_pessoas,'P',w_i_ruas,w_i_bairros,null,null,w_i_cidades,null,w_nome_rua,w_complemento,w_numero,null,null,null,null,null,w_cep);
		
				
		insert into bethadba.hist_enderecos(i_pessoas,tipo_endereco,dt_alteracoes,i_ruas,i_condominios,i_distritos,i_loteamentos,i_bairros,i_cidades,nome_rua,complemento,numero,bloco,
											apartamento,nome_bairro,nome_distrito,nome_cidade_conv,cep)on existing skip
		values (w_i_pessoas,'P',w_dt_nascimento,w_i_ruas,null,null,null,w_i_bairros,w_i_cidades,w_nome_rua,w_complemento,w_numero,null,null,null,null,null,w_cep);
	end for;
end
;


rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;





--------------------------------------------------
-- 31) Dependentes
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_dependentes') then
	drop procedure cnv_dependentes;
end if
;
-- BUG BTHSC-7421  as datas finais relacionadas aos dependentes estão incorretas
begin
	// *****  Tabela bethadba.dependentes
	declare w_i_pessoas integer;
	declare w_i_dependentes integer;
	declare w_grau char(1);
	declare w_dt_casamento date;
    alter table tecbth_delivery.gp001_dependente add  i_dependentes integer; 
	ooLoop: for oo as cnv_dependentes dynamic scroll cursor for 
			
select 1 as w_i_entidades,d.cdPessoa as w_CdPessoa,d.cdDependente as w_cdDependente,d.CdPessoaDependente as w_CdPessoaDependente,d.cdGrauDependencia as w_CdGrauDependencia,
				   d.CdMotivoInicioRelacao as w_CdMotivoInicioRelacao,date(d.DtInicioRelacao) as w_DtInicioRelacao,dtsuspensao as dt_final
			FROM tecbth_delivery.GP001_PESSOA p
INNER JOIN tecbth_delivery.GP001_DEPENDENTE d ON d.cdPessoaDependente = p.CdPessoa
INNER JOIN tecbth_delivery.gp001_FUNCIONARIO f ON f.CdPessoa = d.CdPessoa
LEFT JOIN tecbth_delivery.gp001_DEPENDENTEVERBA dv ON f.cdMatricula = dv.cdMatricula
LEFT JOIN tecbth_delivery.gp001_VERBA v ON dv.CdVerba = v.CdVerba
WHERE d.CdPessoa IS NOT NULL
AND f.CdDesligamento = 0
AND f.NrAgenciaContaCorrente <> 0
AND d.CdDependente = dv.CdDependente
			--and d.cdPessoa =14
			order by 1,2 asc
	do
		// *****  Inicializa Variaveis
		set w_i_pessoas=null;
		set w_i_dependentes=null;
		set w_grau=null;
		set w_dt_casamento=null;
		
		// *****  Converte tabela bethadba.dependentes
		select depois_1 
		into w_i_pessoas 
		from tecbth_delivery.antes_depois 
		where tipo = 'P' 
		and antes_1 = w_i_entidades 
		and antes_2 = w_CdPessoa;
		
		select depois_1 
		into w_i_dependentes 
		from tecbth_delivery.antes_depois 
		where tipo = 'P' 
		and antes_1 = w_i_entidades 
		and	antes_2 = w_CdPessoaDependente;

		if w_cdGrauDependencia = 11 then
			set w_grau=2
		elseif w_cdGrauDependencia in(21,22,23) then
			set w_grau=1
		elseif w_cdGrauDependencia in(24,25) then
			set w_grau=5
		elseif w_cdGrauDependencia = 31 then
			set w_grau=3
		elseif w_cdGrauDependencia = 32 then
			set w_grau=5
		elseif w_cdGrauDependencia in(41,42,51) then
			set w_grau=8
		else
			set w_grau=9
		end if;
		
		if w_CdMotivoInicioRelacao in(7,8) then
			set w_dt_casamento=w_DtInicioRelacao
		else
			set w_dt_casamento=null
		end if;
		
		if w_i_dependentes is not null and w_i_pessoas is not null then
			if not exists(select 1 from bethadba.dependentes where i_pessoas = w_i_pessoas and i_dependentes = w_i_dependentes) then
				message 'Pes.: '||w_i_pessoas||' Dep.: '||w_i_dependentes||' Grau.: '||w_grau to client;
				
				insert into bethadba.dependentes(i_pessoas,i_dependentes,grau,dt_casamento,dt_fin_depende)on existing skip
				values(w_i_pessoas,w_i_dependentes,w_grau,w_dt_casamento,dt_final) 
			end if
		end if;
       update tecbth_delivery.gp001_dependente  
          set i_dependentes = w_i_dependentes 
        where cdPessoa= w_CdPessoa 
          and cdDependente = w_cdDependente 
          and CdPessoaDependente= w_CdPessoaDependente
	end for;
end;



--------------------------------------------------
-- 32) Sindicatos
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_sindicatos') then
	drop procedure cnv_sindicatos;
end if
;

begin
	// *****  Tabela bethadba.pessoas
	declare w_i_pessoas integer;
	declare w_dv tinyint;
	declare w_ddd char(2);	
	
	// *****  Tabela bethadba.pessoas_enderecos
	declare w_tipo_endereco char(1);
	declare w_i_ruas integer;
	
	ooLoop: for oo as cnv_sindicados dynamic scroll cursor for
		select 1 as w_i_entidades,cdSindicato as w_cdSindicato,upper(DsSindicato) as w_nome,DsEndereco as w_nome_rua,CdCep as w_cep,DsComplemento as w_complemento,string(cast(NrCgc as decimal(15))) as w_cnpj,
	           (CdUf*100000)+cdMunicipio as w_i_cidades,CdBairro as w_i_bairros,NrEndereco as w_numero,CdLogradouro as w_CdLogradouro
		from tecbth_delivery.gp001_sindicato
		order by 1,2,3 asc	
	do
		// *****  Tabela bethadba.pessoas
		set w_i_pessoas = null;
		set w_dv = null;
		set w_ddd = null;	
		
		// *****  Tabela bethadba.pessoas_enderecos
		set w_tipo_endereco = null;
		set w_i_ruas = null;
		
		
		// *****  Converte tabela bethadba.pessoas
		select coalesce(max(i_pessoas),0)+1 
		into w_i_pessoas 
		from bethadba.pessoas;
		
		set w_dv=bethadba.dbf_calcmod11(w_i_pessoas);
		

		insert into bethadba.pessoas(i_pessoas,dv,nome,nome_fantasia,tipo_pessoa,ddd,telefone,fax,ddd_cel,celular,inscricao_municipal,email)on existing skip 
		values(w_i_pessoas,w_dv,w_nome,null,'J',w_ddd,null,null,null,null,null,null);
		
		// *****  Converte tabela bethadba.pessoas_juridicas		
		insert into bethadba.pessoas_juridicas(i_pessoas,i_naturezas,responsavel,cnpj,inscricao_estadual) 
		values (w_i_pessoas,null,null,w_cnpj,null);
		
		// *****  Converte tabela bethadba.pessoas_enderecos
		set w_tipo_endereco='P';
		
		if w_i_bairros = 0 then
			set w_i_bairros=null
		else
			set w_i_bairros=w_i_bairros
		end if;
		
	
		if w_CdLogradouro = 0 then
			select depois_1 
			into w_i_bairros 
			from antes_depois 
			where tipo = 'B' 
			and antes_1 = w_i_entidades 
			and antes_1 = w_i_cidades 
			and antes_3 = w_i_bairros
		else
			select depois_1 
			into w_i_ruas 
			from antes_depois 
			where tipo = 'R' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_i_cidades 
			and antes_3 = w_CdLogradouro;
			
			select first i_bairros 
			into w_i_bairros 
			from bethadba.bairros_ruas 
			where i_ruas = w_i_ruas;
			
			select cep 
			into w_cep 
			from bethadba.ruas 
			where i_ruas = w_i_ruas;
		end if;
		
		insert into bethadba.pessoas_enderecos(i_pessoas,tipo_endereco,i_ruas,i_bairros,i_distritos,i_loteamentos,i_cidades,i_condominios,nome_rua,complemento,numero,bloco,apartamento,
											   nome_bairro,nome_distrito,nome_cidade_conv,cep) 
		values (w_i_pessoas,w_tipo_endereco,w_i_ruas,w_i_bairros,null,null,w_i_cidades,null,null,w_complemento,w_numero,null,null,null,
			   null,null,w_cep);
		
		message 'Pes.: '||w_i_pessoas||' Rua.: '||w_i_ruas||' Bai.: '||w_i_bairros||' CNPJ.: '||w_cnpj to client;
		
		// *****  Converte tabela bethadba.sindicatos		
		insert into bethadba.sindicatos(i_sindicatos,mes_contrib,tipo_sind) 
		values (w_i_pessoas,3,'2');
		
		// *****  Converte tabela tecbth_delivery.pessoa_aux
		insert into tecbth_delivery.antes_depois 
		values('S',w_i_entidades,w_cdSindicato,null,null,w_i_pessoas,null,null,null,null);
	end for;
end
;


--------------------------------------------------
-- 33) Horários
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_horarios') then
	drop procedure cnv_horarios;
end if
;


begin
	// *****  Tabela bethadba.horarios
	declare w_i_horarios smallint;
	declare w_entrada time;
	declare w_saida time;
	declare w_saida_int time;
	declare w_entrada_int time;
	
	ooLoop: for oo as cnv_horarios dynamic scroll cursor for
		select 1 as w_i_entidades,cdHorario as w_CdHorario,dsHorario as w_descricao,HrEntrada as w_HrEntrada,HrInicioIntervalo as w_HrInicioIntervalo,HrFimIntervalo as w_HrFimIntervalo,
			HrSaida as w_HrSaida
		from tecbth_delivery.gp001_horario 
		order by 1,2 asc	  
	do
		
		// *****  Inicializa Variaveis
		set w_i_horarios=null;
		set w_entrada=null;
		set w_saida=null;
		set w_saida_int=null;
		set w_entrada_int=null;
		
		// *****  Converte tabela bethadba.horarios
		select coalesce(max(i_horarios),0)+1 
		into w_i_horarios 
		from bethadba.horarios;
		
		if length(string(w_HrEntrada)) < 4 then
			set w_entrada=convert(time,'0'+TRIM(substr(string(w_HrEntrada),1,1))+':'+TRIM(substr(string(w_HrEntrada),2,2)),9)
		else
			set w_entrada=convert(time,TRIM(substr(string(w_HrEntrada),1,2))+':'+TRIM(substr(string(w_HrEntrada),3,2)),9)
		end if;
		
		if length(string(w_HrInicioIntervalo)) < 4 then
			set w_saida_int=convert(time,'0'+TRIM(substr(string(w_HrInicioIntervalo),1,1))+':'+TRIM(substr(string(w_HrInicioIntervalo),2,2)),9)
		else
			set w_saida_int=convert(time,TRIM(substr(string(w_HrInicioIntervalo),1,2))+':'+TRIM(substr(string(w_HrInicioIntervalo),3,2)),9)
		end if;
		
		if length(string(w_HrFimIntervalo)) < 4 then
			set w_entrada_int=convert(time,'0'+TRIM(substr(string(w_HrFimIntervalo),1,1))+':'+TRIM(substr(string(w_HrFimIntervalo),2,2)),9)
		else
			set w_entrada_int=convert(time,TRIM(substr(string(w_HrFimIntervalo),1,2))+':'+TRIM(substr(string(w_HrFimIntervalo),3,2)),9)
		end if;
		
		if length(string(w_HrSaida)) < 4 then
			set w_saida=convert(time,'0'+TRIM(substr(string(w_HrSaida),1,1))+':'+TRIM(substr(string(w_HrSaida),2,2)),9)
		else
			set w_saida=convert(time,TRIM(substr(string(w_HrSaida),1,2))+':'+TRIM(substr(string(w_HrSaida),3,2)),9)
		end if;
		
		if w_entrada = '00:00' then
			set w_entrada=w_entrada_int;
			set w_entrada_int='00:00'
		end if;
		
		if not exists(select 1 from bethadba.horarios where entrada = w_entrada and	saida = w_saida and	saida_int = w_saida_int and	entrada_int = w_entrada_int) then
			message 'Hor.: '||w_i_horarios||' Des.: '||w_descricao||' Ent.: '||w_entrada||' Sai.: '||w_saida to client;
			insert into bethadba.horarios(i_horarios,descricao,entrada,saida,saida_int,entrada_int) 
			values (w_i_horarios,w_descricao,w_entrada,w_saida,w_saida_int,w_entrada_int);
			
			insert into tecbth_delivery.antes_depois 
			values ('H',w_i_entidades,w_CdHorario,null,null,w_i_horarios,null,null,null,null) 
		else
			select i_horarios 
			into w_i_horarios 
			from bethadba.horarios 
			where entrada = w_entrada 
			and saida = w_saida 
			and saida_int = w_saida_int 
			and entrada_int = w_entrada_int;
			
			insert into tecbth_delivery.antes_depois 
			values ('H',w_i_entidades,w_CdHorario,null,null,w_i_horarios,null,null,null,null);
		end if;
		
	end for;
end
;

;

commit
;

insert into bethadba.tipos_cargos(i_tipos_cargos,descricao,classif)on existing skip
select CdTipoCArgo,DsTipoCargo,if CdTipoCargo = 1 then 
											2 
							   else 
									if CdTipoCargo in(2,5) then 
										1 
									else 
										0 
									endif
							   endif
from tecbth_delivery.gp001_TipoCargo
;

commit
;


begin
  declare cur_conver dynamic scroll cursor for select 1,t1.cdFaixaSalarial,
      t1.cdFaixaSalarial,t1.vlFaixaSalarial,number(*) AS CODIGO from
      gp001_salariofaixa  as t1,  gp001_salariofaixa as t2 where
      --t1.NrNivelSalarial in(2,3) and  BUG -- BTHSC-8177 Não migrou todos os níveis salariais
      substr(t1.CdFaixaSalarial,1,5)  = t2.cdFaixaSalarial 
     order by 1 asc,2 asc;


  // *****  Tabela bethadba.niveis
  declare w_i_entidades integer;
  declare w_i_niveis integer;
  declare tw_i_niveis integer;
  declare w_nome char(50);
  declare w_valor decimal(12,2);
  declare w_carga_hor decimal(5,2);
  declare w_coeficiente char(1);
  declare w_i_planos_salariais smallint;
  // *****  Tabela tecbth.salariofaixa
  declare w_cdFaixaSalarial varchar(50);
  declare w_nrSequenciaFaixa integer;
  declare w_dsFaixaSalarial varchar(100);
  declare w_vlFaixaSalarial double;
  // *****  Variaveis auxiliares
  declare w_linha long varchar;
  declare w_codi_conv integer;
  declare w_cont integer;
  declare w_cont_aux integer;
  set w_cont=0;
  set w_cont_aux=0;
  open cur_conver with hold;
  L_item: loop
    fetch next cur_conver into w_i_entidades,w_cdFaixaSalarial,w_DsFaixaSalarial,
      w_vlFaixaSalarial,tw_i_niveis;
    if sqlstate = '02000' then
      leave L_item
    end if;
    set w_cont=w_cont+1;
    // *****  Inicializa Variaveis
    set w_i_niveis=null;
    set w_nome=null;
    set w_valor=null;
    set w_carga_hor=null;
    set w_coeficiente=null;
    set w_i_planos_salariais=null;
    // *****  Converte tabela bethadba.niveis
   -- set tw_i_niveis=tw_i_niveis;--cast (w_cdFaixaSalarial AS INTEGER);--right(w_cdFaixaSalarial,4);
    set w_i_niveis= tw_i_niveis;
 /*
(CASE
                        WHEN tw_i_niveis ='01A' THEN 10099
                        WHEN tw_i_niveis ='01B' THEN 10098
                        WHEN tw_i_niveis ='EF1' THEN 10097
                        WHEN tw_i_niveis ='EF2' THEN 10096
                        WHEN tw_i_niveis ='EF3' THEN 10096
                        WHEN tw_i_niveis ='EF4' THEN 10095
                        WHEN tw_i_niveis ='EF5' THEN 10094
                        WHEN tw_i_niveis ='EF6' THEN 10093
                        WHEN tw_i_niveis ='EF7' THEN 10092
                        WHEN tw_i_niveis ='EF8' THEN 10091
                        WHEN tw_i_niveis ='EF9' THEN 10090
                        WHEN tw_i_niveis ='0XX' THEN 10089
                        ELSE tw_i_niveis
                        END);
                   
*/

    set w_nome=w_DsFaixaSalarial;
    set w_valor=cast(w_vlFaixaSalarial as decimal(12,2));
    if w_valor = 0.0 then
      set w_valor=.01
    end if;
    set w_carga_hor=220.0;
    set w_coeficiente='N';
    set w_i_planos_salariais=1;
  
    message 'Nivel.: '||string(w_nome)||' i_niveis.: '||string(w_i_niveis) to client;
    if not exists(select 1 from bethadba.niveis where
        i_entidades = w_i_entidades and
        i_niveis = w_i_niveis) then
 
      insert into bethadba.niveis( i_entidades,i_niveis,nome,valor,carga_hor,coeficiente,
        i_planos_salariais) values( w_i_entidades,w_i_niveis,w_nome,w_valor,w_carga_hor,w_coeficiente,
        w_i_planos_salariais) 
    end if
  end loop L_item;
  close cur_conver
end;

rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
commit;
-- HIST Niveis BUG BTHSC-8182 Não migrou os históricos dos níveis salariais
ROLLBACK;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
call bethadba.pg_setoption('fire_triggers','off');
COMMIT;
insert into bethadba.hist_niveis on existing skip 

select distinct 1,(select i_niveis from bethadba.niveis where nome = cdfaixasalarial ) as i_niveis,dtiniciovalidade,1,vlfaixasalarial,vlfaixasalarial as novo,100,1,0,null,(select carga_hor from bethadba.niveis where nome = cdfaixasalarial ) as carga, 
'N','N' from tecbth_delivery.gp001_SALARIOFAIXA_HISTORICO where i_niveis is not null 
--------------------------------------------------
--------------------------------------------------
-- Cargos, Hist Cargos, Mov Cargos, Hist Cargos Compl
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_cargos') then
	drop procedure cnv_cargos;
end if
;
--BUG -- BTHSC-8158 Migrou configuração de férias errada no funcionário
insert into bethadba.config_ferias (i_config_ferias,descricao,meses_aquisicao,meses_concessao,meses_critica,num_dias_ferias,inicio_periodo,diames_inicio_per,ferias_prop,pagto_ferias_prop,num_dias_abono,controle_abono,trunca_dias) 
SELECT distinct  pq.cdtipoferias,dstipoferias,12,12,10,30,1,null,'N','I',30,'D',null
 FROM gp001_PERIODOAQUISICAO pq , gp001_INSTALACAOFERIAS i where  pq.cdtipoferias = i.cdtipoferias;

begin
	// ***** bethadba.cargos
	declare w_i_cbo char(6);
	declare w_i_tipos_cargos smallint;
	declare w_cdfaixasalarial char(50);
    declare ws_cdfaixasalarial integer;
	declare w_nrsequenciafaixa integer;
	declare w_cdestruturasalarial integer;
	declare w_cdgrupofaixasalarial integer;
	declare w_dt_alteracoes_aux datetime;
	
	// ***** bethadba.hist_cargos_compl
	declare w_i_config_ferias_subst smallint;
	--BUG BTHSC-7633
	ooLoop: for oo as cnv_cargos dynamic scroll cursor for
	-- BUG NOME CARGO BTHSC-7894
		select 1 as w_i_entidades,gp001_CARGO.CdCargo as w_i_cargos,cdGrupoCboCargo as w_cdGrupoCboCargo,cdCboCargo as w_cdCboCargo,TpCargo as w_TpCargo,w_i_cargos || ' - ' ||  upper(DsCargo) as w_nome,isnull((select  first qt_vagas from tecbth_delivery.gp001_QUADRO_VAGAS WHERE gp001_CARGO.cdcargo = gp001_QUADRO_VAGAS.idf_cargo 
),1) as w_vagas_acresc,
			isnull((select  first qt_vagas from tecbth_delivery.gp001_QUADRO_VAGAS WHERE gp001_CARGO.cdcargo = gp001_QUADRO_VAGAS.idf_cargo 
),1) as w_qtd_vagas,date(DtLeiCargo) as w_dt_lei,date(DtLeiCargo) as w_dt_vigorar,NrLeiCargo as w_num_lei,CdTribunal as w_CdTribunal,DtDesativacao as w_dt_leii,
			DtDesativacao as w_dt_vigorarr,ymd(year(DtLeiCargo),month(DtLeiCargo),1) as w_dt_alteracoes, DtDesativacao as w_DtDesativacao, In13Sal  as decimo,if cdtipoferias=0 then null else cdtipoferias endif as w_i_config_ferias
		from tecbth_delivery.gp001_FUNCIONARIO   , tecbth_delivery.gp001_CARGO  
where gp001_CARGO.CdCargo = gp001_FUNCIONARIO.CdCargo 
	do
		
		set w_i_cbo = null;
		set w_i_tipos_cargos = null;
		set w_i_config_ferias_subst = null;
		set w_cdfaixasalarial = null;
		set w_nrsequenciafaixa = null;
		set w_cdestruturasalarial = null;
		set w_cdgrupofaixasalarial = null;

		/*
		// *****  Converte tabela bethadba.cargos		
		if w_cdGrupoCboCargo != 0 then
			if length(w_cdGrupoCboCargo) = 4 then
				if length(w_cdCboCargo) = 2 then
					set w_i_cbo=string(w_cdGrupoCboCargo)--+string(w_cdCboCargo)
				else
					set w_i_cbo=string(w_cdGrupoCboCargo)--+'0'+string(w_cdCboCargo)
				end if
			else
				if length(w_cdCboCargo) = 2 then
					set  w_i_cbo=string(w_cdGrupoCboCargo)--+string(w_cdCboCargo)
				else
					set w_i_cbo='0'+string(w_cdGrupoCboCargo)+'0'+string(w_cdCboCargo)
				end if
			end if		
		else
			set w_i_cbo=null
		end if;
		*/
		--BUG BTHSC-7614
		set w_i_cbo=string(w_cdGrupoCboCargo);
		
		if(w_i_cbo = '000000') or(trim(w_i_cbo) = '') then
			set w_i_cbo=null
		end if;
		
		if not exists(select 1 from bethadba.cbo where i_cbo = w_i_cbo) then
			set w_i_cbo=null
		end if;
		
		if w_TpCargo in(99,0) then
			set w_i_tipos_cargos=99
		else
			set w_i_tipos_cargos=w_TpCargo
		end if;
		--select * from bethadba.tipos_cargos
		message 'Car.: '||w_i_tipos_cargos||' Nom.: '||w_i_tipos_cargos||' CBO.: '||w_i_tipos_cargos to client;
		
		insert into bethadba.cargos(i_entidades,i_cargos,i_cbo,i_tipos_cargos,nome)on existing skip
		values(w_i_entidades,w_i_cargos,w_i_cbo,w_i_tipos_cargos,w_nome);
		
		// *****  Converte tabela bethadba.cargos_compl 		
		if w_i_tipos_cargos = any(select i_tipos_cargos from bethadba.tipos_cargos where classif = 2) then
			set w_i_config_ferias_subst=null
		else
			set w_i_config_ferias_subst=1
		end if;
			
		insert into bethadba.cargos_compl(i_entidades,i_cargos,i_config_ferias,i_config_ferias_subst,qtd_vagas,rol,grau_instrucao,codigo_tce,decimo_terc,requisitos,atividades)on existing skip
		values (w_i_entidades,w_i_cargos,w_i_config_ferias,w_i_config_ferias_subst,w_qtd_vagas,null,1,w_i_cargos,decimo,null,null);
		
		
		// *****  Converte tabela bethadba.hist_cargos_compl
		select first nrsequenciafaixa,cdestruturasalarial,cdgrupofaixasalarial
		into w_nrsequenciafaixa,w_cdestruturasalarial,w_cdgrupofaixasalarial
		from tecbth_delivery.gp001_cargosalariofaixa
		where cdcargo = w_i_cargos;
			
		select cdfaixasalarial 
		into w_cdfaixasalarial
	  from gp001_salariofaixa as salariofaixa
		where nrsequenciafaixa    = w_nrsequenciafaixa
		  and cdestruturasalarial = w_cdestruturasalarial
		  and cdgrupofaixasalarial = w_cdgrupofaixasalarial
		  and nrnivelsalarial in(2,3);
		
		if w_dt_alteracoes is not null then
			if w_dt_alteracoes = w_dt_alteracoes_aux then
				set w_dt_alteracoes = dateadd(hour,1,w_dt_alteracoes);
			end if;
		end if;
		select i_niveis into ws_cdfaixasalarial from bethadba.niveis where i_entidades = w_i_entidades and nome = w_cdfaixasalarial;

		if exists(select 1 from bethadba.niveis where i_entidades = w_i_entidades and nome = w_cdfaixasalarial) then
			insert into bethadba.hist_cargos_compl(i_entidades,i_cargos,dt_alteracoes,i_niveis,i_clas_niveis_ini,i_referencias_ini,i_clas_niveis_fin,i_referencias_fin) 
			values (w_i_entidades,w_i_cargos,isnull(w_dt_alteracoes,'1990-01-01'),ws_cdfaixasalarial,null,null,null,null);
		end if;
		
		// *****  Converte tabela bethadba.mov_cargos
		if w_dt_alteracoes is null then
			set w_dt_alteracoes='2005-01-01'
		end if;
		
		insert into bethadba.mov_cargos(i_entidades,i_cargos,dt_alteracoes,tipo_atualiz,num_lei,dt_lei,dt_vigorar,vagas_acresc,vagas_reduzir)on existing skip
		values (w_i_entidades,w_i_cargos,w_dt_alteracoes,1,w_num_lei,w_dt_lei,w_dt_vigorar,w_vagas_acresc,null);
		
		if w_DtDesativacao is not null then
			set w_dt_alteracoes=ymd(year(w_DtDesativacao),month(w_DtDesativacao),1);
		
			insert into bethadba.mov_cargos(i_entidades,i_cargos,dt_alteracoes,tipo_atualiz,num_lei,dt_lei,dt_vigorar,vagas_acresc,vagas_reduzir)on existing update
			values (w_i_entidades,w_i_cargos,w_dt_alteracoes,3,null,w_dt_leii,w_dt_vigorarr,w_vagas_acresc,null) 
		end if;
		
		set w_dt_alteracoes_aux = w_dt_alteracoes;
		
	end for;
end
;

--------------------------------------------------
-- 39) Config Organ
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_config_organ') then
	drop procedure cnv_config_organ;
end if
;


begin
	// *****  Tabela bethadba.config_organ
	declare w_i_config_organ smallint;
	
	ooLoop: for oo as cnv_config_organ dynamic scroll cursor for
		select 1 as w_i_entidades,cdOrganograma as w_cdOrganograma,dsOrganograma as w_descricao
		from tecbth_delivery.GP001_organograma  
		order by 1,2 asc	
	do
		// *****  Inicializa Variaveis
		set w_i_config_organ=null;
		
		// *****  Converte tabela bethadba.config_organ
		if w_cdOrganograma = 99 then
			set w_i_config_organ=2
		elseif w_cdOrganograma = 101 then
			set w_i_config_organ=3
		else
			set w_i_config_organ=w_cdOrganograma
		end if;
		
		message 'Con. Org.: '||w_i_config_organ||' Des.: '||w_descricao to client;
		insert into bethadba.config_organ(i_config_organ,i_atos,descricao) on existing skip
		values (w_i_config_organ,null,w_descricao);		
		
		insert into tecbth_delivery.antes_depois 
		values('O',w_i_entidades,w_cdOrganograma,null,null,w_i_config_organ,null,null,null,null);
		
	end for;
end
;


--------------------------------------------------
-- 40) Niveis Organ
--------------------------------------------------
insert into bethadba.niveis_organ(i_config_organ,i_niveis_organ,descricao,num_digitos,separador_nivel,tot_digitos)on existing skip 
values(1,1,'SECRETARIA',2,null,2)
;

insert into bethadba.niveis_organ(i_config_organ,i_niveis_organ,descricao,num_digitos,separador_nivel,tot_digitos)on existing skip 
values(1,2,'DEPARTAMENTO',2,'.',4)
;

insert into bethadba.niveis_organ(i_config_organ,i_niveis_organ,descricao,num_digitos,separador_nivel,tot_digitos)on existing skip 
values(1,3,'SETOR',2,'.',6)
;



--------------------------------------------------
-- 41) Entidades Organ
--------------------------------------------------
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1988,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1989,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1990,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1991,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1992,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1993,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1994,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1995,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1996,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1997,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1998,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,1999,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2000,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2001,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2002,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2003,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2004,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2005,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2006,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2007,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2008,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2009,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip 
values(1,2010,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2011,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2012,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2013,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2014,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2015,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2016,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2017,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2018,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2019,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2020,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2021,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2022,1)
;
insert into bethadba.entidades_organ(i_entidades,i_exercicios,i_config_organ)on existing skip  
values(1,2023,1)
;


--------------------------------------------------
-- 42) Organogramas
--------------------------------------------------
if not exists (select 1 from sys.syscolumns where creator = current user  and tname = 'GP001_lotacao' and cname = 'i_config_organ') then 
	alter table GP001_lotacao add(i_config_organ integer, nivel1 char(2), nivel2 char(2),nivel3 char(3) );
end if
;

update GP001_lotacao 
set nivel1 = substr(cdlotacao,1,2), 
    nivel2 = if trim(substr(cdlotacao,3,2)) = '' then 
				'00' 
			else 
				substr(cdlotacao,3,2) 
			endif,
    nivel3 = if trim(substr(cdlotacao,5,2)) = '' then 
				'00' 
			else 
				substr(cdlotacao,5,2) 
			endif 
;
commit
;	

if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_organogramas') then
	drop procedure cnv_organogramas;
end if
;


begin
	// *****  Tabela bethadba.organogramas
	declare w_i_config_organ smallint;
	declare w_i_organogramas char(16);
	declare w_i_parametros_previd smallint;
	declare w_tipo char(1);
	declare w_digitos integer;
	declare w_nivel_tipo integer;
	
	ooLoop: for oo as cnv_organogramas dynamic scroll cursor for
		select 1 as w_i_entidades,CdOrganograma as w_CdOrganograma,CdLotacao as w_CdLotacao,NmLotacao as w_descricao,NrNivel as w_nivel,nivel1 as w_nivel1,nivel2 as w_nivel2,nivel3 as w_nivel3 
		 from tecbth_delivery.GP001_lotacao 
		order by 1,2,3 asc	
	do
		// *****  Inicializa Variaveis
		set w_i_config_organ=null;
		set w_i_organogramas=null;
		set w_i_parametros_previd=null;
		set w_tipo=null;
		
		// *****  Converte tabela bethadba.organogramas
		 set w_i_config_organ= 1 ;
		Select sum(num_digitos) 
		into w_digitos 
		from bethadba.niveis_organ 
		where i_config_organ = w_i_config_organ;
		
		if length(w_CdLotacao) < w_digitos then
			set w_i_organogramas=string(w_nivel1)+string(w_nivel2)+string(w_nivel3) 
		else
			set w_i_organogramas=string(w_nivel1)+string(w_nivel2)+string(w_nivel3) 
		end if;
		
		if w_nivel = 1 then
			set w_i_parametros_previd=1
		else
			set w_i_parametros_previd=null
		end if;
		
		select max(i_niveis_organ) 
		into w_nivel_tipo 
		from bethadba.niveis_organ 
		where i_config_organ = w_i_config_organ;
		
		if w_nivel = w_nivel_tipo then
			set w_tipo='A'
		else
			set w_tipo='S'
		end if;
		
		message 'Org.: '||w_i_organogramas||' Con.: '||w_i_config_organ||' Des.: '||w_descricao||' Niv.: '||w_nivel to client;
		
		insert into bethadba.organogramas(i_config_organ,i_organogramas,i_ruas,i_bairros,descricao,nivel,tipo,cnpj,numero,complemento,cep,codigo_tce)on existing skip
		values (w_i_config_organ,w_i_organogramas,null,null,w_descricao,w_nivel,w_tipo,null,null,null,null,null);
		
	end for;
end
;


-- 45) Licpremio Config
--------------------------------------------------
insert into bethadba.licpremio_config(i_licpremio_config,i_tipos_afast,descricao,tipo_intervalo,lanc_licpremio_afast)on existing skip
values(1,null,'Configuração Licença Premio','A','N')
;

commit
;


--------------------------------------------------
-- 46) Licpremio Faixas
--------------------------------------------------
insert into bethadba.licpremio_faixas(i_licpremio_config,i_faixas,num_direito_licenca,num_dias_licenca,num_max_abonar)on existing skip
values(1,99,5,90,30)
;

commit
;

--------------------------------------------------
-- 47) Tipos Atos
--------------------------------------------------
insert into bethadba.tipos_atos(i_tipos_atos,nome,classif,gera_tc)
select CdTipoDocumentoLegal+10,DsTipoDocumentoLegal,
if DsTipoDocumentoLegal like '%decre%' then 1 else
if DsTipoDocumentoLegal like '%Port%' then 4 else
if DsTipoDocumentoLegal like '%Resol%' then 5 else
if DsTipoDocumentoLegal like '%Edit%' then 2 else
if DsTipoDocumentoLegal = 'Lei' then 3 else
if DsTipoDocumentoLegal like '%conv%' then 41 else
if DsTipoDocumentoLegal like '%medi%provis%' then 42 else
if DsTipoDocumentoLegal like '%lei%aut%' then 43 else
if DsTipoDocumentoLegal like '%Contra%' then 7 else
if DsTipoDocumentoLegal like '%Outro%' then 11  else
if DsTipoDocumentoLegal like '%lei%compl%' then 18 else
if DsTipoDocumentoLegal like 'lei%mun%' then 21 else
if DsTipoDocumentoLegal like '%term%poss%' then 14  endif endif endif endif endif endif endif endif endif endif endif endif endif,'S' 
 from tecbth_delivery.gp001_TipoDocumentoLegal 
where CdTipoDocumentoLegal != 0;  
commit
; 


--------------------------------------------------
-- 48) Tipos Movpes
--------------------------------------------------
insert into bethadba.tipos_movpes(i_tipos_movpes,descricao,classif,codigo_tce)on existing skip
select CdTipoMovimentoAto,DsTipoMovimentoAto,0,null 
from tecbth_delivery.gp001_AtoTipoMovimento
;            
 
commit
;


rollback;
--------------------------------------------------
-- 54) Funcionários
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_funcionarios') then
	drop procedure cnv_funcionarios;
end if
;

begin
	// **** Funcionarios
	declare w_i_funcionarios integer;
	declare w_dv tinyint;
	declare w_i_pessoas integer;
	declare w_tipo_admissao char(1);
	declare w_conta_fgts char(12);
	declare w_contrib_sindical char(1);
	declare w_i_sindicatos integer;
	declare w_tipo_func char(1);
	
	// **** Pessoas Contas
	declare w_i_pessoas_contas integer;
	declare w_num_conta char(15);
	declare w_tipo_conta char(1);
	declare w_status char(1);
	declare w_provimento integer;
	
	ooLoop: for oo as cnv_funcionarios dynamic scroll cursor for
		select 1 as w_i_entidades,cdMatricula as w_cdMatricula,SqContrato as w_SqContrato,CdPessoa as w_CdPessoa,date(DtAdmissao) as w_dt_admissao,cdAdmissao as w_cdAdmissao,
			   tpPagamento as w_categoria,date(dtOpcaoFgts) as w_dt_opcao_fgts,nrContaFgts as w_nrContaFgts,InContribuicaoSindical as w_InContribuicaoSindical,SqCartaoPonto as w_SqCartaoPonto,
			   upper(inRais) as w_sai_rais,fu_tirachars(fu_tirachars(nrContaCorrente,'X'),'.') as w_nrContaCorrente,dgContaCorrente as w_dgContaCorrente,NrBancoContaCorrente as w_i_bancos,NrAgenciaContaCorrente as w_i_agencias,
			   cdTipoContaCorrente as w_cdTipoContaCorrente,NrFichaRegistro as w_NrFichaRegistro,dtFimContrato as w_dtFimContrato,inConcurso as w_inConcurso,dtConcurso as w_dtConcurso,
			   CdSindicato as w_cdSindicato,DtPosseCargo as w_DtPosseCargo,nrConcurso as w_nrConcurso,inSituacaoFuncional as w_inSituacaoFuncional,date(dtAdmissao) as w_dt_base,cdvinculoEmpregaticio as vinculos ,DtPosseCargo as w_dt_posse, CD_MATRICULA_ESOCIAL  AS w_esocial, cdcargo as w_cargos
		from tecbth_delivery.gp001_funcionario 
		order by 1,2,4 asc		
	do
	
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_dv=null;
		set w_i_pessoas=null;
		
		// *****  Converte tabela bethadba.funcionarios
		-- BUG BTHSC-6292
		--bug BTHSC-7932
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		--BUG BTHSC-6292
		set w_dv=bethadba.dbf_calcmod11(w_i_funcionarios);
		
		select first depois_1 
		into w_i_pessoas 
		from tecbth_delivery.antes_depois 
		where tipo = 'P' 
		and	antes_1 = w_i_entidades 
		and antes_2 = w_cdPessoa
		and w_cdPessoa != 0;
		-- BUG BTHSC-7980 Migrar informação do Tipo de Provimento no cadastro do matriculas
select first 
provimento = ( case  when CdTpProvimento = 85100 then 1 
                     when CdTpProvimento = 85200 then 2
                     when CdTpProvimento = 85990 then 99 
                     when CdTpProvimento = 85700 then 7 
else CdTpProvimento
end) into w_provimento
 from gp001_CARGO  where cdcargo = w_cargos;
		if w_cdAdmissao = 3 then
			set w_tipo_admissao=5
		elseif w_cdAdmissao = 4 then
			set w_tipo_admissao=6
		elseif w_cdAdmissao = 5 then
			set w_tipo_admissao=4
		elseif w_cdAdmissao in(6) then
			set w_tipo_admissao=5
		elseif w_cdAdmissao = 0 then
			set w_tipo_admissao=1
        else
			set w_tipo_admissao=w_cdAdmissao
		end if;
		
		if w_nrContaFgts = 0 then
			set w_conta_fgts=null
		else
			set w_conta_fgts=w_nrContaFgts
		end if;
		
		if w_InContribuicaoSindical = 'X' then
			set w_contrib_sindical='N'
		else
			set w_contrib_sindical=upper(w_InContribuicaoSindical)
		end if;
		
		if w_contrib_sindical = 'S' then
			select depois_1 
			into w_i_sindicatos 
			from tecbth_delivery.antes_depois 
			where tipo = 'S'
		else
			set w_i_sindicatos=null
		end if;
		
		if w_inSituacaoFuncional = 1 then
			set w_tipo_func='F'
		elseif w_inSituacaoFuncional = 2 then
			set w_tipo_func='F'
		elseif w_inSituacaoFuncional = 3 then
			set w_tipo_func='B'
		elseif w_inSituacaoFuncional = 9 then
			set w_tipo_func='A'
		end if;
		--BUG BTHSC-8011 Não migrou registros de autonomos
		if vinculos in (17, 52, 51) then 
		set w_tipo_func='A'
		end if;
		--bug BTHSC-8074 Data da Posse
		if w_dt_admissao< '2000-01-01' then 
		set w_dt_base = w_dt_posse
		end if;
		
		
		if w_i_pessoas != 0 then
			message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Pes.: '||w_i_pessoas||' Adm.: '||w_dt_admissao to client;
			insert into bethadba.funcionarios(i_entidades,i_funcionarios,dv,i_pessoas,dt_admissao,tipo_admissao,categoria,dt_opcao_fgts,conta_fgts,dt_base,contrib_sindical,i_sindicatos,conta_vaga,
											sai_rais,tipo_func,tipo_pens,conta_adicional,conta_licpremio,conta_temposerv,lei_contrato,codigo_esocial,tipo_provimento)on existing skip
			values (w_i_entidades,w_i_funcionarios,w_dv,w_i_pessoas,w_dt_admissao,w_tipo_admissao,w_categoria,w_dt_opcao_fgts,w_conta_fgts,w_dt_base,w_contrib_sindical,w_i_sindicatos,'S',
					w_sai_rais,w_tipo_func,null,'N','N','N',null,w_esocial,w_provimento);
			
			// *****  Converte tabela bethadba.pessoas_contas
			set w_i_pessoas_contas=null;
			
			if(trim(w_nrContaCorrente) != '999999999999') and (trim(w_nrContaCorrente) != '99999999999') and (trim(w_nrContaCorrente) != '999999999')  then
				if(cast(trim(fu_tirachars(w_NrContaCorrente,'.-')) as decimal(15)) != 0) then				
					/*if w_i_bancos in(1,757,758,761,762,763,764) then
						set w_i_bancos = 1
					elseif w_i_bancos in(27) then
						set w_i_bancos = 27
					elseif w_i_bancos in(104) then
						set w_i_bancos = 104
					elseif w_i_bancos in(237) then
						set w_i_bancos = 237			
					elseif w_i_bancos in(756,765) then
						set w_i_bancos = 756		
					elseif w_i_bancos in(759,760) then
						set w_i_bancos = 800		
					end if;*/
                    
				    if not exists (select 1 from bethadba.bancos where i_bancos = w_i_bancos) then
                      set w_i_bancos = 800	
                    end if;
					set w_num_conta=string(cast(trim(fu_tirachars(fu_tirachars(fu_tirachars(w_NrContaCorrente,'.'),' .-'),'X')) as decimal(15)))+string(trim(w_dgContaCorrente));
					
					select coalesce((max(i_pessoas_contas)+1),1) 
					into w_i_pessoas_contas 
					from bethadba.pessoas_contas 
					where i_pessoas = w_i_pessoas;
					
					if w_cdTipoContaCorrente in(0,3) then
						set w_tipo_conta='1'
					elseif w_cdTipoContaCorrente in(2,13) then
						set w_tipo_conta='2'
					elseif w_cdTipoContaCorrente in(23) then
						set w_tipo_conta='3'
					else
						set w_tipo_conta='1'
					end if;
					
					set w_status='A'
				else
					set w_i_bancos=null;
					set w_i_agencias=null;
					set w_i_pessoas_contas=null;
					set w_tipo_conta=null;
					set w_status=null
				end if
			else
				set w_i_bancos=null;
				set w_i_agencias=null;
				set w_i_pessoas_contas=null;
				set w_tipo_conta=null;
				set w_status=null
			end if;
        if w_i_agencias is not null and  w_i_agencias <> 0 then  
         if not exists (select 1 from bethadba.agencias where i_agencias = w_i_agencias  and i_bancos = w_i_bancos) then
           insert into bethadba.agencias (i_bancos,i_agencias,dv_agencia,nome,qtde_zeros) values (w_i_bancos,w_i_agencias,bethadba.dbf_calcmod11(w_i_agencias),'Agencia: '+string(w_i_agencias),0)
          end if
         end if;  
          message 'Ban: '||w_i_bancos||' Age.: '||w_i_agencias||' Num. Con.: '||w_num_conta to client; 
			if(w_i_bancos is not null) and (w_i_agencias != 0) then
				if not exists (select 1 from bethadba.pessoas_contas where i_pessoas = w_i_pessoas and i_bancos = w_i_bancos and i_agencias = w_i_agencias and num_conta = w_num_conta and tipo_conta = w_tipo_conta) then
				
					message 'Pes.: '||w_i_pessoas||' Pes. Con.: '||w_i_pessoas_contas||' Ban: '||w_i_bancos||' Age.: '||w_i_agencias||' Num. Con.: '||w_num_conta to client; 
					insert into bethadba.pessoas_contas(i_pessoas,i_pessoas_contas,i_bancos,i_agencias,num_conta,tipo_conta,status)on existing skip
					values (w_i_pessoas,w_i_pessoas_contas,w_i_bancos,w_i_agencias,w_num_conta,w_tipo_conta,w_status);
				end if;
			end if;
		end if;
	end for;
end; 




--------------------------------------------------
-- 63) Locais Trab
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_locais_trab') then
	drop procedure cnv_locais_trab;
end if
;
-- bug BTHSC-7921
begin
	ooLoop: for oo as cnv_locais_trab dynamic scroll cursor for
		select 1 as w_i_entidades,cast(if left(dslocal,6) = '16.99.' then 97 else left(dslocal,6) endif as integer)  as w_i_locais_trab,dsLocal as w_nome ,*
		from tecbth_delivery.gp001_local 
		order by 1,2 asc		
	do
		message 'Ent: '||w_i_entidades||' Loc. Tra. '||w_i_locais_trab||' Nom.: '||w_nome to client;
	
		insert into bethadba.locais_trab(i_entidades,i_locais_trab,i_cidades,i_bairros,i_ruas,nome,fone)on existing skip
		values(w_i_entidades,w_i_locais_trab,null,null,null,w_nome,null); 
	end for;
end
;

rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;

	--------------------------------------------------
-- 67,68) Atos e Fontes Atos
-------------------------------------------------- 

rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;

begin
	// *****  Tabela bethadba.atos
	declare w_i_atos integer;
	declare w_num_ato char(10);
	declare w_num_diariooficial char(10);
	
	ooLoop: for oo as cnv_atos dynamic scroll cursor for
		select distinct  1 as w_i_tipos_atos,nrleicargo as w_NrDocumentoLegal,coalesce(dtleicargo,'2000-01-01') as w_DtAnoDocumentoLegal,coalesce(dtleicargo,'2000-01-01') as w_dt_inicial,
			   coalesce(dtleicargo,'2000-01-01') as w_dt_vigorar,nrleicargo as w_ementa,dtleicargo as w_dt_publicacao,dtleicargo as w_DtAnoOficial,nrleicargo as w_NrOficial,
			   null as w_num_proc_tce,null as w_num_resolucao,null as w_i_fontes_divulga 
		from tecbth_delivery.gp001_CARGO where w_NrDocumentoLegal <>''
 
		order by 3,2 asc	
	do
		// *****  Inicializa Variaveis
		set w_i_atos=null;
		set w_num_ato=null;
		set w_num_diariooficial=null;
		
		// *****  Converte tabela bethadba.atos
		select coalesce(max(i_atos),0)+1 
		into w_i_atos 
		from bethadba.atos;
		
		set w_num_ato=w_NrDocumentoLegal;

	
			set w_num_diariooficial=w_NrOficial;
	
		
		if w_dt_vigorar is null then
			set w_dt_vigorar = w_dt_inicial;
		end if;
		
		if not exists(select 1 from bethadba.atos where	num_ato = w_num_ato and	dt_inicial = w_dt_inicial) then
			message 'Ato.: '||w_i_atos||' Tip. Ato.: '||w_i_tipos_atos||' Dt Ini.: '||w_dt_inicial||' Dt Vig.: '||w_dt_vigorar to client;
			
			insert into bethadba.atos(i_atos,i_tipos_atos,num_ato,dt_inicial,dt_final,ementa,dt_publicacao,num_diariooficial,num_proc_tce,dt_vigorar,num_resolucao,origem_docto)on existing skip
			values (w_i_atos,w_i_tipos_atos,w_num_ato,w_dt_inicial,null,w_ementa,w_dt_publicacao,null,w_num_proc_tce,w_dt_vigorar,w_num_resolucao,300);
			
		
		end if ;
	end for;
end;


--------------------------------------------------
-- 54,64) Hist Funcionários, Locais Mov
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_hist_funcionarios') then
	drop procedure cnv_hist_funcionarios;
end if
; 

ROLLBACK;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 54,64) Hist Funcionários, Locais Mov
--------------------------------------------------
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_hist_funcionarios') then
	drop procedure cnv_hist_funcionarios;
end if
; 

begin
	// **** Primeiro cursor
	declare cur_conver dynamic scroll cursor for 
		select 1,left(Funcionario.cdMatricula, length(Funcionario.cdMatricula) - 1) as matricula,Funcionario.SqContrato,CdPessoa,DtAdmissao,Funcionario.cdFilial,cdVinculoEmpregaticio,InPagamentoLiquido,tecbth_delivery.fu_tirachars(tecbth_delivery.fu_tirachars(nrContaCorrente,'X'),'.'),dgContaCorrente,
			   NrBancoContaCorrente,NrAgenciaCheque,NrBancoCheque,NrAgenciaContaCorrente,cdHorario,InOpcaoFgts,inContribuiINSS,inContribuiFundoPrev,Funcionario.cdAgenteNocivo,DtUltimoExame,
			   dtFimContrato,DtTransferencia,cast(if left(sglotacao,6) = '16.99.' then 97 else left(sglotacao,6) endif as integer) ,if Lotacao.CdOrganograma = 99 then 2 else 1 endif, nivel1||nivel2||nivel3,SqCartaoPonto 
		from tecbth_delivery.GP001_Funcionario as Funcionario,tecbth_delivery.GP001_HistoricoLotacao as HistoricoLotacao,tecbth_delivery.GP001_Lotacao as Lotacao,tecbth_delivery.GP001_Empresa as Empresa 
		where TpTransferencia not in('E','F') 
		and Funcionario.CdMatricula = HistoricoLotacao.CdMatricula 
		and Funcionario.SqContrato = HistoricoLotacao.SqContrato 
		and HistoricoLotacao.CdLocalTransf = Lotacao.CdLocal 
		and Lotacao.CdOrganograma = Empresa.CdOrganograma  
		union
		select 1,left(Funcionario.cdMatricula, length(Funcionario.cdMatricula) - 1) as matricula,Funcionario.SqContrato,CdPessoa,DtAdmissao,Funcionario.cdFilial,cdVinculoEmpregaticio,InPagamentoLiquido,tecbth_delivery.fu_tirachars(tecbth_delivery.fu_tirachars(nrContaCorrente,'X'),'.'),dgContaCorrente,
			   NrBancoContaCorrente,NrAgenciaCheque,NrBancoCheque,NrAgenciaContaCorrente,cdHorario,InOpcaoFgts,inContribuiINSS,inContribuiFundoPrev,Funcionario.cdAgenteNocivo,DtUltimoExame,
			   dtFimContrato,date(now(*)),cast(if left(lotacao.sglotacao,6) = '16.99.' then 97 else left(lotacao.sglotacao,6) endif as integer) ,if Lotacao.CdOrganograma = 99 then 2 else 1 endif,
			   nivel1||nivel2||nivel3 ,SqCartaoPonto
		from tecbth_delivery.GP001_funcionario as funcionario,tecbth_delivery.GP001_lotacao as lotacao,tecbth_delivery.GP001_Empresa as Empresa 
		where funcionario.CdLocal = lotacao.CdLocal 
		and Lotacao.CdOrganograma = Empresa.CdOrganograma 
		union
		select 1,left(Funcionario.cdMatricula, length(Funcionario.cdMatricula) - 1) as matricula,Funcionario.SqContrato,CdPessoa,DtAdmissao,Funcionario.cdFilial,cdVinculoEmpregaticio,InPagamentoLiquido,tecbth_delivery.fu_tirachars(tecbth_delivery.fu_tirachars(nrContaCorrente,'X'),'.'),dgContaCorrente,
			   NrBancoContaCorrente,NrAgenciaCheque,NrBancoCheque,NrAgenciaContaCorrente,cdHorario,InOpcaoFgts,inContribuiINSS,inContribuiFundoPrev,Funcionario.cdAgenteNocivo,DtUltimoExame,
			   dtFimContrato,now(*),cast(if left(lotacao.sglotacao,6) = '16.99.' then 97 else left(lotacao.sglotacao,6) endif as integer) ,if Lotacao.CdOrganograma = 99 then 2 else 1 endif, nivel1||nivel2||nivel3 ,SqCartaoPonto
		from tecbth_delivery.GP001_funcionario as funcionario, tecbth_delivery.GP001_lotacao as lotacao,tecbth_delivery.GP001_Empresa as Empresa 
		where funcionario.CdLocal = lotacao.CdLocal 
		and Lotacao.CdOrganograma = Empresa.CdOrganograma 
		order by 1,2,3,22 asc;	
	 
	 
	// **** Segundo cursor
	declare cur_conver3 dynamic scroll cursor for 
		select 1,left(Funcionario.cdMatricula, length(Funcionario.cdMatricula) - 1),Funcionario.SqContrato,DtAdmissao,DtInicio,HistoricoVinculo.CdVinculoEmpregaticio
		from tecbth_delivery.GP001_Funcionario as Funcionario,tecbth_delivery.GP001_HistoricoVinculo as HistoricoVinculo 
		where Funcionario.CdMatricula = HistoricoVinculo.CdMatricula 
		and Funcionario.SqContrato = HistoricoVinculo.SqContrato 
		order by 1,2,3,5 asc;
		  
	// *****  Tabela bethadba.hist_funcionarios
	declare w_i_entidades integer;
	declare w_i_funcionarios integer;
	declare w_dt_alteracoes timestamp;
	declare w_i_config_organ smallint;
	declare w_i_organogramas char(16);
	declare w_i_grupos smallint;
	declare w_i_vinculos smallint;
	declare w_i_pessoas integer;
	declare w_i_bancos integer;
	declare w_i_agencias integer;
	declare w_i_pessoas_contas char(15);
	declare w_i_horarios smallint;
	declare w_func_princ integer;
	declare w_i_agentes_nocivos char(4);
	declare w_optante_fgts char(1);
	declare w_prev_federal char(1);
	declare w_prev_estadual char(1);
	declare w_fundo_ass char(1);
	declare w_fundo_prev char(1);
	declare w_ocorrencia_sefip tinyint;
	declare w_forma_pagto char(1);
	declare w_multiplic decimal(3,2);
	declare w_num_quadro_cp smallint;
	declare w_num_cp char(8);
	declare w_SqCartaoPonto varchar(8);
	
	// *****  Tabela tecbth_delivery.funcionario	
	declare w_CdMatricula integer;
	declare w_SqContrato smallint;
	declare w_CdPessoa double;
	declare w_DtAdmissao timestamp;
	declare w_dtFimContrato timestamp;
	declare w_NrBancoCheque smallint;
	declare w_NrAgenciaCheque smallint;
	declare w_NrBancoContaCorrente smallint;
	declare w_NrAgenciaContaCorrente smallint;
	declare w_NrContaCorrente varchar(12);
	declare w_dgContaCorrente varchar(2);
	declare w_InOpcaoFgts varchar(1);
	declare w_CdVinculoEmpregaticio smallint;
	declare w_CdFilial smallint;
	declare w_CdLocal smallint;
	declare w_cdHorario smallint;
	declare w_DtUltimoExame timestamp;
	declare w_cdAgenteNocivo smallint;
	declare w_inContribuiINSS smallint;
	declare w_inContribuiFundoPrev smallint;
	declare w_InPagamentoLiquido varchar(2);
	declare w_i_planos_previd integer;
	// *****  Tabela tecbth_delivery.historicolotacao
	declare w_cdLocalTransf smallint;
	
	// *****  Tabela tecbth_delivery.lotacao
	declare w_cdOrganograma smallint;
	declare w_cdLotacao varchar(100);
	
	// *****  Variaveis auxiliares
	declare w_data datetime;
	declare w_number integer;
	declare w_i_funcionarios_aux integer;
	open cur_conver with hold;
		set w_number=0;
		L_item: loop
			fetch next cur_conver into w_i_entidades,w_cdMatricula,w_SqContrato,w_CdPessoa,w_DtAdmissao,w_cdFilial,w_cdVinculoEmpregaticio,w_InPagamentoLiquido,w_nrContaCorrente,
									   w_dgContaCorrente,w_NrBancoContaCorrente,w_NrAgenciaCheque,w_NrBancoCheque,w_NrAgenciaContaCorrente,w_cdHorario,w_InOpcaoFgts,w_inContribuiINSS,
									   w_inContribuiFundoPrev,w_cdAgenteNocivo,w_DtUltimoExame,w_dtFimContrato,w_data,w_cdLocalTransf,w_CdOrganograma,w_CdLotacao,w_SqCartaoPonto;
			
			if sqlstate = '02000' then
				leave L_item
			end if;
			
			// *****  Inicializa Variaveis
			set w_i_funcionarios=null;
			set w_dt_alteracoes=null;
			set w_i_config_organ=null;
			set w_i_organogramas=null;
			set w_i_grupos=null;
			set w_i_vinculos=null;
			set w_i_pessoas=null;
			set w_i_bancos=null;
			set w_i_agencias=null;
			set w_i_pessoas_contas=null;
			set w_i_horarios=null;
			set w_func_princ=null;
			set w_i_agentes_nocivos=null;
			set w_optante_fgts=null;
			set w_prev_federal=null;
			set w_prev_estadual=null;
			set w_fundo_ass=null;
			set w_fundo_prev=null;
			set w_ocorrencia_sefip=null;
			set w_forma_pagto=null;
			set w_multiplic=null;
			set w_num_quadro_cp=null;
			set w_num_cp=null;
			set w_i_planos_previd = null;
			
			// *****  Converte tabela bethadba.hist_funcionarios
			set w_i_funcionarios=cast(w_cdMatricula as integer);

			if w_i_funcionarios_aux != w_i_funcionarios then
				set w_number=0
			end if;
			
			set w_number=w_number+1;
			
			if w_number = 1 then
				set w_dt_alteracoes=hours(w_dtAdmissao,0)
			else
				fetch prior cur_conver into w_i_entidades,w_cdMatricula,w_SqContrato,w_CdPessoa,w_DtAdmissao,w_cdFilial,w_cdVinculoEmpregaticio,w_InPagamentoLiquido,w_nrContaCorrente,
											w_dgContaCorrente,w_NrBancoContaCorrente,w_NrAgenciaCheque,w_NrBancoCheque,w_NrAgenciaContaCorrente,w_cdHorario,w_InOpcaoFgts,w_inContribuiINSS,
											w_inContribuiFundoPrev,w_cdAgenteNocivo,w_DtUltimoExame,w_dtFimContrato,w_data,w_cdLocalTransf,w_CdOrganograma,w_CdLotacao,w_SqCartaoPonto;
				
				if date(w_data) < w_dtAdmissao then
					set w_dt_alteracoes=hours(w_dtAdmissao,1)
				else
					set w_dt_alteracoes=hours(date(w_data),1)
				end if;
				
				fetch next cur_conver into w_i_entidades,w_cdMatricula,w_SqContrato,w_CdPessoa,w_DtAdmissao,w_cdFilial,w_cdVinculoEmpregaticio,w_InPagamentoLiquido,w_nrContaCorrente,
										   w_dgContaCorrente,w_NrBancoContaCorrente,w_NrAgenciaCheque,w_NrBancoCheque,w_NrAgenciaContaCorrente,w_cdHorario,w_InOpcaoFgts,w_inContribuiINSS,
										   w_inContribuiFundoPrev,w_cdAgenteNocivo,w_DtUltimoExame,w_dtFimContrato,w_data,w_cdLocalTransf,w_CdOrganograma,w_CdLotacao,w_SqCartaoPonto
			end if;
			
			set w_i_config_organ = w_CdOrganograma;
			
			set w_i_organogramas = w_CdLotacao;
			set w_i_grupos = w_cdFilial;
			
			select first depois_1 
			into w_i_vinculos 
			from tecbth_delivery.antes_depois 
			where tipo = 'V'
			and antes_1 = w_i_entidades
			and antes_2 = w_cdVinculoEmpregaticio;
		
			if w_i_vinculos is null then
				set w_i_vinculos=1;
			end if;			
			
			if exists(select 1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios and dt_opcao_fgts is not null) then
				set w_optante_fgts='S';
			else
				set w_optante_fgts='N';
			end if;
			
			/*
			if w_cdVinculoEmpregaticio in(1,3,8,9,10) then
				set w_prev_federal='S'
			else
				set w_prev_federal='N'
			end if;
			
			set w_prev_estadual='N';
			set w_fundo_ass='N';
			
			if w_prev_federal = 'N' then
				set w_fundo_prev='S'
			else
				set w_fundo_prev='N'
			end if;
			*/
			if w_inContribuiFundoPrev in(-1) then
			set w_fundo_prev='S';
			set w_prev_federal='N';
			SET w_i_planos_previd = 1;
			ELSE
			set w_prev_federal='S';
			set w_fundo_prev='N';
            end if;
			
		set w_prev_estadual ='N';
		set w_fundo_ass ='N';
			set w_i_pessoas=null;
			set w_i_pessoas_contas=null;
				
			if(w_InPagamentoLiquido = 'B') and(string(cast(trim(tecbth_delivery.fu_tirachars(w_nrContaCorrente,'.-')) as decimal(15))) != 0) then
				select first depois_1 
				into w_i_pessoas 
				from tecbth_delivery.antes_depois 
				where tipo = 'P' 
				and antes_1 = w_i_entidades 
				and antes_2 = w_cdPessoa;
				
				set w_i_bancos=w_NrBancoContaCorrente;
				
				 if not exists (select 1 from bethadba.bancos where i_bancos = w_i_bancos ) then
					set w_i_bancos = 800;
				end if;
			
				set w_i_agencias=w_NrAgenciaContaCorrente;
				
				select first i_pessoas_contas 
				into w_i_pessoas_contas 
				from bethadba.pessoas_contas 
				where i_pessoas = w_i_pessoas 
				and i_bancos = w_i_bancos 
				and i_agencias = w_i_agencias 
				and num_conta = string(cast(trim(tecbth_delivery.fu_tirachars(w_NrContaCorrente,' .-')) as decimal(15)))+string(trim(w_dgContaCorrente));
				
				set w_forma_pagto='R'
			elseif(w_InPagamentoLiquido = 'B') and(string(cast(trim(tecbth_delivery.fu_tirachars(w_nrContaCorrente,' .-')) as decimal(15))) = 0) then
				set w_i_bancos=null;
				set w_i_agencias=null;
				set w_i_pessoas_contas=null;
				set w_forma_pagto='D'
			elseif w_InPagamentoLiquido = 'C' then
				if(w_NrAgenciaCheque != 0) and(w_NrBancoCheque != 0) then
					set w_i_bancos=w_NrBancoCheque;
					set w_i_agencias=w_NrAgenciaCheque;
					set w_i_pessoas_contas=null;
					set w_forma_pagto='C'
				else
					set w_i_bancos=null;
					set w_i_agencias=null;
					set w_i_pessoas_contas=null;
					set w_forma_pagto='D'
				end if
			elseif w_InPagamentoLiquido = 'D' then
				set w_i_bancos=null;
				set w_i_agencias=null;
				set w_i_pessoas_contas=null;
				set w_forma_pagto='D'
			end if;
			
			select first depois_1 
			into w_i_horarios 
			from tecbth_delivery.antes_depois
			where tipo = 'H' 
			and antes_1 = w_i_entidades 
			and antes_2 = w_cdHorario;
			
			set w_func_princ=null;
			set w_i_agentes_nocivos=null;
			set w_ocorrencia_sefip=1;
			set w_multiplic=1.0;
			
			if not exists(select 1 from bethadba.agencias where i_bancos = w_i_bancos and i_agencias = w_i_agencias) then
				set w_i_bancos=null;
				set w_i_agencias=null;
				set w_i_pessoas_contas=null;
				set w_forma_pagto='D'
			end if;
			
			set w_num_quadro_cp=null;
			
			if trim(w_SqCartaoPonto) in('0','') then
				set w_num_cp=null;
			else
				set w_num_cp=trim(w_SqCartaoPonto);
			end if;
			--BUG BTHSC-7952 Vincular o Plano de Previdência dos funcionários ocupantes do Fundo de Previdência
			if w_i_planos_previd is not null then
			insert into  bethadba.hist_planos_previd_func (i_entidades,i_funcionarios,i_planos_previd,dt_inicial,dt_final,matricula) on existing skip
values (w_i_entidades,w_i_funcionarios,w_i_planos_previd,'2023-01-01',null,null)
end if;

			if w_dt_alteracoes is not null then
				if exists(select 1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
					if not exists(select 1 from bethadba.hist_funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
						message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_alteracoes to client;
						
						insert into bethadba.hist_funcionarios(i_entidades,i_funcionarios,dt_alteracoes,i_config_organ,i_organogramas,i_grupos,i_vinculos,i_pessoas,i_bancos,i_agencias,
															   i_pessoas_contas,i_horarios,func_princ,i_agentes_nocivos,optante_fgts,prev_federal,prev_estadual,fundo_ass,fundo_prev,
															   ocorrencia_sefip,forma_pagto,multiplic,fundo_financ,categoria)on existing skip
  					    values(w_i_entidades,w_i_funcionarios,w_dt_alteracoes,w_i_config_organ,w_i_organogramas,w_i_grupos,w_i_vinculos,w_i_pessoas,w_i_bancos,w_i_agencias,w_i_pessoas_contas,
							   w_i_horarios,w_func_princ,w_i_agentes_nocivos,w_optante_fgts,w_prev_federal,w_prev_estadual,w_fundo_ass,w_fundo_prev,w_ocorrencia_sefip,w_forma_pagto,w_multiplic,'N','M')
					
					elseif exists(select 1 from bethadba.hist_funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios 
								  and dt_alteracoes = (select max(dt_alteracoes) 
													   from bethadba.hist_funcionarios 
													   where i_entidades = w_i_entidades 
													   and i_funcionarios = w_i_funcionarios) 
								  and (i_config_organ != w_i_config_organ or i_organogramas != w_i_organogramas)) then
					
						set w_dt_alteracoes=hours(date(w_dt_alteracoes),1);
						
						message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_alteracoes to client;	
						
						insert into bethadba.hist_funcionarios(i_entidades,i_funcionarios,dt_alteracoes,i_config_organ,i_organogramas,i_grupos,i_vinculos,i_pessoas,i_bancos,i_agencias,
															   i_pessoas_contas,i_horarios,func_princ,i_agentes_nocivos,optante_fgts,prev_federal,prev_estadual,fundo_ass,fundo_prev,
															   ocorrencia_sefip,forma_pagto,multiplic,fundo_financ,categoria)on existing skip 
						values(w_i_entidades,w_i_funcionarios,w_dt_alteracoes,w_i_config_organ,w_i_organogramas,w_i_grupos,w_i_vinculos,w_i_pessoas,w_i_bancos,w_i_agencias,w_i_pessoas_contas,
							   w_i_horarios,w_func_princ,w_i_agentes_nocivos,w_optante_fgts,w_prev_federal,w_prev_estadual,w_fundo_ass,w_fundo_prev,w_ocorrencia_sefip,w_forma_pagto,w_multiplic,'N','M'); 
					end if;
					
					if not exists(select 1 from bethadba.locais_mov where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios and dt_inicial = date(w_dt_alteracoes)) 
								  and(w_cdLocalTransf != 0) then
						message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Loc.: '||w_cdLocalTransf||' Hr.: '||w_i_horarios to client;
						
						insert into bethadba.locais_mov(i_entidades,i_funcionarios,i_locais_trab,dt_inicial,dt_final,i_horarios)on existing skip
						values(w_i_entidades,w_i_funcionarios,w_cdLocalTransf,date(w_dt_alteracoes),null,w_i_horarios);
					
					elseif exists(select 1 from bethadba.locais_mov where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios 
								  and dt_inicial = (select max(dt_inicial) 
												    from bethadba.locais_mov 
													where i_entidades = w_i_entidades 
													and i_funcionarios = w_i_funcionarios) 
							   	  and i_locais_trab != w_cdLocalTransf) and(w_cdLocalTransf != 0) then
						
						update bethadba.locais_mov 
						set dt_final = w_dt_alteracoes 
						where i_entidades = w_i_entidades 
						and i_funcionarios = w_i_funcionarios 
						and dt_inicial = (select max(dt_inicial) 
										  from bethadba.locais_mov 
										  where i_entidades = w_i_entidades 
										  and i_funcionarios = w_i_funcionarios);
						
						message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Loc.: '||w_cdLocalTransf||' Hr.: '||w_i_horarios to client;	
						
						insert into bethadba.locais_mov(i_entidades,i_funcionarios,i_locais_trab,dt_inicial,dt_final,i_horarios)on existing skip 
						values(w_i_entidades,w_i_funcionarios,w_cdLocalTransf,w_dt_alteracoes,null,w_i_horarios);
					end if
				end if
			end if;
			set w_i_funcionarios_aux=w_i_funcionarios
		end loop L_item;
	close cur_conver;
	
	// **** Segundo Cursor
	open cur_conver3 with hold;
		set w_number=0;
		L_item3: loop
			fetch next cur_conver3 into w_i_entidades,w_cdMatricula,w_SqContrato,w_DtAdmissao,w_data,w_cdVinculoEmpregaticio;
			
			if sqlstate = '02000' then
				leave L_item3
			end if;
		
			set w_i_funcionarios=w_cdMatricula;
			
			if w_i_funcionarios_aux != w_i_funcionarios then
				set w_number=0;
			end if;
			
			set w_number=w_number+1;
			set w_dt_alteracoes=hours(date(w_data),1);
			
			if w_number = 1 then
				set w_dt_alteracoes=hours(w_dtAdmissao,0);
			else
                    if date(w_dt_alteracoes) < w_dtAdmissao then
			    	set w_dt_alteracoes=hours(w_dtAdmissao,1);
		        	else
				    set w_dt_alteracoes=hours(date(w_data),1);
			        end if
            end if;
		
		// **** Verificar a previdencia
		/*
		if w_cdVinculoEmpregaticio in(1,3,8,9,10) then
			set w_prev_federal='S'
		else
			set w_prev_federal='N'
		end if;
		
		set w_prev_estadual ='N';
		set w_fundo_ass ='S';
		
		if w_prev_federal = 'N' then
			set w_fundo_prev='S'
		else
			set w_fundo_prev='N'
		end if;
		*/
		if w_inContribuiFundoPrev in(-1) then
			set w_fundo_prev='S';
			set w_prev_federal='N';
			ELSE
			set w_prev_federal='S';
			set w_fundo_prev='N';
			end if;
		
		set w_prev_estadual ='N';
		set w_fundo_ass ='N';
		
		if exists(select 1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
			if not exists(select 1 from bethadba.hist_funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_alteracoes to client;	
				insert into bethadba.hist_funcionarios(i_entidades,i_funcionarios,dt_alteracoes,i_config_organ,i_organogramas,i_grupos,i_vinculos,i_pessoas,i_bancos,i_agencias,
													   i_pessoas_contas,i_horarios,func_princ,i_agentes_nocivos,optante_fgts,prev_federal,prev_estadual,fundo_ass,fundo_prev,ocorrencia_sefip,
													   forma_pagto,multiplic,fundo_financ,categoria) 
				values (w_i_entidades,w_i_funcionarios,w_dt_alteracoes,w_i_config_organ,w_i_organogramas,w_i_grupos,w_i_vinculos,w_i_pessoas,w_i_bancos,w_i_agencias,w_i_pessoas_contas,
						w_i_horarios,w_func_princ,w_i_agentes_nocivos,w_optante_fgts,w_prev_federal,w_prev_estadual,w_fundo_ass,w_fundo_prev,w_ocorrencia_sefip,w_forma_pagto,w_multiplic,'N','M') 
			elseif exists(select 1 from bethadba.hist_funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios 
					      and dt_alteracoes = (select max(dt_alteracoes) 
											   from bethadba.hist_funcionarios 
											   where i_entidades = w_i_entidades 
											   and i_funcionarios = w_i_funcionarios) 
						  and i_vinculos != w_i_vinculos) then
				
				if exists(select 1 from bethadba.hist_funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios and dt_alteracoes = w_dt_alteracoes) then
					update bethadba.hist_funcionarios 
					set i_vinculos = w_i_vinculos 
					where i_entidades = w_i_entidades 
					and i_funcionarios = w_i_funcionarios 
					and dt_alteracoes = w_dt_alteracoes
				else
					select first i_config_organ,i_organogramas,i_grupos,i_pessoas,i_bancos,i_agencias,i_pessoas_contas,i_horarios,func_princ,i_agentes_nocivos,optante_fgts,prev_federal,
								 prev_estadual,fundo_ass,fundo_prev,ocorrencia_sefip,forma_pagto,multiplic 
					into w_i_config_organ,w_i_organogramas,w_i_grupos,w_i_pessoas,w_i_bancos,w_i_agencias,w_i_pessoas_contas,w_i_horarios,w_func_princ,w_i_agentes_nocivos,w_optante_fgts,
					     w_prev_federal,w_prev_estadual,w_fundo_ass,w_fundo_prev,w_ocorrencia_sefip,w_forma_pagto,w_multiplic 
					from bethadba.hist_funcionarios 
					where i_entidades = w_i_entidades 
					and i_funcionarios = w_i_funcionarios 
					and dt_alteracoes < w_dt_alteracoes 
					order by dt_alteracoes desc;
					
					message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_alteracoes to client;						
					insert into bethadba.hist_funcionarios(i_entidades,i_funcionarios,dt_alteracoes,i_config_organ,i_organogramas,i_grupos,i_vinculos,i_pessoas,i_bancos,i_agencias,
														   i_pessoas_contas,i_horarios,func_princ,i_agentes_nocivos,optante_fgts,prev_federal,prev_estadual,fundo_ass,fundo_prev,
														   ocorrencia_sefip,forma_pagto,multiplic,fundo_financ,categoria) 
					values (w_i_entidades,w_i_funcionarios,w_dt_alteracoes,w_i_config_organ,w_i_organogramas,w_i_grupos,w_i_vinculos,w_i_pessoas,w_i_bancos,w_i_agencias,w_i_pessoas_contas,
					        w_i_horarios,w_func_princ,w_i_agentes_nocivos,w_optante_fgts,w_prev_federal,w_prev_estadual,w_fundo_ass,w_fundo_prev,w_ocorrencia_sefip,w_forma_pagto,w_multiplic,'N','M');
				
					update bethadba.hist_funcionarios 
					set i_vinculos = w_i_vinculos 
					where i_entidades = w_i_entidades 
					and i_funcionarios = w_i_funcionarios 
					and dt_alteracoes >= w_dt_alteracoes
				end if
			end if
		end if;
		set w_i_funcionarios_aux=w_i_funcionarios;
	end loop L_item3;
	close cur_conver3
end;


 
--------------------------------------------------
-- 55) Hist Salariais
--------------------------------------------------
delete  bethadba.motivos_altsal
;
if not exists (select 1 from sys.syscolumns where creator = current user  and tname = 'gp001_MotivoEvolucao' and cname = 'w_i_motivos_alt_sal_new') then 
	alter table gp001_MotivoEvolucao add(w_i_motivos_alt_sal_new integer);
end if
;
update gp001_MotivoEvolucao set w_i_motivos_alt_sal_new = cdmotivo 
;
insert into bethadba.motivos_altsal(i_motivos_altsal,descricao,codigo_tce)on existing skip
select w_i_motivos_alt_sal_new,DsMotivo,null from gp001_MotivoEvolucao;
commit
;

if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_hist_salarial') then
	drop procedure cnv_hist_salarial;
end if
;


ROLLBACK;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;

--------------------------------------------------------------
---//Convertendo o Historico de Salarios
--------------------------------------------------------------
-- BUG BTHSC-7933  select * from tecbth_delivery.gp001_HistoricoSalarial where CdMatricula in (14664,32956,32131)  NAO TEM HISTORICO
begin
  declare cur_conver dynamic scroll cursor for 
    select 1, left(Funcionario.CdMatricula, length(Funcionario.CdMatricula) - 1) ,Funcionario.SqContrato,dtAdmissao,
       Nrdias,NrHorasDia,if DtHistorico is null then dtAdmissao else dtgeracao endif,HistoricoSalarial.cdEstruturaSalarial,HistoricoSalarial.CdGrupoFaixaSalarial,
       HistoricoSalarial.NrSequenciaFaixa,cdMotivo,VlSalarioFaixa,VlSalario,dtgravacao,1 
 from  tecbth_delivery.gp001_Funcionario as Funcionario,tecbth_delivery.gp001_HistoricoSalarial as HistoricoSalarial,tecbth_delivery.gp001_Escala as Escala 
where  Funcionario.CdMatricula *= HistoricoSalarial.CdMatricula 
  and  Funcionario.SqContrato *= HistoricoSalarial.SqContrato 
  and  Funcionario.CdEscalaTrabalho = Escala.CdEscala 

union

select 1,left(Funcionario.CdMatricula, length(Funcionario.CdMatricula) - 1),Funcionario.SqContrato,dtAdmissao,
	   Nrdias,NrHorasDia,if DtHistorico is null then dtAdmissao else dtgeracao endif,HistoricoSalarial.cdEstruturaSalarial,HistoricoSalarial.CdGrupoFaixaSalarial,
	   HistoricoSalarial.NrSequenciaFaixa,cdMotivo,VlSalarioFaixa,VlSalario,dtgravacao,1 
 from  tecbth_delivery.gp001_Funcionario as Funcionario,tecbth_delivery.gp001_HistoricoSalarial as HistoricoSalarial,tecbth_delivery.gp001_Escala as Escala 
where  Funcionario.CdMatricula *= HistoricoSalarial.CdMatricula 
  and  Funcionario.SqContrato *= HistoricoSalarial.SqContrato 
  and  Funcionario.CdEscalaTrabalho = Escala.CdEscala 

union

select 1,left(Funcionario.CdMatricula, length(Funcionario.CdMatricula) - 1),Funcionario.SqContrato,dtAdmissao,
       Nrdias,NrHorasDia,if DtHistorico is null then dtAdmissao else dtgeracao endif,HistoricoSalarial.cdEstruturaSalarial,HistoricoSalarial.CdGrupoFaixaSalarial,
       HistoricoSalarial.NrSequenciaFaixa,cdMotivo,VlSalarioFaixa,VlSalario,dtgravacao,1 
 from  tecbth_delivery.gp001_Funcionario as Funcionario,tecbth_delivery.gp001_HistoricoSalarial as HistoricoSalarial,tecbth_delivery.gp001_Escala as Escala 
where  Funcionario.CdMatricula *= HistoricoSalarial.CdMatricula 
  and  Funcionario.SqContrato *= HistoricoSalarial.SqContrato 
  and  Funcionario.CdEscalaTrabalho = Escala.CdEscala 

union

select 1,left(Funcionario.CdMatricula, length(Funcionario.CdMatricula) - 1),Funcionario.SqContrato,dtAdmissao,
       Nrdias,NrHorasDia,if DtHistorico is null then dtAdmissao else dtgeracao endif,HistoricoSalarial.cdEstruturaSalarial,HistoricoSalarial.CdGrupoFaixaSalarial,
       HistoricoSalarial.NrSequenciaFaixa,cdMotivo,VlSalarioFaixa,VlSalario,dtgravacao,1 
 from  tecbth_delivery.gp001_Funcionario as Funcionario,tecbth_delivery.gp001_HistoricoSalarial as HistoricoSalarial,tecbth_delivery.gp001_Escala as Escala 
where  Funcionario.CdMatricula *= HistoricoSalarial.CdMatricula 
  and  Funcionario.SqContrato *= HistoricoSalarial.SqContrato 
  and  Funcionario.CdEscalaTrabalho = Escala.CdEscala 
order by 1 asc,2 asc,3 asc,7 asc,13 asc;
  // *****  Tabela bethadba.hist_salariais
  declare w_i_entidades integer;
  declare w_i_funcionarios integer;
  declare w_dt_alteracoes timestamp;
  declare w_i_niveis integer;
  declare ws_i_niveis char(50);
  declare w_i_clas_niveis char(3);
  declare w_i_referencias char(3);
  declare w_i_motivos_altsal smallint;
  declare w_i_atos integer;
  declare w_salario decimal(12,2);
  declare w_horas_mes decimal(5,2);
  declare w_horas_sem decimal(5,2);
  // *****  Tabela tecbth_delivery.funcionario
  declare w_CdMatricula integer;
  declare w_SqContrato smallint;
  declare w_DtAdmissao timestamp;
  declare w_cdEstruturaSalarial integer;
  declare w_nrSequenciaFaixa smallint;
  declare w_cdGrupoFaixaSalarial smallint;
  // *****  Tabela tecbth_delivery.historicosalarial
  declare w_DtHistorico timestamp;
  declare w_VlSalarioFaixa double;
  declare w_VlSalario double;
  declare w_cdMotivo smallint;
  declare w_DtGravacao timestamp;
  // *****  Tabela tecbth_delivery.escala
  declare w_Nrdias smallint;
  declare w_NrHorasDia double;
  // *****  Variaveis auxiliares
  declare w_cont integer;
  declare w_number integer;
  declare w_i_funcionarios_aux integer;
  declare w_config smallint;
  declare w_hora_alt integer;
  set w_cont=0;
  set w_i_funcionarios_aux=null;
  set w_number=0;
  open cur_conver with hold;
  L_item: loop
    fetch next cur_conver into w_i_entidades,w_cdMatricula,w_SqContrato,w_dtAdmissao,w_Nrdias,w_NrHorasDia,
      w_DtHistorico,w_cdEstruturaSalarial,w_cdGrupoFaixaSalarial,w_NrSequenciaFaixa,w_cdMotivo,w_VlSalarioFaixa,w_VlSalario,w_dtGravacao,
      w_config;
    if sqlstate = '02000' then
      leave L_item
    end if;
    set w_cont=w_cont+1;
    // *****  Inicializa Variaveis
    set w_i_funcionarios=null;
    set w_dt_alteracoes=null;
    set w_i_niveis=null;
    set w_i_clas_niveis=null;
    set w_i_referencias=null;
    set w_i_motivos_altsal=null;
    set w_i_atos=null;
    set w_salario=null;
    set w_horas_mes=null;
    set w_horas_sem=null;
    // *****  Converte tabela bethadba.hist_salariais
    set w_i_funcionarios=cast(w_cdMatricula as integer);
    set w_dt_alteracoes=hours("date"(w_DtHistorico),0);
    if w_i_funcionarios_aux <> w_i_funcionarios then
      set w_number=0
    end if;
    set w_number=w_number+1;
    if w_number = 1 then
      set w_dt_alteracoes=hours(w_dtAdmissao,0)
    else
      if "date"(w_dt_alteracoes) < w_dtAdmissao then
        set w_dt_alteracoes=hours(w_dtAdmissao,1)
      else
        set w_dt_alteracoes=hours("date"(w_DtHistorico),1)
      end if
    end if;
    if w_cdEstruturaSalarial <> 0 then
      print 'Estrutura: '+string(w_cdEstruturaSalarial)+' Faixa:'+string(w_cdGrupoFaixaSalarial)+' NrSequencialFaixa:'+string(w_NrSequenciaFaixa);
     set w_i_niveis=null;
      set w_i_clas_niveis=null;
      set w_i_referencias=null;
        if w_i_entidades = 1 then
        select first cdFaixaSalarial into ws_i_niveis from tecbth_delivery.gp001_salariofaixa where
          CdGrupoFaixaSalarial = w_CdGrupoFaixaSalarial and
          NrSequenciaFaixa = w_NrSequenciaFaixa and
          cdEstruturaSalarial = w_cdEstruturaSalarial     
        end if;
        if w_i_entidades = 1 then
       select first i_niveis into w_i_niveis from bethadba.niveis where
        i_entidades = w_i_entidades and
        nome = ws_i_niveis
        end if;
 

    if not exists(select 1 from bethadba.niveis where i_entidades = w_i_entidades and i_niveis = w_i_niveis) then
      set w_i_niveis=null
    end if;
    set w_salario=cast(isnull(w_VlSalarioFaixa,0) as decimal(12,2));
    if(w_i_niveis = 0) or(w_i_niveis is null) then
      set w_i_niveis=null;
      set w_i_clas_niveis=null;
      set w_i_referencias=null;
      set w_salario=cast(isnull(w_VlSalario,0) as decimal(12,2))
    end if;
    set w_i_motivos_altsal=w_cdMotivo;
    if w_i_motivos_altsal = 0 then
      set w_i_motivos_altsal=1
    end if;
    set w_horas_mes="truncate"(cast((w_nrdias-1)*w_NrHorasDia*5 as decimal(5,2)),2);
    if w_horas_mes = 200.10 then
		set w_horas_mes = 200.00
	elseif w_horas_mes = 219.90 then
		set w_horas_mes = 220.00
	elseif w_horas_mes = 80.10 then
		set w_horas_mes = 80
	end if;	
    set w_horas_sem=w_horas_mes/5;
    set w_i_atos=null;
    if w_number = 1 then
      set w_i_motivos_altsal=null
    end if;
    print string(w_i_entidades)+' - '+string(w_i_funcionarios)+' - '+string(w_number)+' - Salario - '+string(w_i_niveis)+' - '+string(w_config);
    if not exists(select 1 from bethadba.hist_salariais where
        i_entidades = w_i_entidades and
        i_funcionarios = w_i_funcionarios) then
      insert into bethadba.hist_salariais( i_entidades,i_funcionarios,dt_alteracoes,i_niveis,i_clas_niveis,
        i_referencias,i_motivos_altsal,i_atos,salario,horas_mes,horas_sem) values( w_i_entidades,w_i_funcionarios,
        w_dt_alteracoes,w_i_niveis,w_i_clas_niveis,w_i_referencias,w_i_motivos_altsal,w_i_atos,w_salario,w_horas_mes,
        w_horas_sem) 
    else
      if w_config = 1 then
        if exists(select 1 from bethadba.hist_salariais where
            i_entidades = w_i_entidades and
            i_funcionarios = w_i_funcionarios and
            dt_alteracoes = (select max(dt_alteracoes) from bethadba.hist_salariais where
              i_entidades = w_i_entidades and
              i_funcionarios = w_i_funcionarios) and
            (i_niveis <> w_i_niveis or
            i_motivos_altsal <> w_i_motivos_altsal or
            salario <> w_salario)) then
          if exists(select 1 from bethadba.hist_salariais where
              i_entidades = w_i_entidades and
              i_funcionarios = w_i_funcionarios and
              dt_alteracoes = w_dt_alteracoes) then
            update bethadba.hist_salariais set i_niveis = w_i_niveis,i_clas_niveis = w_i_clas_niveis,
              i_referencias = w_i_referencias,i_motivos_altsal = w_i_motivos_altsal,i_atos = w_i_atos,salario = w_salario,
              horas_mes = w_horas_mes,horas_sem = w_horas_sem where
              i_entidades = w_i_entidades and
              i_funcionarios = w_i_funcionarios and
              dt_alteracoes = w_dt_alteracoes
          else
            insert into bethadba.hist_salariais( i_entidades,i_funcionarios,dt_alteracoes,i_niveis,i_clas_niveis,
              i_referencias,i_motivos_altsal,i_atos,salario,horas_mes,horas_sem) values( w_i_entidades,w_i_funcionarios,
              w_dt_alteracoes,w_i_niveis,w_i_clas_niveis,w_i_referencias,w_i_motivos_altsal,w_i_atos,w_salario,w_horas_mes,
              w_horas_sem);
          end if
        end if;
      else
    if exists(select 1 from bethadba.hist_salariais where
            i_entidades = w_i_entidades and
            i_funcionarios = w_i_funcionarios and
            dt_alteracoes = w_dt_alteracoes) then
          (select max(hour(dt_alteracoes)) into w_hora_alt from bethadba.hist_salariais where
            i_entidades = w_i_entidades and
            i_funcionarios = w_i_funcionarios and
            cast(dt_alteracoes as date) = cast(w_dt_alteracoes as date) ) ;
            set w_dt_alteracoes=cast(w_dt_alteracoes||w_hora_alt+1 as char)               
        end if;

        insert into bethadba.hist_salariais( i_entidades,i_funcionarios,dt_alteracoes,i_niveis,i_clas_niveis,
          i_referencias,i_motivos_altsal,i_atos,salario,horas_mes,horas_sem) values( w_i_entidades,w_i_funcionarios,
          w_dt_alteracoes,w_i_niveis,w_i_clas_niveis,w_i_referencias,w_i_motivos_altsal,w_i_atos,w_salario,w_horas_mes,
          w_horas_sem);
    	end if
	    end if
		end if;
    set w_i_funcionarios_aux=w_i_funcionarios;
	message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_i_funcionarios to client;	
  end loop L_item;
  close cur_conver
end; 


--bug BTHSC-8022 Rescisões não foram totalmente migradas
insert into bethadba.hist_salariais
(i_entidades,i_funcionarios,dt_alteracoes,i_niveis,i_clas_niveis,i_referencias,i_motivos_altsal,i_atos,salario,horas_mes,horas_sem,observacao,controla_jornada_parc)
select 1,i_funcionarios,dt_admissao,null,null,null,null,null,0.00,220.00,40.00,null,null from bethadba.funcionarios a
where not exists(select 1 from bethadba.hist_salariais b where a.i_entidades = b.i_entidades and a.i_funcionarios = b.i_funcionarios)
commit;
--------------------------------------------------
-- 56) Hist Cargos
-------------------------------------------------- 
delete bethadba.motivos_altcar
;

insert into bethadba.motivos_altcar(i_motivos_altcar,descricao)on existing skip
select CdMotivo,DsMotivo 
from tecbth_delivery.gp001_motivoevolucao
;



if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_hist_cargos') then
	drop procedure cnv_hist_cargos;
end if
;


ROLLBACK;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;


begin
	// *****  Tabela bethadba.hist_cargos
	declare w_i_funcionarios integer;
	declare w_dt_alteracoes timestamp;
	
	// *****  Variaveis auxiliares
	declare w_cont integer;
	declare w_number integer;
	declare w_i_funcionarios_aux integer;
	declare w_descricao_i_atos char(50);
	declare w_i_atos integer;
	set w_cont=0;
	set w_number=0;
	ooLoop: for oo as cnv_hist_cargos dynamic scroll cursor for
		select 1 as w_i_entidades,Funcionario.cdMatricula as w_cdMatricula,Funcionario.SqContrato as w_SqContrato,dtAdmissao as w_dtAdmissao,if DtHistorico is null then dtAdmissao else DtHistorico endif as w_DtHistorico,
			cdMotivo as w_i_motivos_altcar,if HistoricoCargo.cdCargo is null then Funcionario.CdCargo else HistoricoCargo.cdCargo endif as w_i_cargos,DtValidade as w_dtValidade,HistoricoCargo.nrConcurso as w_i_concursos,
        DtPosseCargo as w_dt_posse,cdtipoferias as w_configferias from tecbth_delivery.GP001_Funcionario as Funcionario
		left outer join tecbth_delivery.GP001_HistoricoCargo AS HistoricoCargo on (Funcionario.CdMatricula = HistoricoCargo.CdMatricula and Funcionario.SqContrato = HistoricoCargo.SqContrato)
		order by 1,2,3,5,8 asc		
	do
		set w_cont=w_cont+1;
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_dt_alteracoes=null;
		
		// *****  Converte tabela bethadba.hist_cargos
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		if w_i_funcionarios_aux != w_i_funcionarios then
			set w_number=0
		end if;
		
		set w_number=w_number+1;
		
		set w_dt_alteracoes=hours(date(w_DtHistorico),1);
		
		if w_number = 1 then
			set w_dt_alteracoes=hours(w_dtAdmissao,0)
		else
		if date(w_dt_alteracoes) < w_dtAdmissao then
			set w_dt_alteracoes=hours(w_dtAdmissao,1)
		else
			set w_dt_alteracoes=hours(date(w_DtHistorico),1)
		end if
		end if;
		
		if w_i_motivos_altcar in(0,1) then
			set w_i_motivos_altcar=null
		else 
			set w_i_motivos_altcar=1	
		end if;
		--bug BTHSC-8167 Não migrou informação do ato dos cargos
		select first  NrLeiCargo into w_descricao_i_atos from gp001_CARGO where cdcargo = w_i_cargos;
		select first i_atos into w_i_atos from bethadba.atos where num_ato = w_descricao_i_atos;
		if w_i_concursos not in(0,9999) then			
			if not exists(select 1 from bethadba.concursos where i_entidades = w_i_entidades and i_concursos = w_i_concursos) then
				message 'Ent.: '||w_i_entidades||' Con.: '||w_i_concursos to client;
				
				insert into bethadba.concursos(i_entidades,i_concursos,descricao,dt_ini_insc,dt_fin_insc,dt_prorrog,dt_validade,dt_prorrog_validade,dt_homolog,justificativa,dt_encerra,
										       info_cand,tipo_concurso)on existing skip
				values (w_i_entidades,w_i_concursos,'Concurso '||w_i_concursos,'1900-01-01','1900-01-01',null,null,null,null,null,null,'M','C');
			end if
		else
			set w_i_concursos=null;
		end if;
		
		if w_number = 1 then
			set w_i_motivos_altcar=null
		end if;
		
		if not exists(select 1 from bethadba.cargos where i_entidades = w_i_entidades and i_cargos = w_i_cargos) then
			message 'Ent.: '||w_i_entidades||' Car.: '||w_i_cargos to client;
			
			insert into bethadba.cargos(i_entidades,i_cargos,i_cbo,i_tipos_cargos,nome)on existing skip
			values (w_i_entidades,w_i_cargos,null,99,'Não cadastrado');
						
			insert into bethadba.cargos_compl(i_entidades,i_cargos,i_config_ferias,i_config_ferias_subst,qtd_vagas,rol,grau_instrucao,codigo_tce,decimo_terc,requisitos,atividades,
											  i_licpremio_config,categoria,aposent_especial,acumula_cargos)on existing skip 
			values (w_i_entidades,w_i_cargos,w_configferias,1,99,null,1,w_i_cargos,'S',null,null,null,'M',0,'N');
			
			insert into bethadba.mov_cargos(i_entidades,i_cargos,dt_alteracoes,tipo_atualiz,num_lei,dt_lei,dt_vigorar,vagas_acresc,vagas_reduzir,i_atos)on existing skip 
			values (w_i_entidades,w_i_cargos,'1990-01-01',1,null,null,null,0,null,w_i_atos);
		end if;

		if exists_func(w_i_entidades,w_i_funcionarios) = 1 then
			if not exists(select 1 from bethadba.hist_cargos where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
				message 'Ent.: '||w_i_entidades||' Fun.:'||w_i_funcionarios||'Dt Alt.: '||w_dt_alteracoes||' Car.: '||w_i_cargos to client;
				
				insert into bethadba.hist_cargos(i_entidades,i_funcionarios,dt_alteracoes,dt_saida,i_cargos,i_motivos_altcar,i_atos,i_concursos,dt_nomeacao,dt_posse)on existing skip
				values (w_i_entidades,w_i_funcionarios,w_dt_alteracoes,null,w_i_cargos,w_i_motivos_altcar,w_i_atos,w_i_concursos,null,w_dt_posse); 
			elseif exists(select 1 from bethadba.hist_cargos where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios 
						and dt_alteracoes = (select max(dt_alteracoes) 
											from bethadba.hist_cargos 
											where i_entidades = w_i_entidades 
											and i_funcionarios = w_i_funcionarios) 
						and (i_cargos != w_i_cargos or i_concursos != w_i_concursos or dt_nomeacao != null or dt_posse != w_dt_posse)) then
				if exists(select 1 from bethadba.hist_cargos where i_entidades = w_i_entidades 	and i_funcionarios = w_i_funcionarios and dt_alteracoes = w_dt_alteracoes) then
					update bethadba.hist_cargos 
					set i_cargos = w_i_cargos,
						i_motivos_altcar = w_i_motivos_altcar,
						i_atos = null,
						i_concursos = w_i_concursos,
						dt_nomeacao = null,
						dt_posse = w_dt_posse 
					where i_entidades = w_i_entidades 
					and i_funcionarios = w_i_funcionarios 
					and dt_alteracoes = w_dt_alteracoes
				else
					message 'Ent.: '||w_i_entidades||' Fun.:'||w_i_funcionarios||'Dt Alt.: '||w_dt_alteracoes||' Car.: '||w_i_cargos to client;
				
					insert into bethadba.hist_cargos(i_entidades,i_funcionarios,dt_alteracoes,dt_saida,i_cargos,i_motivos_altcar,i_atos,i_concursos,dt_nomeacao,dt_posse)on existing skip
					values (w_i_entidades,w_i_funcionarios,w_dt_alteracoes,null,w_i_cargos,w_i_motivos_altcar,null,w_i_concursos,null,w_dt_posse);
				end if
			end if
		end if;
		
		set w_i_funcionarios_aux=w_i_funcionarios;
		
	end for;
end
;

--Ajuste no histórico de cargos
update BETHADBA.HIST_CARGOS 
set I_MOTIVOS_ALTCAR = 5
WHERE DT_ALTERACOES <> (SELECT DT_ADMISSAO FROM BETHADBA.FUNCIONARIOS WHERE FUNCIONARIOS.I_ENTIDADES = HIST_CARGOS.I_ENTIDADES AND FUNCIONARIOS.I_FUNCIONARIOS= HIST_CARGOS.I_FUNCIONARIOS)
AND I_MOTIVOS_ALTCAR  IS NULL;
commit
;

rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 57) Dependentes Func
-------------------------------------------------- 
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_dependentes_func') then
	drop procedure cnv_dependentes_func;
end if
;

begin
	// *****  Tabela bethadba.dependentes_func
	declare w_i_funcionarios integer;
	declare w_i_dependentes integer;
	declare w_dep_irrf char(1);
	declare w_i_tipos_salfam char(1);
	declare w_fundo_ass char(1);
	declare w_fundo_prev char(1);
	declare w_curso_tec_sup char(1);

	ooLoop: for oo as cnv_dependentes_func dynamic scroll cursor for
		select distinct 1 as w_i_entidades, left( funcionario.CdMatricula, length( funcionario.CdMatricula) - 1)  as w_CdMatricula,funcionario.CdMatricula as w_cdmatriculadep,funcionario.SqContrato as w_SqContrato,DependenteVerba.CdPessoa as w_CdPessoa,
			            Dependente.CdPessoaDependente as w_CdPessoaDependente,DependenteVerba.CdDependente as w_CdDependente,inEstuda as w_inEstuda
		from tecbth_delivery.gp001_DependenteVerba as DependenteVerba,tecbth_delivery.gp001_Dependente as Dependente,tecbth_delivery.gp001_funcionario as funcionario 
		where DependenteVerba.CdPessoa = Dependente.CdPessoa 
		and DependenteVerba.CdMatricula = funcionario.CdMatricula 
		and DependenteVerba.CdDependente = Dependente.CdDependente  
		order by 1,2,3 asc	
	do
		
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_i_dependentes=null;
		set w_dep_irrf=null;
		set w_i_tipos_salfam=null;
		set w_fundo_ass=null;
		set w_fundo_prev=null;
		set w_curso_tec_sup=null;
		
		// *****  Converte tabela bethadba.dependentes_func		
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		select first depois_1 
		into w_i_dependentes 
		from tecbth_delivery.antes_depois 
		where tipo = 'P' 
		and antes_1 = w_i_entidades 
		and antes_2 = w_CdPessoaDependente;
		
		if exists(select 1 from tecbth_delivery.gp001_dependenteverba where CdMatricula = w_cdmatriculadep and SqContrato = Sqcontrato and CdPessoa = w_cdPessoa and	CdDependente = w_CdDependente and CdVerba = 1158) then
			set w_dep_irrf='S'
		else
			set w_dep_irrf='N'
		end if;
		
		if exists(select 1 from tecbth_delivery.gp001_dependenteverba where CdMatricula = w_cdmatriculadep and SqContrato = Sqcontrato and CdPessoa = w_cdPessoa and CdDependente = w_CdDependente and CdVerba = 1004) then
			set w_i_tipos_salfam=1
		elseif exists(select 1 from tecbth_delivery.gp001_dependenteverba where CdMatricula = w_cdmatriculadep and SqContrato = Sqcontrato and CdPessoa = w_cdPessoa and CdDependente = w_CdDependente and CdVerba = 1166) then
				set w_i_tipos_salfam=2
			else
				set w_i_tipos_salfam=5			
		end if;
		
		if exists(select 1 from tecbth_delivery.gp001_dependenteverba where CdMatricula = w_cdmatriculadep and SqContrato = Sqcontrato and CdPessoa = w_cdPessoa and CdDependente = w_CdDependente and CdVerba = 1004) then
			set w_i_tipos_salfam=1
		elseif exists(select 1 from tecbth_delivery.gp001_dependenteverba where CdMatricula = w_cdmatriculadep and SqContrato = Sqcontrato and CdPessoa = w_cdPessoa and	CdDependente = w_CdDependente and CdVerba = 1166) then
			set w_i_tipos_salfam=2
		else
			set w_i_tipos_salfam=5		
		end if;
		
		set w_fundo_ass='N';
		set w_fundo_prev='N';
		
		if w_inEstuda != 0 then
			set w_curso_tec_sup='S'
		else
			set w_curso_tec_sup='N'
		end if;
		
		if exists(select 1 from bethadba.hist_funcionarios as b where b.i_entidades = w_i_entidades and b.i_funcionarios = w_i_funcionarios and b.fundo_prev = 'S' 
				  and b.dt_alteracoes = (select max(a.dt_alteracoes) 
										 from bethadba.hist_funcionarios as a 
										 where a.i_entidades = b.i_entidades 
										 and a.i_funcionarios = b.i_funcionarios)) then
			set w_fundo_ass='N';
			set w_fundo_prev='S';
			set w_i_tipos_salfam=2
		end if;
		
		if exists(select 1 from bethadba.hist_funcionarios as b where b.i_entidades = w_i_entidades and	b.i_funcionarios = w_i_funcionarios and	b.prev_federal = 'S' 
				  and b.dt_alteracoes = (select max(a.dt_alteracoes) 
										 from bethadba.hist_funcionarios as a 
										 where a.i_entidades = b.i_entidades 
										 and a.i_funcionarios = b.i_funcionarios)) then
			set w_fundo_ass='N';
			set w_fundo_prev='N';
			set w_i_tipos_salfam=1
		end if;
		
		
			if w_i_dependentes is not null then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dep.: '||w_i_dependentes to client;
				insert into bethadba.dependentes_func(i_entidades,i_funcionarios,i_dependentes,dep_irrf,i_tipos_salfam,fundo_ass,fundo_prev,curso_tec_sup,dt_inicio_curso,dt_final_curso,fundo_financ)on existing update
				values (w_i_entidades,w_i_funcionarios,w_i_dependentes,w_dep_irrf,w_i_tipos_salfam,w_fundo_ass,w_fundo_prev,w_curso_tec_sup,null,null,'N');
			
		end if;
		
	end for;
end;


rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 58,59,60) Periodos, Periodos Ferias e Susp Periodos
-------------------------------------------------- 
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_periodos') then
	drop procedure cnv_periodos;
end if
;

begin
	// *****  Tabela bethadba.periodos
	declare w_i_funcionarios integer;
	declare w_i_periodos smallint;
	declare w_dt_previsao date;
	declare w_num_dias_abono integer;
	
	// *****  Tabela bethadba.periodos_ferias
	declare w_dt_admissao date;
	-- BUG BTHSC-8157 Migrou intervalo de período aquisitivo de férias errado
	ooLoop: for oo as cnv_periodos dynamic scroll cursor for
		select 1 as w_i_entidades, left(cdMatricula, length(cdMatricula) - 1)  as w_cdMatricula,SqContrato as w_SqContrato,NrPeriodo as w_NrPeriodo,date(DtInicioPeriodo) as w_dt_aquis_ini,date(DtFimPeriodo) as w_DtFimPeriodo,
			   NrDiasFeriasDireito as w_num_dias_dir,date(DtInicioSuspensao) as w_dt_inicial,date(DtFimSuspensao) as w_dt_final,NrDiasPerdeAfastamento as w_num_dias,
			   nrDiasAbonoDireito as w_nrDiasAbonoDireito,date(DtFimPeriodo) as w_dt_aquis_fin,date(DtInicioPeriodo) as w_dt_periodo
		from tecbth_delivery.gp001_PeriodoAquisicao 
		order by 1,2,3,5 asc	
	do
		
		// *****  Inicializa Variaveis
		set w_i_funcionarios = null;
		set w_i_periodos = null;
		set w_dt_previsao = null;
		set w_num_dias_abono = null;		
		set w_dt_admissao = null;
		
		if w_nrDiasAbonoDireito is not null and w_nrDiasAbonoDireito >= 0 then
			set w_num_dias_abono=w_nrDiasAbonoDireito
		else
			set w_num_dias_abono=0
		end if;
		
		// ***** converte bethadba.periodos
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		select dt_admissao 
		into w_dt_admissao 
		from bethadba.funcionarios 
		where i_entidades = w_i_entidades 
		and i_funcionarios = w_i_funcionarios;
		
		if w_DtFimPeriodo > w_dt_admissao then
			select coalesce(max(i_periodos),0)+1 
			into w_i_periodos 
			from bethadba.periodos 
			where i_entidades = w_i_entidades 
			and i_funcionarios = w_i_funcionarios;
			
			set w_dt_previsao=w_dt_aquis_fin+1;
		
			if exists(select 1 from bethadba.funcionarios where	i_entidades = w_i_entidades and	i_funcionarios = w_i_funcionarios) then
				if not exists(select 1 from bethadba.periodos where	i_entidades = w_i_entidades and	i_funcionarios = w_i_funcionarios and dt_aquis_ini = w_dt_aquis_ini) then
					message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Per.: '||w_i_periodos||' Dt. Ini.: '||w_dt_aquis_ini||' Dt Fin.: '||w_dt_aquis_fin to client;
				
					insert into bethadba.periodos(i_entidades,i_funcionarios,i_periodos,dt_aquis_ini,dt_aquis_fin,num_dias_dir,dt_previsao,num_dias_abono)on existing skip
					values (w_i_entidades,w_i_funcionarios,w_i_periodos,w_dt_aquis_ini,w_dt_aquis_fin,w_num_dias_dir,w_dt_previsao,w_num_dias_abono);
				
					insert into bethadba.periodos_ferias(i_entidades,i_funcionarios,i_periodos,i_periodos_ferias,tipo,dt_periodo,num_dias,observacao,manual,i_ferias,i_rescisoes)on existing skip
					values (w_i_entidades,w_i_funcionarios,w_i_periodos,1,1,w_dt_periodo,30,null,'S',null,null);
				
					if (w_dt_final - w_dt_inicial) >= 180 then					
						message 'Cancelamento Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Per.: '||w_i_periodos to client;
						
						insert into bethadba.periodos_ferias(i_entidades,i_funcionarios,i_periodos,i_periodos_ferias,tipo,dt_periodo,num_dias,observacao,manual,i_ferias,i_rescisoes)on existing skip
						values (w_i_entidades,w_i_funcionarios,w_i_periodos,2,5,w_dt_aquis_fin,w_num_dias,'Período cancelado pelo afastamento maior que 180 dias. Período de afastamento: '||w_dt_inicial||' até '||w_dt_final||'.',
								'S',null,null);
						
						message 'Suspensão Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Per.: '||w_i_periodos||' Dt. Ini.: '||w_dt_inicial||' Dt Fin.: '||w_dt_final to client;
						
						insert into bethadba.susp_periodos(i_entidades,i_funcionarios,i_periodos,dt_inicial,dt_final,observacao)on existing skip
						values (w_i_entidades,w_i_funcionarios,w_i_periodos,w_dt_inicial,w_dt_final,'Período cancelado pelo afastamento maior que 180 dias. Período de afastamento: '||w_dt_inicial||' até '||w_dt_final||'.');
					end if;
					
					if w_dt_inicial is not null and w_dt_final is not null then
						message 'Suspensão Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Per.: '||w_i_periodos||' Dt. Ini.: '||w_dt_inicial||' Dt Fin.: '||w_dt_final to client;
						
						insert into bethadba.susp_periodos(i_entidades,i_funcionarios,i_periodos,dt_inicial,dt_final,observacao)on existing skip
						values (w_i_entidades,w_i_funcionarios,w_i_periodos,w_dt_inicial,w_dt_final,null);
					end if;
				end if;
			end if;
		end if;
		
	end for;
end;


-- importar a tabela  e apos isso fazer os ajustes
/****** Script do comando SelectTopNRows de SSMS 
SELECT *
  FROM [GP0001_FHOMUV].[dbo].[PERIODOCONCESSAO]
  
  
update testedie
set DtPagamento= null
where DtPagamento = 'NULL'


    ******/
rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 61) Ferias
-------------------------------------------------- 
if  exists (select 1 from sys.sysprocedure where creator = (select user_id from sys.sysuserperms where user_name = current user) and proc_name = 'cnv_ferias') then
	drop procedure cnv_ferias;
end if
;

begin
	// *****  Tabela bethadba.ferias
	declare w_i_funcionarios integer;
	declare w_i_ferias smallint;
	declare w_i_periodos smallint;
	declare w_num_dias_abono tinyint;
	declare w_comp_abono date;
	declare w_num_dias_desc tinyint;
	declare w_num_dias_dir tinyint;
	
	// *****  Tabela bethadba.ferias
	declare w_i_periodos_ferias smallint;
	
	ooLoop: for oo as cnv_ferias dynamic scroll cursor for
		select 1 as w_i_entidades,left(cdMatricula, length(cdMatricula) - 1) as w_CdMatricula,Sqcontrato as w_Sqcontrato,DtInicioPeriodo as w_DtInicioPeriodo,date(DtInicioConcessao) as w_dt_gozo_ini,
			   date(dtFimConcessao) as w_dt_gozo_fin,NrDiasFeriasConcedidas as w_NrDiasFeriasConcedidas,
      NrDiasAbonoConcedidas as w_NrDiasAbonoConcedidas,isnull(date(DtPagamento),w_dt_gozo_ini) as w_DtPagamento
  from gp001_PERIODOCONCESSAO
		where inTipoConcessao = 'N'  
		order by 1,2,3,4 asc
	do
		
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_i_ferias=null;
		set w_i_periodos=null;
		set w_num_dias_abono=null;
		set w_comp_abono=null;
		set w_num_dias_desc=null;
		set w_num_dias_dir=null;
		
		// *****
		set w_i_periodos_ferias=null;
		
		// *****  Converte tabela bethadba.ferias
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		select coalesce(max(i_ferias),0)+1 
		into w_i_ferias 
		from bethadba.ferias 
		where i_entidades = w_i_entidades 
		and i_funcionarios = w_i_funcionarios;
		
		select first i_periodos 
		into w_i_periodos 
		from bethadba.periodos 
		where i_entidades = w_i_entidades 
		and i_funcionarios = w_i_funcionarios 
		and dt_aquis_ini = w_DtInicioPeriodo;
		
		if w_i_periodos is null then
			select first i_periodos 
			into w_i_periodos 
			from bethadba.periodos 
			where i_entidades = w_i_entidades 
			and i_funcionarios = w_i_funcionarios 
			and year(dt_aquis_ini) = year(w_DtInicioPeriodo)
		end if;
		
		if w_NrDiasAbonoConcedidas is null then
			set w_NrDiasAbonoConcedidas = 0
		end if;
		
		if w_NrDiasAbonoConcedidas > 0 then 
			set w_num_dias_abono= w_NrDiasAbonoConcedidas;
			set w_comp_abono=ymd(year(w_DtPagamento),month(w_DtPagamento),'01');
		else
			set w_num_dias_abono= 0;
			set w_comp_abono=null
		end if;
		
		if (30-(w_dt_gozo_fin+1-w_dt_gozo_ini)) < 0 then
			set w_num_dias_desc=0
		else
			set w_num_dias_desc=(30-(w_dt_gozo_fin+1-w_dt_gozo_ini))
		end if;
		
		if w_num_dias_desc < 0 then
			set w_num_dias_desc = 0
		end if; 
		
		if w_NrDiasFeriasConcedidas > 30 then
			set w_num_dias_dir =  30 
		else
			set w_num_dias_dir = w_NrDiasFeriasConcedidas
		end if;
		
		if w_i_periodos is not null then
			message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Fer.: '||w_i_ferias||' Per.: '||w_i_periodos to client;
			
			insert into bethadba.ferias(i_entidades,i_funcionarios,i_ferias,i_periodos,i_ferias_progr,i_atos,dt_gozo_ini,dt_gozo_fin,num_dias_abono,comp_abono,saldo_dias,desc_faltas,
									    num_faltas,num_dias_desc,num_dias_dir,desc_ferias,adiant_13sal,pagto_ferias)on existing skip
			values (w_i_entidades,w_i_funcionarios,w_i_ferias,w_i_periodos,null,null,w_dt_gozo_ini,w_dt_gozo_fin,w_num_dias_abono,w_comp_abono,30,'S',
					0,w_num_dias_desc,w_num_dias_dir,0,'N',1);
		
			// *****  Converte tabela bethadba.periodos_ferias
			select coalesce(max(i_periodos_ferias),0)+1 
			into w_i_periodos_ferias 
			from bethadba.periodos_ferias 
			where i_entidades = w_i_entidades 
			and i_funcionarios = w_i_funcionarios 
			and	i_periodos = w_i_periodos;
		
			message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Per.: '||w_i_periodos||' Per. Fer.: '||w_i_periodos_ferias to client;
			insert into bethadba.periodos_ferias(i_entidades,i_funcionarios,i_periodos,i_periodos_ferias,tipo,dt_periodo,num_dias,observacao,i_ferias,i_rescisoes,manual)on existing skip
			values (w_i_entidades,w_i_funcionarios,w_i_periodos,w_i_periodos_ferias,2,w_dt_gozo_ini,w_num_dias_dir,null,w_i_ferias,null,'S');
		
			// *****  Converte tabela bethadba.periodos_ferias	
			if w_num_dias_abono > 0 then
				select coalesce(max(i_periodos_ferias),0)+1 
				into w_i_periodos_ferias 
				from bethadba.periodos_ferias 
				where i_entidades = w_i_entidades 
				and i_funcionarios = w_i_funcionarios 
				and i_periodos = w_i_periodos;
				
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Per.: '||w_i_periodos||' Per. Fer.: '||w_i_periodos_ferias||' Abo.: '||w_num_dias_abono to client;
				insert into bethadba.periodos_ferias( i_entidades,i_funcionarios,i_periodos,i_periodos_ferias,tipo,dt_periodo,num_dias,observacao,i_ferias,i_rescisoes,manual)on existing skip
				values (w_i_entidades,w_i_funcionarios,w_i_periodos,w_i_periodos_ferias,3,w_comp_abono,w_num_dias_abono,null,w_i_ferias,null,'S');
			end if;
		end if;
		
	end for;
end;




rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 70) Afastamentos
-------------------------------------------------- 

begin
	// *****  Tabela bethadba.afastamentos
	declare w_i_funcionarios integer;
	declare w_i_tipos_afast smallint;

	ooLoop: for oo as cnv_afastamentos dynamic scroll cursor for
		select 1 as w_i_entidades,left(cdMatricula, length(cdMatricula) - 1)  as w_CdMatricula,SqContrato as w_SqContrato,date(DtInicioAfastamento) as w_dt_afastamento,date(DtFimAfastamento) as w_dt_ultimo_dia,
			   (select i_tipos_afast from bethadba.tipos_afast
where left(descricao,2) =CdMotivoAfastamento) as w_CdMotivoAfastamento 

		from tecbth_delivery.gp001_HISTORICOAFASTAMENTO where  DtInicioAfastamento is not null   and w_cdmatricula <>'' 
		order by 1,2,3,4 asc
	do
		
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_i_tipos_afast=w_CdMotivoAfastamento;
		
		// *****  Converte tabela bethadba.afastamentos
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		

		if exists(select 1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
			message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip.: '||w_i_tipos_afast||' Dt. Ini: '||w_dt_afastamento||' Dt. Fin.: '||w_dt_ultimo_dia to client;
			
			insert into bethadba.afastamentos(i_entidades,i_funcionarios,dt_afastamento,i_tipos_afast,i_atos,dt_ultimo_dia,req_benef,comp_comunic)on existing skip
			values (w_i_entidades,w_i_funcionarios,w_dt_afastamento,w_i_tipos_afast,null,w_dt_ultimo_dia,null,null);
		end if;
		
	end for;
end;



rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 71) Rescisões
-------------------------------------------------- 

begin
	// *****  Tabela bethadba.rescisoes
	declare w_i_funcionarios integer;
	declare w_i_motivos_resc smallint;
	declare w_i_motivos_apos smallint;
	declare w_dt_aviso date;

	ooLoop: for oo as cnv_rescisoes dynamic scroll cursor for
		select 1 as w_i_entidades,CdMatricula as w_cdMatricula,SqContrato as w_SqContrato,CdDesligamento as w_CdDesligamento,date(DtRescisao) as w_dt_rescisao,DtAvisoPrevio as w_DtAvisoPrevio
		from tecbth_delivery.gp001_funcionario 
		where dtRescisao is not null  
		order by 1,2,3 asc	
	do
		
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_i_motivos_resc=null;
		set w_i_motivos_apos=null;
		set w_dt_aviso=null;
		
		// *****  Converte tabela bethadba.rescisao
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		if exists (select 1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then	
           select i_motivos_resc,i_motivos_apos into w_i_motivos_resc,w_i_motivos_apos  from  tecbth_delivery.gp001_tipodesligamento where cddesligamento = w_CdDesligamento;
           if w_DtAvisoPrevio is null then
				set w_dt_aviso=w_dt_rescisao
			else
				set w_dt_aviso=w_DtAvisoPrevio
			end if;
			
			message 'Res. Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_rescisao to client;
	
			insert into bethadba.rescisoes(i_entidades,i_funcionarios,i_rescisoes,i_motivos_resc,i_motivos_apos,i_atos,dt_aviso,dt_rescisao,aviso_ind,vlr_saldo_fgts,fgts_mesant,compl_mensal,
										ferias_venc,ferias_prop,complementar,aviso_desc)on existing skip
			values (w_i_entidades,w_i_funcionarios,1,isnull(w_i_motivos_resc,1),w_i_motivos_apos,null,w_dt_aviso,w_dt_rescisao,'N',0.0,'N','N',0,0,'N','N');
					
			update bethadba.locais_mov 
			set dt_final = w_dt_rescisao 
			where i_entidades = w_i_entidades 
			and i_funcionarios = w_i_funcionarios 
			and dt_final is null;
			
			update bethadba.hist_cargos 
			set dt_saida = w_dt_rescisao 
			where i_entidades = w_i_entidades 
			and i_funcionarios = w_i_funcionarios 
			and dt_saida is null;
			
			message 'Afa. Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_rescisao to client;
			
			insert into bethadba.afastamentos(i_entidades,i_funcionarios,dt_afastamento,i_tipos_afast,i_atos)on existing skip
			values (w_i_entidades,w_i_funcionarios,w_dt_rescisao,7,null);
		end if;
		
	end for;
end;

--------------------------------------------------
-- 76,77) Motivos Faltas,Faltas
--------------------------------------------------  

insert into bethadba.motivos_faltas(i_motivos_faltas,descricao,justificada,perde_temposerv,previsao,impacta_ferias)on existing skip
select cdAusencia+4,dsAusencia,if cdAusencia = 2 then 
								 'N' 
							   else 
							     'S' 
							   endif, 
	   inPerdeTempoServico,null,null 
from tecbth_delivery.gp001_ausencia 
order by 1 asc
;

commit
;



begin
	// *****  Tabela bethadba.faltas
	declare w_i_funcionarios integer;
	declare w_tipo_faltas char(1);
	declare w_qtd_faltas decimal(7,4);
	declare w_i_motivos_faltas smallint;
	declare w_comp_descto date;
	declare w_i_faltas integer;
	
	ooLoop: for oo as cnv_faltas dynamic scroll cursor for
		select 1 as w_i_entidades,left(cdMatricula, length(cdMatricula) - 1)  as w_CdMatricula,SqContrato as w_SqContrato,CdAusencia+4 as w_CdAusencia,date(DtInicio) as w_dt_inicial,DtFim as w_DtFim,nrDias as w_nrDias,
			   nrHorasDiurnas as w_nrHorasDiurnas,InSituacao as w_InSituacao 
		from tecbth_delivery.gp001_MovimentoFrequencia as MovimentoFrequencia 
		order by 1,2,3 asc
	do
		
		// *****  Inicializa as variaveis
		set w_i_funcionarios=null;
		set w_tipo_faltas=null;
		set w_qtd_faltas=null;
		set w_i_motivos_faltas=null;
		set w_comp_descto=null;
		set w_i_faltas = null; 
		
		// *****  Converte tabela bethadba.faltas
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		if w_InSituacao = 'D' then
			set w_tipo_faltas=1;
			set w_qtd_faltas=w_nrDias;
			
			if w_qtd_faltas = 0 then
				set w_tipo_faltas=2;
				set w_qtd_faltas=w_nrHorasDiurnas
			end if
		else
			set w_tipo_faltas=2;
			set w_qtd_faltas=w_nrHorasDiurnas;
		
			if w_qtd_faltas = 0 then
				set w_tipo_faltas=1;
				set w_qtd_faltas=1
			end if
		end if;
		
		if w_CdAusencia = 0 then
			set w_i_motivos_faltas=7
		else
			set w_i_motivos_faltas=w_CdAusencia
		end if;
		
		set w_comp_descto=ymd(year(w_dt_inicial),month(w_dt_inicial),'01');

		
		select coalesce(max(i_faltas)+1,1)
		into w_i_faltas 
		from bethadba.faltas 
		where i_entidades = w_i_entidades 
		and i_funcionarios = w_i_funcionarios; 
		
		if exists(select 1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then
			message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Dt.: '||w_dt_inicial||' Qtd.: '||w_qtd_faltas to client;
			
			insert into bethadba.faltas(i_entidades,i_funcionarios,dt_inicial,tipo_faltas,qtd_faltas,i_motivos_faltas,tipo_descto,comp_descto,i_atestados,abonada,comp_abono,qtd_abono,
										motivo_abono,periodo_ini_falta,i_faltas) 
			values (w_i_entidades,w_i_funcionarios,w_dt_inicial,w_tipo_faltas,w_qtd_faltas,w_i_motivos_faltas,2,w_comp_descto,null,'N',null,null,
					null,1, w_i_faltas);
		end if;
	end for;
end;

--------------------------------------------------
-- 82) Caracteristicas
--------------------------------------------------    
insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(1,'Ficha de Registro',2,'N',null) 
;

insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(2,'Data Final do Contrato',4,'N',null) 
;

insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(3,'Concursado (S-Sim/N-Nao)',7,'N',null) 
;

insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(4,'Data Concurso',4,'N',null) 
;

insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(5,'Nr Inscricao Concurso',7,'N',null) 
;

insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(6,'Conselho Regional',7,'N',null) 
;

insert into bethadba.caracteristicas(i_caracteristicas,nome,tipo_dado,obrigatorio,tamanho)on existing skip 
values(7,'Contribuinte Individual(INSS)',7,'N',null) 
;

commit
;

CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 84) Funcionarios Prop Adic
--------------------------------------------------  

begin
	// *****  Tabela bethadba.funcionarios_compl
	declare w_i_funcionarios integer;
	declare w_texto long varchar;

	ooLoop: for oo as cnv_funcionarios_prop_adic dynamic scroll cursor for
		select 1 as w_i_entidades,cdMatricula as w_cdMatricula,SqContrato as w_SqContrato,CdPessoa as w_CdPessoa,date(DtAdmissao) as w_DtAdmissao,NrFichaRegistro as w_num_inteiro,
			   date(dtFimContrato) as w_dt_data,inConcurso as w_inConcurso,date(dtConcurso) as w_dtConcurso,dsConselhoRegional as w_dsConselhoRegional,nrInscricaoConcurso as w_nrInscricaoConcurso,
			   cdCI as w_cdCI 
		from tecbth_delivery.gp001_funcionario 
		order by 1,2,3 asc
	do
		// **** Inicia as variaveis
		set w_texto = null;
		
		// *****  Converte tabela bethadba.funcionarios_compl 
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		 // *****  Item 1 - Ficha de Registro
			if(w_num_inteiro != 0) and (w_num_inteiro is not null) then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 1' to client;
				
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip 
				values (w_i_entidades,w_i_funcionarios,1,null,w_num_inteiro,null,null,null);
				
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (1,w_i_entidades,w_i_funcionarios,w_DtAdmissao,w_num_inteiro,null,null,null,null,null);
			end if;
			
			// *****  Item 2 - Data Final de contrato		
			if w_dt_data is not null then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 2' to client;
			
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip
				values (w_i_entidades,w_i_funcionarios,2,null,null,null,w_dt_data,null);
				
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (2,w_i_entidades,w_i_funcionarios,w_DtAdmissao,null,null,w_dt_data,null,null,null);
			end if;
			
			// *****  Item 3 - Concursado (S/N)	
			if w_inConcurso = 'S' then
				set w_texto='S'
			elseif w_inConcurso = 'N' then
				set w_texto='N'
			else
				set w_texto=null
			end if;
			
			if w_texto is not null then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 3' to client;
			
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip
				values (w_i_entidades,w_i_funcionarios,3,w_texto,null,null,null,null);
				
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (3,w_i_entidades,w_i_funcionarios,w_DtAdmissao,null,null,null,null,null,w_texto);
			end if;
			
			// *****  Item 4 - Data Concurso	
			if w_dtConcurso is not null then		
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 4' to client;
			
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip
				values (w_i_entidades,w_i_funcionarios,4,null,null,null,w_dtConcurso,null);
				
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (4,w_i_entidades,w_i_funcionarios,w_DtAdmissao,null,null,w_dtConcurso,null,null,null);
			end if;
			
			// *****  Item 5 - Nr Inscricao Concurso
            set w_texto = null;
			set w_texto=w_nrInscricaoConcurso;
			
			if trim(w_texto) in( '0','') then
				set w_texto=null
			end if;
			
			if w_texto is not null then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 5' to client;
			
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip
				values (w_i_entidades,w_i_funcionarios,5,w_texto,null,null,null,null); 
				
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (5,w_i_entidades,w_i_funcionarios,w_DtAdmissao,null,null,null,null,null,w_texto);
			end if;
			
			// *****  Item 6 - Conselho Regional
            set w_texto = null;
			set w_texto=w_dsConselhoRegional;
			
			if trim(w_texto) in( '0','') then
				set w_texto=null
			end if;
			
			if w_texto is not null then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 6' to client;
				
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip
				values (w_i_entidades,w_i_funcionarios,6,w_texto,null,null,null,null);	
	
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (6,w_i_entidades,w_i_funcionarios,w_DtAdmissao,null,null,null,null,null,w_texto);			
			end if;
			
			// *****  Item 7 - Contribuinte Individual
            set w_texto = null;
			set w_texto=cast(w_cdCI as decimal(20));
			
			if trim(w_texto) in( '0','') then
				set w_texto=null
			end if;
			
			if w_texto is not null then
				message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Car.: 7' to client;
			
				insert into bethadba.funcionarios_prop_adic(i_entidades,i_funcionarios,i_caracteristicas,valor_texto,valor_numerico,valor_decimal,valor_data,valor_hora)on existing skip
				values (w_i_entidades,w_i_funcionarios,7,w_texto,null,null,null,null);
				
				insert into bethadba.hist_funcionarios_prop_adic(i_caracteristicas,i_entidades,i_funcionarios,dt_alteracoes,valor_numerico,valor_decimal,valor_data,valor_caracter,valor_hora,
																valor_texto)on existing skip
				values (7,w_i_entidades,w_i_funcionarios,w_DtAdmissao,null,null,null,null,null,w_texto);
			end if; 
	end for;
end;


rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
------------------------------------------------
-- 85) Empresas Ant
--------------------------------------------------  

begin
	// *****  Tabela bethadba.empresas_ant
	declare w_i_pessoas integer;
	declare w_i_empresas_ant integer;
	declare w_i_empresas integer;
	declare w_observacao char(200);

	// *****  Variaveis auxiliares
	declare w_i_pessoas_aux integer;
	
	// **** Insere a pessoa da empresa anterior
	if not exists(select 1 from bethadba.pessoas where nome = 'EMPRESA EXPERIENCIA ANTERIOR') then
		set w_i_pessoas_aux=null;
		
		select coalesce(max(i_pessoas),0)+1 
		into w_i_pessoas_aux 
		from bethadba.pessoas;
		
		insert into bethadba.pessoas(i_pessoas,dv,nome,nome_fantasia,tipo_pessoa)on existing skip
		values (w_i_pessoas_aux,bethadba.dbf_calcmod11(w_i_pessoas_aux),'EMPRESA EXPERIENCIA ANTERIOR',null,'J');
		
		insert into bethadba.pessoas_juridicas(i_pessoas)on existing skip
		values(w_i_pessoas_aux);
	end if;
	ooLoop: for oo as cnv_empresas_ant dynamic scroll cursor for
		select 1 as w_i_entidades,HistoricoTempoServico.cdPessoa as w_cdPessoa,dtDe as w_dt_inicial,dtAte as w_dt_final,cdmatricula as w_cdmatricula,SqContrato as w_SqContrato,
		  	  cdVinculoEmpregaticio as w_cdVinculoEmpregaticio,trim(upper(NmCargo)) as w_desc_funcao,NmEmpresa as w_NmEmpresa 
		from tecbth_delivery.gp001_HistoricoTempoServico as HistoricoTempoServico,tecbth_delivery.gp001_Pessoa as Pessoa  
		where HistoricoTempoServico.CdPessoa = Pessoa.CdPessoa  
		order by 1,2,4 asc	
	do
		
		// **** Inicializa
		set w_i_pessoas = null;
		set w_i_empresas_ant = null;
		set w_i_empresas = null;
		set w_observacao = null;
		
		// *****  Converte bethadba.empresas_ant
		select depois_1 
		into w_i_pessoas 
		from tecbth_delivery.antes_depois 
		where tipo = 'P' 
		and antes_1 = w_i_entidades 
		and antes_2 = w_cdPessoa;
		
		select coalesce(max(i_empresas_ant),0)+1 
		into w_i_empresas_ant 
		from bethadba.empresas_ant 
		where i_pessoas = w_i_pessoas;
		
		select i_pessoas 
		into w_i_empresas 
		from bethadba.pessoas 
		where nome = 'EMPRESA EXPERIENCIA ANTERIOR';
		
		if w_cdmatricula != 0 then
			set w_observacao=string('Funcionario : ')+string(w_cdMatricula||'0'||w_SqContrato)
		else
			set w_observacao=null
		end if;
		
		if(w_NmEmpresa is not null) and (trim(w_NmEmpresa) != '') then
			if trim(w_observacao) != '' then
				set w_observacao=w_observacao+' Empresa: '+trim(w_NmEmpresa)
			else
				set w_observacao='Empresa: '+trim(w_NmEmpresa)
			end if
		end if;		

		message 'Pes.: '||w_i_pessoas||' Emp. Ant.: '||w_i_empresas_ant||' Emp Atu.: '||w_i_empresas||' Ini.: '||w_dt_inicial||' Fin.: '||w_dt_final to client;
		
		insert into bethadba.empresas_ant(i_pessoas,i_empresas_ant,i_empresas,i_cbo,dt_inicial,dt_final,observacao,contato,trab_rural,multiplic,dt_ini_prevfed,dt_fin_prevfed,dt_ini_prevest,
										  dt_fin_prevest,dt_ini_prevmun,dt_fin_prevmun,dt_ini_outras,dt_fin_outras)on existing skip
		values (w_i_pessoas,w_i_empresas_ant,w_i_empresas,null,w_dt_inicial,w_dt_final,w_observacao,null,'N',1.0,null,null,null,null,null,null,null,null);
				
	end for;
end
;   

--where  cdMatricula in( 159) and w_dtCompetencia between '1900-01-01 00:00:00.000000' and '2002-01-01 00:00:00.000000'
rollback;
CALL bethadba.dbp_conn_gera(1, 2019, 300);
CALL bethadba.pg_setoption('wait_for_commit','on');
CALL bethadba.pg_habilitartriggers('off');
COMMIT;
--------------------------------------------------
-- 86,87,88,89) Processamentos, Processamentos Lotes, Dados Calc, Movimentos
--------------------------------------------------  

begin
	// *****  Tabela bethadba.movimentos
	declare w_i_tipos_proc smallint;
	declare w_i_competencias date;
	declare w_i_processamentos smallint;
	declare w_i_funcionarios integer;
	declare w_i_eventos smallint;
	declare w_tipo_pd char(1);
	declare w_compoe_liq char(1);
	declare w_classif_evento tinyint;
	declare w_mov_resc char(1);
	
	// *****  Tabela bethadba.dados_calc
	declare w_dt_pagto date;
	
	// *****  Tabela bethabda.processamentos
	declare w_dt_fechamento date;
	
	// *****  Tabela bethadba.processamentos_lotes
	declare w_i_processamentos_lotes integer;
	
	// *****  Variaveis auxiliares
	declare w_evento smallint;
	declare w_i_eventos_aux smallint;
	declare w_nome_aux char(50);
	declare w_tipo_pd_aux char(1);
	declare w_taxa_aux decimal(10,4);
	declare w_unidade_aux char(15);
	declare w_sai_rais_aux char(1);
	declare w_compoe_liq_aux char(1);
	declare w_compoe_hmes_aux char(1);
	declare w_digitou_form_aux char(1);
	declare w_classif_evento_aux tinyint;
	ooLoop: for oo as cnv_movimentos dynamic scroll cursor for
		select   1 as w_i_entidades,cdMatricula as w_cdMatricula,sqContrato as w_sqContrato,dtCompetencia as w_dtCompetencia,tpcalculo as w_tpcalculo,sqHabilitacao as w_sqHabilitacao,
			cdVerba as w_cdVerba,inRetificacao as w_inRetificacao,dtPagamento as w_dtPagamento,fu_convdecimal(tira_caracter_1(vlComplemento),0) as w_vlr_inf,
			cast(vlMensal as decimal(12,2)) as w_vlr_calc,cast(vlAuxiliar as decimal(12,2)) as w_vlAuxiliar,
			cast(vlIntegral as decimal(12,2)) as w_vlIntegral 
		from tecbth_delivery.gp001_fichafinanceira  order by 1,4,2,3,5 asc	
	do
		
		// *****  Tabela bethadba.movimentos
		set w_i_tipos_proc = null;
		set w_i_competencias = null;
		set w_i_processamentos = null;
		set w_i_funcionarios = null;
		set w_i_eventos = null;
		set w_tipo_pd = null;
		set w_compoe_liq = null;
		set w_classif_evento = null;
		set w_mov_resc = null;
		
		// *****  Tabela bethadba.dados_calc
		set w_dt_pagto = null;
		
		// *****  Tabela bethabda.processamentos
		set w_dt_fechamento = null;
		
		// *****  Tabela bethadba.processamentos_lotes
		set w_i_processamentos_lotes = null;
		
		// *****  Variaveis auxiliares
		set w_evento = null;
		set w_i_eventos_aux = null;
		set w_nome_aux = null;
		set w_tipo_pd_aux = null;
		set w_taxa_aux = null;
		set w_unidade_aux = null;
		set w_sai_rais_aux = null;
		set w_compoe_liq_aux = null;
		set w_compoe_hmes_aux = null;
		set w_digitou_form_aux = null;
		set w_classif_evento_aux = null;
		
		// *****  Converte bethadba.movimentos
		set w_i_funcionarios=cast(w_cdMatricula as integer);		
		if exists (select  1 from bethadba.funcionarios where i_entidades = w_i_entidades and i_funcionarios = w_i_funcionarios) then		
			if w_tpCalculo = 1 then -- 11-Mensal
				set w_i_tipos_proc=11;
				set w_mov_resc='S'
			elseif w_tpCalculo = 2 then --42-Complementar
				set w_i_tipos_proc=42;
				set w_mov_resc='S'
			elseif w_tpCalculo = 3 then --80-Férias
				set w_i_tipos_proc=80;
				set w_mov_resc='N'
			elseif w_tpCalculo = 5 then --51-13º Adiantamento
				set w_i_tipos_proc=51;
				set w_mov_resc='N'
			elseif w_tpCalculo = 6 then --52-13º Salário
				set w_i_tipos_proc=52;
				set w_mov_resc='N'
			elseif w_tpCalculo = 7 then --52-13º Salário
				set w_i_tipos_proc=52;
				set w_mov_resc='N'
			elseif w_tpCalculo = 8 then --41-Adiantamento
				set w_i_tipos_proc=41;
				set w_mov_resc='N'
			elseif w_tpCalculo = 9 then --11-Mensal
				set w_i_tipos_proc=11;
				set w_mov_resc='N'
			elseif w_tpCalculo = 10 then --42-Complementar
				set w_i_tipos_proc=42;
				set w_mov_resc='N'
			elseif w_tpCalculo = 11 then --11-Mensal
				set w_i_tipos_proc=11;
				set w_mov_resc='N'
			else --11-Mensal
				set w_i_tipos_proc=11;
				set w_mov_resc='N'
			end if;

			if day(w_dtCompetencia) != 1 then
				set w_i_competencias=string(year(w_dtCompetencia))+'-'+string(month(w_dtCompetencia))+'-'+'01'
			else
				set w_i_competencias=date(w_dtCompetencia)
			end if;
			
			set w_i_processamentos=1;


	
			if not w_cdVerba = any(select   evento from tecbth_delivery.evento_aux where tipo_pd = 'F' and w_i_entidades = w_i_entidades) then
				if not exists(select distinct  1 from tecbth_delivery.evento_aux where evento = w_cdVerba and retificacao = w_inRetificacao and w_i_entidades = w_i_entidades) then
					if w_inRetificacao in('C','D') then
						select   evento,nome,tipo_pd,taxa,unidade,sai_rais,compoe_liq,compoe_hmes,digitou_form,classif_evento 
						into w_i_eventos_aux,w_nome_aux,w_tipo_pd_aux,w_taxa_aux,w_unidade_aux,w_sai_rais_aux,w_compoe_liq_aux,w_compoe_hmes_aux,w_digitou_form_aux,w_classif_evento_aux 
						from tecbth_delivery.evento_aux 
						where evento = w_cdVerba 
						and retificacao = 'B' 
						and resc_mov = 'N' 
						and i_entidades = w_i_entidades;
						-- AJUSTE
						if w_inRetificacao = 'C' then
							set w_nome_aux=upper(w_nome_aux)+' PROV';
							set w_tipo_pd_aux='P'
                            
						else
							set w_nome_aux=upper(w_nome_aux)+' DESC';
							set w_tipo_pd_aux='D'                           
						end if;
						
						select distinct coalesce(max(w_i_eventos),0)+1 
						into w_evento 
						  from tecbth_delivery.evento_aux 
						where tipo_pd in('P','D');
						
						insert into tecbth_delivery.evento_aux(evento,i_eventos,nome,tipo_pd,taxa,unidade,sai_rais,compoe_liq,compoe_hmes,digitou_form,classif_evento,retificacao,resc_mov,i_entidades) 
						values (w_i_eventos_aux,w_evento,w_nome_aux,w_tipo_pd_aux,w_taxa_aux,w_unidade_aux,w_sai_rais_aux,w_compoe_liq_aux,w_compoe_hmes_aux,w_digitou_form_aux,w_classif_evento_aux,
								w_inRetificacao,'N',w_i_entidades);
								
						message 'Eve.: '||w_evento||' Nom.: '||w_nome_aux||' Tip.: '||w_tipo_pd_aux to client;
						
						insert into bethadba.eventos(i_eventos,nome,tipo_pd,taxa,unidade,sai_rais,compoe_liq,compoe_hmes,digitou_form,classif_evento,cods_conversao)on existing skip
						values (w_evento,w_nome_aux,w_tipo_pd_aux,w_taxa_aux,w_unidade_aux,w_sai_rais_aux,w_compoe_liq_aux,w_compoe_hmes_aux,w_digitou_form_aux,w_classif_evento_aux,null);
					end if
				end if
			end if;			


            select distinct i_eventos
		into w_i_eventos 
 from tecbth_delivery.evento_aux 
			where evento  = w_cdVerba 
			and retificacao = w_inRetificacao 
			and	resc_mov = 'N' 
			and	i_entidades = w_i_entidades;


select first tipo_pd,compoe_liq,classif_evento 
			into w_tipo_pd,w_compoe_liq,w_classif_evento 
		   from bethadba.eventos  
			where i_eventos = w_i_eventos;
	



			if w_vlr_inf = '0' then
				set w_vlr_inf=0.0
			end if;
			
			if w_i_eventos = 1 then
				set w_vlr_inf=cast(w_vlAuxiliar as decimal(12,2))
			end if;
			
			if w_vlr_inf is null then
				set w_vlr_inf=w_vlr_calc
			end if;

			if(w_i_eventos < 9000) then
				// **** Processamentos
				set w_dt_fechamento=w_dtPagamento;
				set w_dt_pagto=w_dtPagamento;
				
				message 'Ent.: '||w_i_entidades||' Tip.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||w_i_processamentos to client;
				 
				insert into bethadba.processamentos(i_entidades,i_tipos_proc,i_competencias,i_processamentos,dt_fechamento,dt_pagto,descricao)on existing skip
				values (w_i_entidades,w_i_tipos_proc,w_i_competencias,w_i_processamentos,w_dt_fechamento,w_dt_pagto,null);
				
						
				// *****  Converte tabela bethadba.processamentos_lotes
				if w_i_tipos_proc = 11 then
					set w_i_processamentos_lotes=1;
				
					message 'Ent.: '||w_i_entidades||' Tip.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro. Lot.: '||w_i_processamentos_lotes to client;
				
					insert into bethadba.processamentos_lotes(i_entidades,i_competencias,i_processamentos_lotes,descricao)on existing skip
					values (w_i_entidades,w_i_competencias,w_i_processamentos_lotes,'Mensal Conversao');
				else 
					set w_i_processamentos_lotes=null;
				end if;				
					
				// *****  Converte tabela bethadba.dados_calc	
				set w_dt_pagto = null;
				set w_dt_pagto=w_dtPagamento;
				
				message 'Ent.: '||w_i_entidades||' Tip.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||w_i_processamentos||' Fun.: '||w_i_funcionarios to client;
					
				insert into  bethadba.dados_calc(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,vlr_proventos,vlr_descontos,gerado_emp,movto_anterior,dt_pagto,
												i_processamentos_lotes)on existing skip
				values (w_i_entidades,w_i_tipos_proc,w_i_competencias,w_i_processamentos,w_i_funcionarios,0.0,0.0,'N','N',w_dt_pagto,w_i_processamentos_lotes);
				
				// **** Movimentos
				
				message 'Ent.: '||w_i_entidades||' Tip.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||w_i_processamentos||' Fun.: '||w_i_funcionarios||' Eve.: '||w_i_eventos||
						' Vlr. Inf.: '||w_vlr_inf||' Vlr. Cal.: '||w_vlr_calc to client;
                insert into bethadba.movimentos(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,i_eventos,vlr_inf,vlr_calc,tipo_pd,compoe_liq,classif_evento,mov_resc)on existing skip
		    	values (w_i_entidades,w_i_tipos_proc,w_i_competencias,w_i_processamentos,w_i_funcionarios,w_i_eventos,w_vlr_inf,w_vlr_calc,w_tipo_pd,w_compoe_liq,w_classif_evento,w_mov_resc);
		    	 
			end if;
		end if;
	end for;
end;



--// **** Atualiza Dados Calc
update bethadba.dados_calc as t1 
set vlr_proventos = (select coalesce(sum(vlr_calc),0) 
				     from bethadba.movimentos as t2 
					 where t2.i_entidades = t1.i_entidades 
					 and t2.i_tipos_proc = t1.i_tipos_proc 
					 and t2.i_competencias = t1.i_competencias 
					 and t2.i_processamentos = t1.i_processamentos 
					 and t2.i_funcionarios = t1.i_funcionarios 
					 and t2.tipo_pd = 'P' 
					 and t2.compoe_liq = 'S'),
	vlr_descontos = (select coalesce(sum(vlr_calc),0) 
					 from bethadba.movimentos as t2 
					 where t2.i_entidades = t1.i_entidades 
					 and t2.i_tipos_proc = t1.i_tipos_proc 
					 and t2.i_competencias = t1.i_competencias 
					 and t2.i_processamentos = t1.i_processamentos 
					 and t2.i_funcionarios = t1.i_funcionarios 
					 and t2.tipo_pd = 'D' 
					 and t2.compoe_liq = 'S')
;

commit
;



--------------------------------------------------
-- 91) Bases Calc
--------------------------------------------------  

begin
	// *****  Tabela bethadba.movimentos
	declare w_i_tipos_proc smallint;
	declare w_i_competencias date;
	declare w_i_funcionarios integer;
	
	// ***** Tabela bethadba.bases_calc
	declare w_i_tipos_bases integer;
	declare w_i_sequenciais integer;
	declare w_vlbasecalculo numeric(12,2);
	
	ooLoop: for oo as cnv_bases_calc dynamic scroll cursor for
		select 1 as w_i_entidades,cdMatricula as w_cdMatricula,sqContrato as w_sqContrato,dtCompetencia as w_dtCompetencia,tpcalculo as w_tpcalculo,
			cdVerba as w_cdVerba,inRetificacao as w_inRetificacao,dtPagamento as w_dtPagamento,if cast(vlBaseCalculo as decimal(12,2)) = 0 then 
                                                                                                  cast(vlMensal as decimal(12,2))
                                                                                               else
                                                                                                  cast(vlBaseCalculo as decimal(12,2))  
                                                                                               endif as w_vlr_base, vlMensal as w_vlMensal, fu_convdecimal(tira_caracter_1(vlComplemento),0) as w_vlcomplemento
		from tecbth_delivery.gp001_fichafinanceira 
		where cdVerba in(526,527,528,529,530,531,1158)
		and w_vlr_base > 1
		order by 1,4,2,3,5 asc
	do
		
		// *****  Tabela bethadba.movimentos
		set w_i_tipos_proc = null;
		set w_i_competencias = null;
		set w_i_funcionarios = null;
				
		// ***** Tabela bethadba.bases_calc
		set w_i_tipos_bases = null;
		set w_i_sequenciais = null;
		set w_vlbasecalculo = null;
				
		// *****  Converte bethadba.movimentos
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		if exists(select 1 from bethadba.funcionarios where	i_entidades = w_i_entidades and	i_funcionarios = w_i_funcionarios) then		
			if w_tpCalculo = 1 then -- 11-Mensal
				set w_i_tipos_proc=11;
			elseif w_tpCalculo = 2 then --42-Complementar
				set w_i_tipos_proc=42;
			elseif w_tpCalculo = 3 then --80-Férias
				set w_i_tipos_proc=80;
			elseif w_tpCalculo = 5 then --51-13º Adiantamento
				set w_i_tipos_proc=51;
			elseif w_tpCalculo = 6 then --52-13º Salário
				set w_i_tipos_proc=52;
			elseif w_tpCalculo = 7 then --52-13º Salário
				set w_i_tipos_proc=52;
			elseif w_tpCalculo = 8 then --41-Adiantamento
				set w_i_tipos_proc=41;
			elseif w_tpCalculo = 9 then --11-Mensal
				set w_i_tipos_proc=11;
			elseif w_tpCalculo = 10 then --42-Complementar
				set w_i_tipos_proc=42;
			elseif w_tpCalculo = 11 then --11-Mensal
				set w_i_tipos_proc=11;
			else --11-Mensal
				set w_i_tipos_proc=11;
			end if;
			if day(w_dtCompetencia) != 1 then
				set w_i_competencias=year(w_dtCompetencia)||'-'||month(w_dtCompetencia)||'-'||'01'
			else
				set w_i_competencias=date(w_dtCompetencia)
			end if;
          print '1'; 
         if exists (select 1 from bethadba.dados_calc where 
                     i_entidades = w_i_entidades and 
                     i_competencias = w_i_competencias and 
                     i_tipos_proc = w_i_tipos_proc and
                     i_funcionarios = w_i_funcionarios and 
                     i_processamentos = 1 ) then
		  if(w_i_tipos_proc in( 11,41,42,51,52) ) and(w_cdVerba = 1158) then
               set w_vlr_base=cast(w_vlMensal as decimal(12,2));
                 print 'i_competencias: '+string(w_i_competencias);
                 print 'i_funcionarios: '+string(w_i_funcionarios); 
                 print 'cdMatricula: '+string(w_cdMatricula); 
                   insert into bethadba.movimentos( i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,i_eventos,
                    vlr_inf,vlr_calc,tipo_pd,compoe_liq,classif_evento,mov_resc) on existing skip values( w_i_entidades,w_i_tipos_proc,w_i_competencias,
                    1,w_i_funcionarios,138,w_vlcomplemento,w_vlr_base,'D','N',31,'N') 
            end if
          end if;	 
           print '3';
           if w_cdVerba in(526,527,528,529,530,531) then
						
				if exists(select 1 from bethadba.dados_calc where i_entidades = w_i_entidades and i_tipos_proc = w_i_tipos_proc and	i_competencias = w_i_competencias 
			              and i_processamentos = 1 and	i_funcionarios = w_i_funcionarios) then
					
					if (w_tpCalculo != 11) then	
					
						if w_vlr_base > 1 then
						
							if (w_i_tipos_proc in(11,41,42,51,52,80)) and (w_cdVerba in (530,531)) then
							
								set w_i_tipos_bases=8;
								
								/*select first vlbasecalculo
								into w_vlbasecalculo
								from tecbth_delivery.fichafinanceira 
								where (round(cdMatricula/1,0)*10)||SqContrato = w_i_funcionarios 
								and dtCompetencia = w_i_competencias
								and  cdverba = w_cdVerba;*/
								
								select coalesce(max(i_sequenciais),0)+1 
								into w_i_sequenciais 
								from bethadba.bases_calc 
								where i_entidades = w_i_entidades 
								and i_tipos_proc = w_i_tipos_proc 
								and i_competencias = w_i_competencias 
								and i_processamentos = 1 
								and i_funcionarios = w_i_funcionarios 
								and	i_tipos_bases = w_i_tipos_bases;
							
								message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip. Pro.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||1||
										' Tip. Bas.: '||w_i_tipos_bases||' Verba: '||w_cdVerba||' Vlr.: '||w_vlr_base  to client;
							
								insert into bethadba.bases_calc(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,i_tipos_bases,i_sequenciais,i_eventos,
																vlr_base) on existing skip
								values (w_i_entidades,w_i_tipos_proc,w_i_competencias,1,w_i_funcionarios,w_i_tipos_bases,w_i_sequenciais,null,
										/*w_vlbasecalculo*/w_vlr_base);
							end if;
							
							if (w_i_tipos_proc in(11,41,42,51,52,80)) and (w_cdVerba in (529)) then
							
								set w_i_tipos_bases=9;
								
								/*select first vlbasecalculo
								into w_vlbasecalculo
								from tecbth_delivery.fichafinanceira 
								where (round(cdMatricula/1,0)*10)||SqContrato = w_i_funcionarios 
								and dtCompetencia = w_i_competencias
								and  cdverba = w_cdVerba;*/
								
								select coalesce(max(i_sequenciais),0)+1 
								into w_i_sequenciais 
								from bethadba.bases_calc 
								where i_entidades = w_i_entidades 
								and i_tipos_proc = w_i_tipos_proc 
								and i_competencias = w_i_competencias 
								and i_processamentos = 1 
								and i_funcionarios = w_i_funcionarios 
								and	i_tipos_bases = w_i_tipos_bases;
							
								message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip. Pro.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||1||
										' Tip. Bas.: '||w_i_tipos_bases||' Verba: '||w_cdVerba||' Vlr.: '||w_vlr_base  to client;
							
								insert into bethadba.bases_calc(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,i_tipos_bases,i_sequenciais,i_eventos,
																vlr_base) on existing skip
								values (w_i_entidades,w_i_tipos_proc,w_i_competencias,1,w_i_funcionarios,w_i_tipos_bases,w_i_sequenciais,null,
										/*w_vlbasecalculo*/w_vlr_base);
							end if;
							
							if (w_i_tipos_proc in(11,41,42,51,52,80)) and (w_cdVerba in (527,528)) then
							
								set w_i_tipos_bases=11;
								
								/*select first vlbasecalculo
								into w_vlbasecalculo
								from tecbth_delivery.fichafinanceira 
								where (round(cdMatricula/1,0)*10)||SqContrato = w_i_funcionarios 
								and dtCompetencia = w_i_competencias
								and  cdverba = w_cdVerba;*/
								
								select coalesce(max(i_sequenciais),0)+1 
								into w_i_sequenciais 
								from bethadba.bases_calc 
								where i_entidades = w_i_entidades 
								and i_tipos_proc = w_i_tipos_proc 
								and i_competencias = w_i_competencias 
								and i_processamentos = 1 
								and i_funcionarios = w_i_funcionarios 
								and	i_tipos_bases = w_i_tipos_bases;
								
								message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip. Pro.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||1||
										' Tip. Bas.: '||w_i_tipos_bases||' Verba: '||w_cdVerba||' Vlr.: '||w_vlr_base  to client;
							
								insert into bethadba.bases_calc(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,i_tipos_bases,i_sequenciais,i_eventos,
																vlr_base)on existing skip
								values (w_i_entidades,w_i_tipos_proc,w_i_competencias,1,w_i_funcionarios,w_i_tipos_bases,w_i_sequenciais,null,
										/*w_vlbasecalculo*/w_vlr_base);
							end if;								
							
							if (w_i_tipos_proc in(11,41,42,51,52,80)) and (w_cdVerba in (526)) then
							
								set w_i_tipos_bases=12;
								
								/*select first vlbasecalculo
								into w_vlbasecalculo
								from tecbth_delivery.fichafinanceira 
								where (round(cdMatricula/1,0)*10)||SqContrato = w_i_funcionarios 
								and dtCompetencia = w_i_competencias
								and  cdverba = w_cdVerba;*/
								
								select coalesce(max(i_sequenciais),0)+1 
								into w_i_sequenciais 
								from bethadba.bases_calc 
								where i_entidades = w_i_entidades 
								and i_tipos_proc = w_i_tipos_proc 
								and i_competencias = w_i_competencias 
								and i_processamentos = 1 
								and i_funcionarios = w_i_funcionarios 
								and	i_tipos_bases = w_i_tipos_bases;
								
								message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip. Pro.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||1||
										' Tip. Bas.: '||w_i_tipos_bases||' Verba: '||w_cdVerba||' Vlr.: '||w_vlr_base  to client;
							
								insert into bethadba.bases_calc(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,i_tipos_bases,i_sequenciais,i_eventos,
																vlr_base)on existing skip
								values (w_i_entidades,w_i_tipos_proc,w_i_competencias,1,w_i_funcionarios,w_i_tipos_bases,w_i_sequenciais,null,
										/*w_vlbasecalculo*/w_vlr_base);
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
	end for;
end;



--------------------------------------------------
-- 92) Modalidades GFIP
--------------------------------------------------  

begin
	ooLoop: for oo as cnv_modalidades_gfip dynamic scroll cursor for
		select distinct i_entidades as w_i_entidades,i_tipos_proc as w_i_tipos_proc,i_competencias as w_i_competencias,i_processamentos as w_i_processamentos,i_funcionarios as w_i_funcionarios,
						0 as w_modalidade
		from bethadba.bases_calc 
		where not exists(select 1 
						from bethadba.modalidades_gfip as mod 
						where mod.i_entidades = bases_calc.i_entidades 
						and mod.i_funcionarios = bases_calc.i_funcionarios 
						and mod.i_competencias = bases_calc.i_competencias) 
		and i_tipos_bases in(6,7,11,12) 
		order by 1,3,5 asc
	do
		message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip. Pro.: '||w_i_tipos_proc||' Com.: '||w_i_competencias||' Pro.: '||w_i_processamentos to client;
	
		insert into bethadba.modalidades_gfip(i_entidades,i_tipos_proc,i_competencias,i_processamentos,i_funcionarios,modalidade) on existing skip
		values (w_i_entidades,w_i_tipos_proc,w_i_competencias,w_i_processamentos,w_i_funcionarios,w_modalidade);
		
	end for;
end
;

rollback;
--------------------------------------------------
-- 93) Variaveis
--------------------------------------------------  

begin
	// *****  Tabela bethadba.variaveis
	declare w_i_funcionarios integer;
	declare w_i_tipos_proc smallint;
	declare w_i_eventos smallint;
	declare w_dt_inicial date;
	declare w_dt_final date;
	declare w_observacao char(50);
	
	// *****  Variaveis auxiliares
	declare w_dt_admissao date;
	ooLoop: for oo as cnv_variaveis dynamic scroll cursor for
		select 1 as w_i_entidades,CdMatricula as w_CdMatricula,SqContrato as w_SqContrato,CdVerba as w_CdVerba,tpcalculo as w_tpCalculo,DtInicioMovto as w_DtInicioMovto,
			   cast(VlMovimento as decimal(12,2)) as w_vlr_variavel,NrOcorrencia as w_NrOcorrencia,1 as w_i_processamentos,dtfinalValidade as w_dtfinalValidade
		from tecbth_delivery.gp001_movimentofixo   
		order by 1,2,3 asc	
	do
		
		// *****  Inicializa Variaveis
		set w_i_funcionarios=null;
		set w_i_tipos_proc=null;
		set w_i_eventos=null;
		set w_dt_inicial=null;
		set w_dt_final=null;
		set w_observacao=null;
		
		// *****
		set w_dt_admissao=null;
		
		// *****  Converte a tabela bethabda.variaveis
		set w_i_funcionarios=cast(w_cdMatricula as integer);
		
		if w_tpCalculo in (1,9,11) then 
			set w_i_tipos_proc=11
		elseif w_tpCalculo in (2,10) then 
			set w_i_tipos_proc=42
		elseif w_tpCalculo = 3 then 
			set w_i_tipos_proc=80
		elseif w_tpCalculo = 5 then set 
			w_i_tipos_proc=51
		elseif w_tpCalculo in(6,7) then 
			set w_i_tipos_proc=52
		elseif w_tpCalculo = 8 then 
			set w_i_tipos_proc=41
		end if;
		
		if w_i_tipos_proc is null or w_i_tipos_proc = 0 then
			set w_i_tipos_proc=11
		end if;
		
		select i_eventos 
		into w_i_eventos 
		from tecbth_delivery.evento_aux 
		where evento = w_cdVerba
		and	retificacao = 'B' 
		and	resc_mov = 'N' 
		and	i_entidades = w_i_entidades;
		
		set w_dt_inicial = ymd(year(w_DtInicioMovto), month(w_DtInicioMovto),01);		
		set w_dt_final = months(w_dtInicioMovto,(w_NrOcorrencia-1));
		set w_dt_final = ymd(year(w_dt_final),month(w_dt_final),1);		
		
		select dt_admissao 
		into w_dt_admissao 
		from bethadba.funcionarios 
		where i_entidades = w_i_entidades 
		and i_funcionarios = w_i_funcionarios;
		
		if w_dt_inicial < ymd(year(w_dt_admissao),month(w_dt_admissao),1) then
			set w_dt_inicial=ymd(year(w_dt_admissao),month(w_dt_admissao),1)
		end if;
		
		if (w_i_tipos_proc != 42) and (w_dt_final is not null) and (w_i_eventos is not null) then
			message 'Ent.: '||w_i_entidades||' Fun.: '||w_i_funcionarios||' Tip. Pro.: '||w_i_tipos_proc||' Eve.: '||w_i_eventos||' Vlr.: '||w_vlr_variavel to client;
			
			insert into bethadba.variaveis(i_entidades,i_funcionarios,i_tipos_proc,i_processamentos,i_eventos,dt_inicial,dt_final,vlr_variavel)on existing skip
			values (w_i_entidades,w_i_funcionarios,w_i_tipos_proc,w_i_processamentos,w_i_eventos,w_dt_inicial,w_dt_final,w_vlr_variavel);
		end if;
		
	end for;
end;


--------------------------------------------------
-- 94) Deleta formulas sem uso
--------------------------------------------------  
delete bethadba.formulas_calc 
where trim(descricao) = ''
;

insert into bethadba.formulas_calc on existing skip
(select i_eventos,'valor vaux = valorvar(codeve);\x0D\x0Avlrref = vaux;\x0D\x0A\x0D\x0Avlrcalc = vaux;\x0D\x0A','11','','','','','35','','' 
 from bethadba.eventos
 where i_eventos not in (select i_eventos 
						 from bethadba.formulas_calc))
;

commit
;


------------------------------------------------
-- 95) Permissão nas tabelas
--------------------------------------------------  
if exists(select 1 from sys.sysprocedure where proc_name = 'permite_usuario' and creator = (select user_id from sys.sysuserperms where user_name = current user)) then
    drop procedure permite_usuario;
end if
;

create procedure permite_usuario(ps_usuario varchar(20),ps_grant varchar(10))
begin
	declare w_cmd long varchar;
	ooLoop: for oo as w_perm_user dynamic scroll cursor for 
			select distinct tname as w_tabela 
			from sys.syscolumns 
			where creator = current user 
	do
		set w_cmd = 'grant '||ps_grant||' on '||current user||'.'||w_tabela||' to '||ps_usuario;
		message w_cmd to client;
		execute immediate w_cmd;
	end for
end
;

call permite_usuario('tecbth_atb','all')
;
call permite_usuario('admin','SELECT')
;
call permite_usuario('externo','SELECT')
;

if exists(select 1 from sys.sysprocedure where proc_name = 'permite_usuario' and creator = (select user_id from sys.sysuserperms where user_name = current user)) then
    drop procedure permite_usuario;
end if

commit

 call bethadba.pg_setoption('fire_triggers','off'); update bethadba.dados_calc

SET dt_fechamento = date(year(i_competencias)|| (if month(i_competencias) < 10 THEN '0'+cast(month(i_competencias) AS varchar) else cast(month(i_competencias) AS varchar) endif)|| (if month(i_competencias) = 2 THEN '28' else '30' endif))
WHERE i_competencias < 20230501 
AND dt_fechamento is null; update bethadba.processamentos 

SET dt_fechamento = date(year(i_competencias)|| (if month(i_competencias) < 10 THEN '0'+cast(month(i_competencias) AS varchar) else cast(month(i_competencias) AS varchar) endif)|| (if month(i_competencias) = 2 THEN '28' else '30' endif))
WHERE i_competencias < 20230501 
AND dt_fechamento is null; update bethadba.processamentos 

SET pagto_realizado = 'S'
WHERE i_competencias < 20230501 
AND pagto_realizado = 'N'; commit; call bethadba.pg_setoption('fire_triggers','on'); 


INSERT INTO "bethadba"."formacoes"
select number (*) ,* from (SELECT  distinct dsareaestagio as nome, null as sigla_conselho,3 as nivel_formacao, 'N' AS seguranca_trab, NULL AS uf_conselho 
 FROM tecbth_delivery.gp001_FuncionarioEstagio )kdkd








	
	



































